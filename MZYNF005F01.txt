*----------------------------------------------------------------------*
***INCLUDE MZYNF005F01 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  busca_descricao
*&---------------------------------------------------------------------*
*       Busca a descrição dos campos da tela
*----------------------------------------------------------------------*
FORM busca_descricao.

* Empresa
  IF NOT zynfe005-bukrs IS INITIAL.
    SELECT SINGLE butxt FROM t001 INTO v_butxt
                WHERE bukrs = zynfe005-bukrs
                  AND spras = sy-langu.
  ELSE.
    CLEAR v_butxt.
  ENDIF.

* Local de negócio
  IF NOT zynfe005-bupla IS INITIAL AND
     NOT zynfe005-bukrs IS INITIAL.

    SELECT SINGLE name FROM j_1bbranch INTO v_name1
                WHERE branch = zynfe005-bupla
                  AND bukrs  = zynfe005-bukrs.
  ELSE.
    CLEAR v_name1.
  ENDIF.

* Incoterm
  IF NOT zynfe005-inco1 IS INITIAL.
    SELECT SINGLE bezei FROM tinct INTO v_bezei
                   WHERE inco1 = zynfe005-inco1
                     AND spras = sy-langu.
  ELSE.
    CLEAR v_bezei.
  ENDIF.

* Tipo de transporte
  IF NOT zynfe005-traty IS INITIAL.
    SELECT SINGLE vtext FROM tvtyt INTO vtext
                   WHERE traty = zynfe005-traty
                     AND spras = sy-langu.
  ELSE.
    CLEAR vtext.
  ENDIF.

* Tipo parceiro
  IF NOT zynfe005-parvw IS INITIAL.
    SELECT SINGLE partxt FROM j_1badt INTO partxt
         WHERE spras = sy-langu
           AND parvw  = zynfe005-parvw.
  ELSE.
    CLEAR partxt.
  ENDIF.

* Ctg do material
  IF NOT zynfe005-nftype IS INITIAL.
    SELECT SINGLE nfttxt FROM j_1baat INTO nfttxt
         WHERE spras = sy-langu
           AND nftype  = zynfe005-nftype.
  ELSE.
    CLEAR nfttxt.
  ENDIF.

* CNO
  IF NOT zynfe005-cno IS INITIAL.
    SELECT SINGLE cnotxt FROM zynft001 INTO cnotxt
             WHERE cno = zynfe005-cno
               AND dtvgini  <= zynfe005-pstdat
               AND dtvgfin  >= zynfe005-pstdat.
  ELSE.
    CLEAR cnotxt.
  ENDIF.

* Status
  IF NOT zynfe005-status IS INITIAL.
    PERFORM pega_descricao_dominio USING  'ZYNFE005-STATUS'
                                           zynfe005-status
                                        CHANGING v_status.
  ELSE.
    CLEAR v_status.
  ENDIF.

ENDFORM.                    " busca_descricao
*&---------------------------------------------------------------------*
*&      Form  trata_editor
*&---------------------------------------------------------------------*
*       Cria o editor de mensagens da tela 0600
*----------------------------------------------------------------------*
FORM trata_editor.

  IF edit IS INITIAL.

    CREATE OBJECT container EXPORTING container_name = 'EDIT'.
*  Edit Control.
    CREATE OBJECT edit EXPORTING
          parent            = container
        wordwrap_mode     = cl_gui_textedit=>wordwrap_at_fixed_position
          wordwrap_position = 72
          max_number_chars  = 10000000.

    READ TABLE wk_ftx WITH KEY seqnum = v_index.
    IF sy-subrc NE 0.
      wk_ftx-manual = 'X'.
    ENDIF.

    IF  v_tcode <> 'ZYNF005_E' AND
        zynfe005-docnum IS INITIAL.
      CALL METHOD edit->set_readonly_mode
        EXPORTING
          readonly_mode = 0.
    ELSE.
      CALL METHOD edit->set_readonly_mode
        EXPORTING
          readonly_mode = 1.
    ENDIF.

    CALL METHOD edit->set_statusbar_mode
      EXPORTING
        statusbar_mode = 1.
    CALL METHOD edit->set_toolbar_mode
      EXPORTING
        toolbar_mode = 1.

    CALL METHOD edit->set_comments_string
      EXPORTING
        comments_string = '*'.
    CALL METHOD edit->set_highlight_comments_mode
      EXPORTING
        highlight_comments_mode = 1.

    CALL METHOD edit->set_focus
      EXPORTING
        control = edit.

  ENDIF.

ENDFORM.                    " trata_editor
*&---------------------------------------------------------------------*
*&      Form  criar_mensagem
*&---------------------------------------------------------------------*
*       Criar a linha na tela de mensagens
*----------------------------------------------------------------------*
FORM criar_mensagem.

  CHECK v_tcode <> 'ZYNF005_E'.
  SORT wk_ftx1 BY seqnum.
  REFRESH wk_save_ftx.

  LOOP AT wk_ftx1.
    IF wk_ftx1-message IS INITIAL.
      MESSAGE e005.
    ENDIF.
    CLEAR wk_save_ftx.
    MOVE-CORRESPONDING wk_ftx1 TO wk_save_ftx.
    APPEND wk_save_ftx.
  ENDLOOP.

  IF sy-subrc <> 0.
    seq_num = 01.
  ELSE.
    seq_num = wk_ftx1-seqnum + 1.
  ENDIF.

  CLEAR wk_ftx.
  MOVE seq_num TO wk_ftx-seqnum.
  wk_ftx-linnum = 01.
  wk_ftx-manual = 'X'.
  APPEND wk_ftx.

  CLEAR wk_ftx1.
  REFRESH wk_ftx1.

  LOOP AT wk_ftx WHERE linnum = 01.
    CLEAR wk_ftx1.
    MOVE-CORRESPONDING wk_ftx TO wk_ftx1.
    LOOP AT wk_ref WHERE seqnum = wk_ftx-seqnum.
    ENDLOOP.
    IF sy-subrc = 0.
      MOVE 'X' TO wk_ftx1-bellin.
    ELSE.
      CLEAR wk_ftx1-bellin.
    ENDIF.
    APPEND wk_ftx1.
  ENDLOOP.
*  set screen 0500.
*  leave screen.

ENDFORM.                    " criar_mensagem
*&---------------------------------------------------------------------*
*&      Form  exclui_item
*&---------------------------------------------------------------------*
*       Exclui os itens, contabilizações e mensagens
*----------------------------------------------------------------------*
FORM exclui_item.

  READ TABLE itab_zynft006 WITH KEY mark = 'X'.
  IF sy-subrc NE 0.
    MESSAGE w040.
    EXIT.
  ENDIF.

  CALL FUNCTION 'POPUP_TO_CONFIRM_STEP'
    EXPORTING
      defaultoption  = 'Y'
      textline1      = text-039
      titel          = text-008
      start_column   = 25
      start_row      = 6
      cancel_display = ' '
    IMPORTING
      answer         = v_answer.
  IF v_answer = 'J'.

    CASE pressed_tab.

      WHEN 'FC_ITENS'.

        CLEAR v_tabix.
        LOOP AT itab_zynft006.
          v_tabix = v_tabix + 1.
          IF itab_zynft006-mark = 'X'.
            DELETE wk_ref        WHERE itmnum = itab_zynft006-itmnum.
            DELETE itab_zynft002 WHERE itmnum = itab_zynft006-itmnum.
            DELETE itab_zynft003 WHERE itmnum = itab_zynft006-itmnum.
            DELETE itab_zynft004 WHERE itmnum = itab_zynft006-itmnum.
            DELETE itab_zynft007 WHERE itmnum = itab_zynft006-itmnum.
            DELETE itab_zynft009 WHERE itmnum = itab_zynft006-itmnum.
            DELETE itab_zynft006 INDEX v_tabix.
* >>> Modificação ID 34 - 26/09/2011 - Início
            DELETE itab_zynft014 WHERE itmnum = itab_zynft006-itmnum.
* <<< Modificação ID 34 - 26/09/2011 - Fim
            v_tabix = v_tabix - 1.
            v_del = 'S'.
          ENDIF.

          "Controlar os códigos internos.
          IF v_del NE 'S'.
            IF v_tabix = 1.
              v_max = 10.
            ENDIF.
            itab_zynft002-itmnum = v_max.
            MODIFY itab_zynft002 TRANSPORTING itmnum
                                 WHERE itmnum = itab_zynft006-itmnum.
            itab_zynft003-itmnum = v_max.
            MODIFY itab_zynft003 TRANSPORTING itmnum
                                 WHERE itmnum = itab_zynft006-itmnum.
            itab_zynft004-itmnum = v_max.
            MODIFY itab_zynft004 TRANSPORTING itmnum
                                 WHERE itmnum = itab_zynft006-itmnum.
            itab_zynft007-itmnum = v_max.
            MODIFY itab_zynft007 TRANSPORTING itmnum
                                 WHERE itmnum = itab_zynft006-itmnum.
            itab_zynft009-itmnum = v_max.
            MODIFY itab_zynft009 TRANSPORTING itmnum
                                WHERE itmnum = itab_zynft006-itmnum.
            wk_ref-itmnum = v_max.
            MODIFY wk_ref TRANSPORTING itmnum
                                 WHERE itmnum = itab_zynft006-itmnum.
            itab_zynft006-itmnum = v_max.
            MODIFY itab_zynft006 TRANSPORTING itmnum.

* >>> Modificação ID 34 - 26/09/2011 - Início
            itab_zynft014-itmnum = v_max.
            MODIFY itab_zynft014 TRANSPORTING itmnum
                                WHERE itmnum = itab_zynft006-itmnum.
* <<< Modificação ID 34 - 26/09/2011 - Fim

            v_max = v_max + 10.
          ELSE.
            v_del = 'N'.
          ENDIF.
        ENDLOOP.

        IF itab_zynft006[] IS INITIAL.
          CLEAR v_max.
        ELSE.
          v_max = v_max - 10.
        ENDIF.

* Atualiza os totais
* Impostos
        CLEAR itab_zynft009a.
        REFRESH itab_zynft009a.

        LOOP AT itab_zynft009.
          CLEAR itab_zynft009-itmnum.
          MOVE-CORRESPONDING itab_zynft009 TO itab_zynft009a.
          COLLECT itab_zynft009a.
        ENDLOOP.

* Contábeis
        CLEAR   itab_zynft007_aux2.
        REFRESH itab_zynft007_aux2.
        LOOP AT itab_zynft007.
          CLEAR itab_zynft007-itmnum.
          MOVE-CORRESPONDING itab_zynft007 TO itab_zynft007_aux2.
          COLLECT itab_zynft007_aux2.
        ENDLOOP.

      WHEN 'FC_MSG'.
        LOOP AT wk_ftx1 WHERE selkz = 'X'.
          DELETE wk_ftx WHERE seqnum = wk_ftx1-seqnum
                          AND linnum = wk_ftx1-linnum.
          DELETE wk_save_ftx WHERE seqnum = wk_ftx1-seqnum
                          AND linnum = wk_ftx1-linnum.
          DELETE wk_ref WHERE seqnum = wk_ftx1-seqnum.

          DELETE wk_ftx1 INDEX sy-tabix.
        ENDLOOP.

    ENDCASE.

  ENDIF.

ENDFORM.                    " exclui_item
*&---------------------------------------------------------------------*
*&      Form  load_dados_editor
*&---------------------------------------------------------------------*
*       Lê os dados para carregar o editor
*----------------------------------------------------------------------*
FORM load_dados_editor.

  CHECK scr_prog[] IS INITIAL.

  READ TABLE wk_ftx1 INDEX v_index.
  LOOP AT wk_ftx WHERE seqnum = wk_ftx1-seqnum.
    MOVE wk_ftx-message TO scr_prog-lines.
    APPEND scr_prog.
  ENDLOOP.

  MOVE scr_prog[] TO scr_prog_aux[].

  IF NOT edit IS INITIAL.
    CALL METHOD edit->set_text_as_r3table
      EXPORTING
        table = scr_prog[].
  ENDIF.

ENDFORM.                    " load_dados_editor
*&---------------------------------------------------------------------*
*&      Form  SALVAR_DADOS
*&---------------------------------------------------------------------*
*       Grava os dados na tabelas
*----------------------------------------------------------------------*
FORM salvar_dados.
  DATA: v_existe VALUE 'N'.

  CLEAR v_save.

  PERFORM consistir_dados.

  IF v_save = 'N'.
    EXIT.
  ENDIF.

* Movendo Status
  IF zynfe005-docnum IS INITIAL.
    zynfe005-status = 'I'.
  ENDIF.

* Apagando os dados antigos das tabelas ZYNFT006 e ZYNFT007
  IF v_tcode = 'ZYNF005_A'.
* Move os dados do usuário
    IF zynfe005-docnum IS INITIAL.
      MOVE: sy-uname TO zynfe005-chanam,
            sy-uzeit TO zynfe005-chatim,
            sy-datum TO zynfe005-chadat.
    ENDIF.
    DELETE FROM zynft006 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft007 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft009 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft011 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND docnum = v_docnum_c.

* Salvando cabeçalho (alteração)
    MODIFY zynft005 FROM zynfe005.
  ELSE.
* Move os dados do usuário
    MOVE: sy-uname TO zynfe005-crenam,
          sy-uzeit TO zynfe005-cretim,
          sy-datum TO zynfe005-credat.
* Salvando cabeçalho (criação)
    INSERT INTO zynft005 VALUES zynfe005.
    WHILE sy-subrc NE 0.              "Fazer até que consiga inserir
      PERFORM gera_sequencial CHANGING zynfe005-nrseq.
      INSERT INTO zynft005 VALUES zynfe005.
      v_existe = 'S'.
    ENDWHILE.

    IF v_existe = 'S'.                "Se nrsequ. já existia
      v_existe = 'N'.
      "Anunciando que gerou novo n. sequencial.
      MESSAGE i051 WITH zynfe005-nrseq.
      PERFORM atualiza_nrseq.
    ENDIF.

  ENDIF.

* Salvando os itens
  MODIFY zynft006 FROM TABLE itab_zynft006.
  MODIFY zynft007 FROM TABLE itab_zynft007.
  MODIFY zynft009 FROM TABLE itab_zynft009.
  MODIFY zynft011 FROM TABLE wk_ref       .

* >>> Modificação ID 34 - 26/09/2011 - Início
* Salvar os dados de Importação e Exportação
  DELETE FROM zynft013 CLIENT SPECIFIED
                     WHERE mandt  = sy-mandt
                       AND nrseq  = zynfe005-nrseq.

  wa_zynft013-mandt  = sy-mandt.
  wa_zynft013-nrseq  = zynfe005-nrseq.
  wa_zynft013-docnum = zynfe005-docnum.

* Hora de entrada saida
  perform format_date   using ZYNFE005-pstdat
                     changing wa_zynft013-DT_SAI_ENT.
  concatenate wa_zynft013-DT_SAI_ENT
              v_hora_sai_ent
         into wa_zynft013-DT_SAI_ENT
         separated by space.

  modify zynft013 FROM wa_zynft013.

  DELETE FROM zynft014 CLIENT SPECIFIED
                     WHERE mandt  = sy-mandt
                       AND nrseq  = zynfe005-nrseq.

  MODIFY zynft014 FROM TABLE itab_zynft014.
* <<< Modificação ID 34 - 26/09/2011 - Fim

  COMMIT WORK AND WAIT.

*-----------------------------------------------------------------------
* Salvando as Mensagens

* Verifica se há registros em branco nas tabelas wk_ftx e wk_ftx1.
  DELETE wk_ftx WHERE message EQ space.
  DELETE wk_ftx1 WHERE message EQ space.

  CLEAR: xthead, rtext.
  REFRESH: xthead, rtext.

* se não houver o registro na TTXOB e TTXID, gravar
  PERFORM gravar_ttxob_ttxid.

  CLEAR: wk_ftx.

  LOOP AT wk_ftx.
    CONCATENATE wk_ftx-regime wk_ftx-seqnum wk_ftx-message INTO
        rtext-tdline.
    APPEND rtext.
    CLEAR wk_ftx.
  ENDLOOP.

  CLEAR v_tdname.
  CONCATENATE 'ZYNF005' zynfe005-nrseq INTO v_tdname.

  xthead-tdobject   = 'ZYNF005'.        "Objeto Fixo
  xthead-tdname     = v_tdname .        "ID do texto
  xthead-tdid       = 'ZYNF'   .        "Constante
  xthead-tdspras    = sy-langu .        "Idioma
  xthead-tdlinesize = 072      .        "Larg. linha do editor
  APPEND xthead.

  CALL FUNCTION 'SAVE_TEXT'             "Função salvar cpo. texto
       EXPORTING
          client          = sy-mandt
          header          = xthead      "Estrut. parâm. passados
          insert          = 'X'
          savemode_direct = 'X'
          owner_specified = 'X'
       TABLES
          lines           = rtext       "Recebe conteúdo Tab.Int.
       EXCEPTIONS
          id             = 1
          language       = 2
          name           = 3
          object         = 4
          OTHERS         = 5.
*--------------------------------------------------------------------

* Atualizando o a tabela auxiliar
  MOVE: zynfe005        TO wa_zynft005        ,
        itab_zynft006[] TO itab_zynft006_aux[],
        itab_zynft007[] TO itab_zynft007_aux[],
        wk_ref[]        TO wk_ref_aux[],
        wk_ftx[]        TO wk_ftx_aux[]       .

  MESSAGE s012.             "Registro salvo com sucesso

  v_tcode = 'ZYNF005_E'.
  PERFORM busca_descricao.
  PERFORM limpa_editor.

ENDFORM.                    " SALVAR_DADOS
*&---------------------------------------------------------------------*
*&      Form  excluir_dados
*&---------------------------------------------------------------------*
*       Elimina os dados das tabelas
*----------------------------------------------------------------------*
FORM excluir_dados.

  CLEAR: v_comandada, v_nrseqaux, zynft001, zynft005.
* Nota fiscal de transferência
  SELECT SINGLE * FROM zynft001
     WHERE cno = zynfe005-cno.

  IF zynft001-transfnf EQ 'X'.
    IF NOT zynfe005-nrseq_comand IS INITIAL.
      MESSAGE i087 WITH zynfe005-nrseq_comand.
      EXIT.
    ENDIF.
  ENDIF.

* Nota Fiscal Comandada
  SELECT SINGLE * FROM zynft005
     WHERE nrseq_comand = zynfe005-nrseq.

  IF sy-subrc EQ 0.
    v_comandada = 'X'.
    v_nrseqaux = zynft005-nrseq.
  ENDIF.

  CALL FUNCTION 'POPUP_TO_CONFIRM'
    EXPORTING
      titlebar              = text-008
      text_question         = text-009
      text_button_1         = text-010
      icon_button_1         = 'ICON_OKAY'
      text_button_2         = text-011
      icon_button_2         = 'ICON_CANCEL'
      default_button        = '1'
      display_cancel_button = ' '
    IMPORTING
      answer                = v_answer.

  IF v_answer = '1'.

** Primeiramente deve-se fazer o estorno na nota
** Se ok
*    perform estorna_f02.
*
*    "Verifica se foi feita a saída da NF para cancelar
*    select single printd from j_1bnfdoc into j_1bnfdoc-printd
*                         where docnum = zynfe005-docnum.
*    if sy-subrc = 0 and j_1bnfdoc-printd is initial.
*      perform gera_j1b3n_2.
*    else.
*      v_ok_bi = 'S'.
*    endif.
*
*    if v_ok_bi = 'S'.
*      perform elimina_nf.
*    endif.
*
*    if v_ok_bi = 'N'.
*      clear v_ok_bi.
*      exit.
*    endif.

* deleta as mensagens.
    CLEAR v_tdname.
    CONCATENATE 'ZYNF005' zynfe005-nrseq INTO v_tdname.

    DELETE FROM  stxl WHERE relid = 'TX'
                        AND tdobject = 'ZYNF005'
                        AND tdname = v_tdname
                        AND tdid = 'ZYNF'
                        AND tdspras = sy-langu.
* Atualiza o registro caso o usuário delete a Nota fiscal de Entrada
* comandada
    IF v_comandada EQ 'X'.
      UPDATE zynft005 SET nrseq_comand  = space
                 WHERE nrseq        = v_nrseqaux
                   AND nrseq_comand = zynfe005-nrseq.
    ENDIF.

* deleta as tabelas transparentes
    DELETE FROM zynft005 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft006 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft007 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft009 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft011 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND docnum = zynfe005-docnum.

* >>> Modificação ID 34 - 26/09/2011 - Início
    DELETE FROM zynft013 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft014 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.
* <<< Modificação ID 34 - 26/09/2011 - Fim

    COMMIT WORK AND WAIT.
    PERFORM limpa_dados.
    MESSAGE s039.
    LEAVE TO SCREEN 0.
  ENDIF.

ENDFORM.                    " excluir_dados
*&---------------------------------------------------------------------*
*&      Form  salvar_texto
*&---------------------------------------------------------------------*
*       Move o texto para a tabela interna de textos
*----------------------------------------------------------------------*
FORM salvar_texto.

  DATA: n TYPE i.

  IF NOT edit IS INITIAL.
    CALL METHOD edit->get_text_as_r3table
      IMPORTING
        table = scr_prog[].
  ENDIF.


  CLEAR v_tabix.
  LOOP AT scr_prog.
    v_tabix = sy-tabix.
    READ TABLE wk_ftx WITH KEY seqnum = wk_ftx1-seqnum
                               linnum = v_tabix.


    IF sy-subrc = 0. "Já existe a linha
      MOVE: scr_prog-lines TO wk_ftx-message.
      MODIFY wk_ftx TRANSPORTING message
                      WHERE seqnum = wk_ftx1-seqnum
                        AND linnum = v_tabix.

      IF v_tabix = 1.
        MOVE: scr_prog-lines TO wk_ftx1-message.
        MODIFY wk_ftx1 TRANSPORTING message
                        WHERE seqnum = wk_ftx1-seqnum
                          AND linnum = wk_ftx1-linnum.
      ENDIF.
    ELSE.
      MOVE: wk_ftx1        TO wk_ftx,
            scr_prog-lines TO wk_ftx-message,
            'X'            TO wk_ftx-regime.

      wk_ftx-linnum = v_tabix.
      APPEND wk_ftx.
    ENDIF.
  ENDLOOP.

* Deleta as linha da tabela de texto com o cpo message inicial.
* delete wk_ftx where message eq space.

  DESCRIBE TABLE scr_prog LINES n.
  CLEAR v_tabix.
  LOOP AT wk_ftx WHERE seqnum = wk_ftx1-seqnum.
    v_tabix = v_tabix + 1.
    IF v_tabix > n.
      DELETE wk_ftx INDEX sy-tabix.
    ENDIF.
  ENDLOOP.

  CLEAR: scr_prog[], scr_prog_aux.
  REFRESH: scr_prog[], scr_prog_aux.
  CLEAR ok_code.
  SET SCREEN 0.

ENDFORM.                    " salvar_texto
*&---------------------------------------------------------------------*
*&      Form  desmarcar_tudo
*&---------------------------------------------------------------------*
*       Desmarca os itens das TCs
*----------------------------------------------------------------------*
FORM desmarcar_tudo.

  CASE pressed_tab.

    WHEN 'FC_ITENS'.
      LOOP AT itab_zynft006.
        CLEAR itab_zynft006-mark.
        MODIFY itab_zynft006 INDEX sy-tabix.
      ENDLOOP.

*    when 'FC_CONT'.
*      loop at itab_zynft007.
*        clear itab_zynft007-mark.
*        modify itab_zynft007 index sy-tabix.
*      endloop.

    WHEN 'FC_MSG'.
      LOOP AT wk_ftx1.
        CLEAR wk_ftx1-selkz.
        MODIFY wk_ftx1 INDEX sy-tabix.
      ENDLOOP.

  ENDCASE.

ENDFORM.                    " desmarcar_tudo
*&---------------------------------------------------------------------*
*&      Form  marcar_tudo
*&---------------------------------------------------------------------*
*       marca os itens das TCs
*----------------------------------------------------------------------*
FORM marcar_tudo.

  CASE pressed_tab.

    WHEN 'FC_ITENS'.
      LOOP AT itab_zynft006.
        itab_zynft006-mark = 'X'.
        MODIFY itab_zynft006 INDEX sy-tabix.
      ENDLOOP.

*    when 'FC_CONT'.
*      loop at itab_zynft007.
*        itab_zynft007-mark = 'X'.
*        modify itab_zynft007 index sy-tabix.
*      endloop.

    WHEN 'FC_MSG'.
      LOOP AT wk_ftx1.
        wk_ftx1-selkz = 'X'.
        MODIFY wk_ftx1 INDEX sy-tabix.
      ENDLOOP.

  ENDCASE.

ENDFORM.                    " marcar_tudo
*&---------------------------------------------------------------------*
*&      Form  message_link_items
*&---------------------------------------------------------------------*
FORM message_link_items.

  read_index_msg_link = 1.

  IF count > 1.
    MESSAGE s009.                  "Selecionar só uma mensagem
    CLEAR ok_code.
    EXIT.
  ENDIF.
  LOOP AT wk_ftx1 WHERE selkz = 'X'.
    CLEAR wk_ftx1-selkz.
    MODIFY wk_ftx1.
    wk_seq = wk_ftx1-seqnum.        " sequência
  ENDLOOP.
  IF sy-subrc <> 0.
    MESSAGE s010.                   "Selecionar primeiro mensagem
    CLEAR ok_code.
    EXIT.
  ENDIF.
  CLEAR wk_ref1.
  REFRESH wk_ref1.
  LOOP AT itab_zynft006.
    LOOP AT wk_ref WHERE itmnum = itab_zynft006-itmnum AND
                         seqnum = wk_seq.
    ENDLOOP.
    IF sy-subrc = 0.
      MOVE 'X' TO wk_ref1-selkz.
    ELSE.
      CLEAR wk_ref1-selkz.
    ENDIF.
    MOVE wk_seq               TO wk_ref1-seqnum.
    MOVE itab_zynft006-itmnum TO wk_ref1-itmnum.
    MOVE itab_zynft006-matnr  TO wk_ref1-matnr.
    MOVE itab_zynft006-maktx  TO wk_ref1-maktx.
    APPEND wk_ref1.
  ENDLOOP.

  CALL SCREEN '0510' STARTING AT 10 07 ENDING AT 76 15.

ENDFORM.                    " message_link_items
*&---------------------------------------------------------------------*
*&      Form  update_ref_messages
*&---------------------------------------------------------------------*
FORM update_ref_messages.
  DATA: wk_bellin LIKE j_1bdyftx-bellin.

  CHECK v_tcode <> 'ZYNF005_E'.

* Apaga todas as referências na sequências
  LOOP AT wk_ref WHERE seqnum = wk_seq.
    DELETE wk_ref.
  ENDLOOP.

* Cria as novas referências na sequência
  LOOP AT wk_ref1 WHERE selkz = 'X'.
    MOVE: sy-mandt        TO wk_ref-mandt ,
          zynfe005-docnum TO wk_ref-docnum,
          zynfe005-nrseq  TO wk_ref-nrseq ,
          wk_ref1-itmnum  TO wk_ref-itmnum,
          wk_ref1-seqnum  TO wk_ref-seqnum.
    APPEND wk_ref.
  ENDLOOP.
* Atualiza o indicador de ligação na wk_ftx1
  LOOP AT wk_ref WHERE seqnum = wk_seq.
  ENDLOOP.
  IF sy-subrc = 0.
    MOVE 'X' TO wk_bellin.
  ELSE.
    CLEAR wk_bellin.
  ENDIF.
  LOOP AT wk_ftx1 WHERE seqnum = wk_seq.
    MOVE wk_bellin TO wk_ftx1-bellin.
    MODIFY wk_ftx1.
  ENDLOOP.

  SORT wk_ref BY itmnum seqnum.

ENDFORM.                    " update_ref_messages
*---------------------------------------------------------------------*
*       FORM BLAETTERN                                                *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM blaettern.
  DATA: b_overlapping(1) TYPE c VALUE 'X',
        v_entry_new      LIKE sy-tabix   ,
        nextline         TYPE i          .

  CASE sy-dynnr.
    WHEN '0120'.
      DESCRIBE TABLE itab_zynft006 LINES v_line.
      IF v_line EQ 0.
        EXIT.
      ENDIF.
      v_entry_new = tc_itens-current_line.
    WHEN '0140'.
      DESCRIBE TABLE itab_zynft007 LINES v_line.
      IF v_line EQ 0.
        EXIT.
      ENDIF.
      v_entry_new = tc_cont-current_line.
    WHEN '0123'.
      DESCRIBE TABLE itab_zynft009 LINES v_line.
      IF v_line EQ 0.
        EXIT.
      ENDIF.
      v_entry_new = tc_imp-current_line.
    WHEN '0124'.
      DESCRIBE TABLE wk_ref LINES v_line.
      IF v_line EQ 0.
        EXIT.
      ENDIF.
      v_entry_new = tc_msgitm-current_line.
    WHEN '0160'.
      DESCRIBE TABLE itab_zynft009a LINES v_line.
      IF v_line EQ 0.
        EXIT.
      ENDIF.
      v_entry_new = tc_imposto-current_line.
  ENDCASE.

  CALL FUNCTION 'SCROLLING_IN_TABLE'
    EXPORTING
      entry_to       = v_line
      loops          = 10
      ok_code        = ok_code
      entry_act      = v_entry_new
      last_page_full = ' '
      overlapping    = b_overlapping
    IMPORTING
      entry_new      = nextline.

  CASE sy-dynnr.
    WHEN '0120'.
      tc_itens-top_line   = nextline.
    WHEN '0140'.
      tc_cont-top_line    = nextline.
    WHEN '0123'.
      tc_imp-top_line     = nextline.
    WHEN '0124'.
      tc_msgitm-top_line  = nextline.
    WHEN '0160'.
      tc_imposto-top_line = nextline.
  ENDCASE.

ENDFORM.                    "blaettern
*&---------------------------------------------------------------------*
*&      Form  POPUP_MESSAGE
*&---------------------------------------------------------------------*
*       Mensagem de confirmação de gravação de dados
*----------------------------------------------------------------------*
FORM popup_message USING value(p_textline1)
                         value(p_title).

  CALL FUNCTION 'POPUP_TO_CONFIRM_STEP'
    EXPORTING
      defaultoption = 'Y'
      textline1     = p_textline1
      titel         = p_title
    IMPORTING
      answer        = v_answer
    EXCEPTIONS
      OTHERS        = 1.
ENDFORM.                    " POPUP_MESSAGE
*&---------------------------------------------------------------------*
*&      Form  limpa_dados
*&---------------------------------------------------------------------*
*       Usado antes de encerrar o programa
*----------------------------------------------------------------------*
FORM limpa_dados.

* Tabelas internas
  CLEAR: itab_zynft002     ,
         itab_zynft003     ,
         itab_zynft004     ,
         itab_zynft006     ,
         itab_zynft006_aux ,
         itab_zynft007     ,
         itab_zynft007_aux ,
         itab_zynft007_aux2,
         itab_zynft009     ,
         itab_zynft009_aux ,
         itab_zynft009a    ,
         scr_prog          ,
         scr_prog_aux      ,
         itab_pf_status    ,
         xthead            ,
         wk_ftx            ,
         wk_ftx1           ,
         wk_save_ftx       ,
         wk_ref            ,
         wk_ref1           ,
         rtext             .

  REFRESH: itab_zynft002     ,
           itab_zynft003     ,
           itab_zynft004     ,
           itab_zynft006     ,
           itab_zynft006_aux ,
           itab_zynft007     ,
           itab_zynft007_aux ,
           itab_zynft007_aux2,
           itab_zynft009     ,
           itab_zynft009_aux ,
           itab_zynft009a    ,
           scr_prog         ,
           scr_prog_aux     ,
           itab_pf_status   ,
           xthead           ,
           wk_ftx           ,
           wk_ftx1          ,
           wk_save_ftx      ,
           wk_ref           ,
           wk_ref1          ,
           rtext            .

* Work Areas
  CLEAR: wa_zynft001,
         wa_zynft002,
         itab_zynft003,
         wa_zynft005,
         zynft002   ,
         zynft005   ,
         zynfe005   ,
         zynft006   ,
         zynfe006   ,
         zynft007   ,
         zynfe007   ,
         j_1bdyftx  ,
         j_1bnfdoc  ,
         j_1bdyref  ,
         icons      ,
* >>> Modificação ID 34 - 26/09/2011 - Início
         wa_zynft013.
* <<< Modificação ID 34 - 26/09/2011 - Fim

* Variáveis
  CLEAR: ok_code            ,
        mark               ,
        v_tabix            ,
        v_tcode            ,
        v_answer           ,
        v_cols             ,
        v_butxt            ,
        v_name1            ,
        v_paridtxt         ,
        v_paridtxt2        ,
        v_paridtxt3        ,
        v_paridtxt4        ,
        v_bezei            ,
        nfttxt             ,
        partxt             ,
        localentxt         ,
        localentxt2        ,
        localretxt         ,
        localretxt2        ,
        cnotxt             ,
        v_max              ,
        v_del              ,
        ligado             ,
        loop_lines         ,
        tab_lines          ,
        message_lines      ,
        read_index_message ,
        pagebegin          ,
        read_index_msg_link,
        seq_num            ,
        wk_seq             ,
        msg_link_lines     ,
        count              ,
        v_campo            ,
        v_valor            ,
        v_index            ,
        v_tdname           ,
        nfttxt             ,
        v_est_f02          ,
        descricao          ,
        zynfe005-data_entry,
* >>> Modificação ID 34 - 26/09/2011 - Início
        v_dt_di            ,
        v_hr_di            ,
        v_dt_desembaraco   ,
        v_hr_desembaraco   ,
        v_hora_sai_ent     .
* <<< Modificação ID 34 - 26/09/2011 - Fim

  v_ini = 'S'.
  v_est_nota = 'N'.

  PERFORM limpa_editor.

ENDFORM.                    " limpa_dados
*&---------------------------------------------------------------------*
*&      Form  trata_saida
*&---------------------------------------------------------------------*
*       Faz as consistências para a saída do programa
*----------------------------------------------------------------------*
FORM trata_saida.

  IF v_tcode = 'ZYNF005_E'.
    PERFORM sair_prog.
  ELSE.
    IF zynfe005 NE wa_zynft005                OR
       itab_zynft006[] NE itab_zynft006_aux[] OR
       itab_zynft007[] NE itab_zynft007_aux[] OR
       wk_ftx[]        NE wk_ftx_aux[]        OR
       wk_ref[]        NE wk_ref_aux[].
      PERFORM popup_message USING text-005 text-006.
      IF v_answer = 'J'.
        PERFORM salvar_dados.
        IF v_save NE 'N'.
          PERFORM sair_prog.
        ENDIF.
      ELSEIF v_answer = 'N'.
        PERFORM sair_prog.
      ENDIF.
    ELSE.
      PERFORM sair_prog.
    ENDIF.
  ENDIF.

ENDFORM.                    " trata_saida
*&---------------------------------------------------------------------*
*&      Form  sair_prog
*&---------------------------------------------------------------------*
*       Sai do programa conforme o v_tcode
*----------------------------------------------------------------------*
FORM sair_prog.

  PERFORM verifica_incompletos.
  PERFORM limpa_dados.
  PERFORM unlock_record.
  IF sy-tcode = 'ZYNF005'.
    LEAVE PROGRAM.
  ELSE.
    LEAVE TO SCREEN 0001.
  ENDIF.

ENDFORM.                    " sair_prog
*&---------------------------------------------------------------------*
*&      Form  message_header
*&---------------------------------------------------------------------*
*       Chama a tela de mensagens
*----------------------------------------------------------------------*
FORM message_header.

* Pega a primeira linha de casa sequência
  CLEAR wk_ftx1.
  REFRESH wk_ftx1.
  LOOP AT wk_ftx WHERE linnum = '01'.
    LOOP AT wk_ref WHERE  seqnum  = wk_ftx-seqnum.
    ENDLOOP.
    CLEAR wk_ftx1.
    MOVE-CORRESPONDING wk_ftx TO wk_ftx1.
    IF sy-subrc <> 0.
      CLEAR wk_ftx1-bellin.
    ELSE.
      MOVE 'X' TO wk_ftx1-bellin.
    ENDIF.
    APPEND wk_ftx1.
  ENDLOOP.
  IF sy-subrc <> 0.
    MESSAGE s011.                        " Nenhuma mensagem encontrada
  ENDIF.
  pagebegin = 0.

ENDFORM.                    " message_header
*&---------------------------------------------------------------------*
*&      Form  gravar_ttxob_ttxid
*&---------------------------------------------------------------------*
*       Grava os registro para o funcionar as funções save e read text
*----------------------------------------------------------------------*
FORM gravar_ttxob_ttxid.
  TABLES: ttxob, ttxid, ttxit.

  SELECT SINGLE * FROM ttxid WHERE tdobject = 'ZYNF005'
                               AND tdid     = 'ZYNF'.
  IF sy-subrc NE 0.
    MOVE: 'ZYNF005' TO ttxid-tdobject  ,
          'ZYNF'    TO ttxid-tdid      ,
          'X'       TO ttxid-tdshowname,
          'ZYNF005' TO ttxid-tdobject  ,
          'ZYNF'    TO ttxid-tdid      ,
          text-007  TO ttxit-tdtext    .

    INSERT INTO ttxid VALUES ttxid.
    INSERT INTO ttxit VALUES ttxit.
  ENDIF.

  SELECT SINGLE * FROM ttxob WHERE tdobject = 'ZYNF005'.

  IF sy-subrc NE 0.
    MOVE: 'ZYNF005' TO ttxob-tdobject  ,
          'D'       TO ttxob-tdsavemode,
          'TX'      TO ttxob-tdappl    ,
          132       TO ttxob-tdlinesize.

    INSERT INTO ttxob VALUES ttxob.
  ENDIF.

ENDFORM.                    " gravar_ttxob_ttxid
*&---------------------------------------------------------------------*
*&      Form  lock_record
*&---------------------------------------------------------------------*
*       Bloqueia a alteração de duas notas ao mesmo tempo
*----------------------------------------------------------------------*
FORM lock_record.

  IF v_tcode NE 'ZYNF005_E'.
    CALL FUNCTION 'ZYNF_ENQUEUE_ZYNFT005'
      EXPORTING
        mandt          = sy-mandt
        nrseq          = zynfe005-nrseq
      EXCEPTIONS
        foreign_lock   = 1
        system_failure = 2.

    IF sy-subrc <> 0.
      v_tcode = 'ZYNF005_E'.
      v_ini = 'N'.
      MESSAGE i013 WITH sy-msgv1 text-012 zynfe005-nrseq.
    ENDIF.
  ENDIF.

ENDFORM.                    " lock_record
*&---------------------------------------------------------------------*
*&      Form  selecionar_dados
*&---------------------------------------------------------------------*
*       Seleciona os dados no exibir/modificar
*----------------------------------------------------------------------*
FORM selecionar_dados.

* >>> Modificação ID 34 - 26/09/2011 - Início
  DATA: vl_index_006    TYPE sy-tabix.
* <<< Modificação ID 34 - 26/09/2011 - Fim

* Cabeçalho
  SELECT SINGLE * FROM zynft005 INTO zynfe005
            WHERE nrseq = zynfe005-nrseq.

  IF sy-subrc = 0.
    MOVE zynfe005 TO wa_zynft005.

* Itens
    SELECT * FROM zynft006 INTO TABLE itab_zynft006
            WHERE nrseq = zynfe005-nrseq.

    SORT itab_zynft006 BY itmnum.

    MOVE itab_zynft006[] TO itab_zynft006_aux[].

* >>> Modificação ID 34 - 26/09/2011 - Início
    SELECT * FROM zynft014 INTO TABLE itab_zynft014
            WHERE nrseq = zynfe005-nrseq.

    if sy-subrc is initial.

      SORT itab_zynft014 BY itmnum.

    endif.
* <<< Modificação ID 34 - 26/09/2011 - Fim

* Contabilização
    SELECT * FROM zynft007 INTO TABLE itab_zynft007
            WHERE nrseq = zynfe005-nrseq.

    SORT itab_zynft007 BY itmnum.

    MOVE itab_zynft007[] TO itab_zynft007_aux[].

    LOOP AT itab_zynft007.
      CLEAR itab_zynft007-itmnum.
      MOVE-CORRESPONDING itab_zynft007 TO itab_zynft007_aux2.
      CLEAR itab_zynft007_aux2-nrfiscal.
      COLLECT itab_zynft007_aux2.
    ENDLOOP.

* Impostos
    SELECT * FROM zynft009 INTO TABLE itab_zynft009
            WHERE nrseq = zynfe005-nrseq.

    SORT itab_zynft009 BY itmnum.

    MOVE itab_zynft009[] TO itab_zynft009_aux[].

    LOOP AT itab_zynft009.
      CLEAR itab_zynft009-itmnum.
      MOVE-CORRESPONDING itab_zynft009 TO itab_zynft009a.
      COLLECT itab_zynft009a.
    ENDLOOP.

* move os dados dos parceiros
    IF zynfe005-parvw = 'BR'. "Filial
      PERFORM check_branch.
    ELSE.
      PERFORM: check_parceiro.
    ENDIF.
    v_parvw = zynfe005-parvw.

    IF NOT zynfe005-localret IS INITIAL.
      PERFORM check_loc_ret.
    ENDIF.
    IF NOT zynfe005-localent IS INITIAL.
      PERFORM check_loc_ent .
    ENDIF.

* Move os dados da filial
    IF NOT zynfe005-bupla IS INITIAL.
      SELECT SINGLE adrnr FROM j_1bbranch INTO v_adrnr
                     WHERE bukrs  = zynfe005-bukrs
                       AND branch = zynfe005-bupla.
      SELECT SINGLE country region city1 FROM adrc INTO
                  (v_land1,v_bland,v_city1)
                  WHERE addrnumber = v_adrnr.
    ENDIF.

* Consiste a natureza de operação
    IF NOT zynfe005-cno IS INITIAL.
      SELECT SINGLE * FROM zynft001 INTO wa_zynft001
                          WHERE cno      = zynfe005-cno
                            AND dtvgini  <= zynfe005-pstdat
                            AND dtvgfin  >= zynfe005-pstdat.

    ELSE.
      CLEAR wa_zynft001.
    ENDIF.


* Parâmetros fiscais
    IF zynfe005-status NE 'E' AND zynfe005-status NE 'G' AND
       zynfe005-status NE 'C'.
      IF NOT zynfe005-refdocnum IS INITIAL.
* Busca Nº da nota e série
        SELECT SINGLE * FROM j_1bnfdoc
                        WHERE docnum = zynfe005-refdocnum.

* Buscando os itens da NF referência
        SELECT * FROM j_1bnflin
                  INTO CORRESPONDING FIELDS OF TABLE itab_zynfe010
                  WHERE docnum = zynfe005-refdocnum.

* Buscando itens da NF
        SELECT * FROM j_1bnflin
                  INTO TABLE itab_j_1bnflin
                  WHERE docnum = zynfe005-refdocnum.

* Buscando itens fiscais da NF
        SELECT * FROM j_1bnfstx
                  INTO TABLE itab_j_1bnfstx
                  WHERE docnum = zynfe005-refdocnum.

        PERFORM busca_valor_nf.
      ENDIF.
      LOOP AT itab_zynft006.

* >>> Modificação ID 34 - 26/09/2011 - Início
        clear vl_index_006.
        vl_index_006 = sy-tabix.

        read table itab_zynft014 index vl_index_006.

        if sy-subrc is initial.

          CLEAR wa_zynft014.
          MOVE-CORRESPONDING itab_zynft014 TO wa_zynft014.

          perform format_date_2 using wa_zynft014-dt_di
                       changing v_dt_di.
          v_hr_di = wa_zynft014-dt_di+12(06).

          perform format_date_2 using wa_zynft014-dt_DESEMBARACO
                       changing v_dt_DESEMBARACO.
          v_hr_DESEMBARACO = wa_zynft014-dt_DESEMBARACO+12(06).


        endif.
* <<< Modificação ID 34 - 26/09/2011 - Fim

        CLEAR zynfe006.
        MOVE-CORRESPONDING itab_zynft006 TO zynfe006.
        IF NOT zynfe005-pstdat IS INITIAL.
          PERFORM propor_valores.
        ENDIF.
        netwrt = zynfe006-netwr + zynfe006-netdis +
                 zynfe006-netfre + zynfe006-netins +
                 zynfe006-netoth.
        PERFORM atualiza_item.
      ENDLOOP.
* Preenchendo o V_MAX
      DESCRIBE TABLE itab_zynft006 LINES v_line.
      v_max = v_line * 10.
    ENDIF.

* Carrega mensagens
    CLEAR v_tdname.
    CONCATENATE 'ZYNF005' zynfe005-nrseq INTO v_tdname.

    CLEAR: xthead, rtext.
    REFRESH: xthead, rtext.

    xthead-tdobject   = 'ZYNF005'.        "Objeto Fixo
    xthead-tdname     = v_tdname.         "ID do texto
    xthead-tdid       = 'ZYNF'.           "Constante
    xthead-tdspras    = sy-langu.         "Idioma
    xthead-tdlinesize = 072.              "Larg. linha do editor
    APPEND xthead.

    CALL FUNCTION 'READ_TEXT'
      EXPORTING
        client                  = sy-mandt
        id                      = xthead-tdid
        language                = sy-langu
        name                    = xthead-tdname
        object                  = xthead-tdobject
      TABLES
        lines                   = rtext
      EXCEPTIONS
        id                      = 1
        language                = 2
        name                    = 3
        not_found               = 4
        object                  = 5
        reference_check         = 6
        wrong_access_to_archive = 7
        OTHERS                  = 8.

    SELECT * FROM j_1bnfftx INTO TABLE itab_manual
             WHERE docnum = zynfe005-docnum.

    CLEAR: rtext, wk_ftx, wk_ftx1.

    LOOP AT rtext.

      IF rtext-tdline(1) EQ 'X'.

        READ TABLE itab_manual WITH KEY seqnum = rtext-tdline+1(2).
        IF sy-subrc = 0.
          wk_ftx-manual = itab_manual-manual.
        ELSE.
          CLEAR wk_ftx-manual.
        ENDIF.

* v_seqnum diferente de rtext-tdline(2) ou Zero------------------------*
* Tratamento para as Notas Fiscais novas, elas virão com o
* rtext-tdline(1) igual a SPACE (se a mensagem foi criada pelo usuário)
* ou X (se a mensagem foi criada pelo Regime Especial).
        IF v_seqnum NE rtext-tdline+1(2) OR v_seqnum IS INITIAL.
          v_linnum = 1.

          MOVE: rtext-tdline(1) TO wk_ftx-regime,
                         rtext-tdline+1(2) TO wk_ftx-seqnum ,
                         v_linnum          TO wk_ftx-linnum ,
                         rtext-tdline+3    TO wk_ftx-message,
                         wk_ftx-seqnum     TO v_seqnum      ,
                         wk_ftx            TO wk_ftx1       .
          APPEND: wk_ftx,
                  wk_ftx1.
        ELSE.
* v_seqnum igual a rtext-tdline(2) ou Zero-------------------------*
* Tratamento para as Notas Fiscais novas, elas virão com o
* rtext-tdline(1) igual a SPACE (se a mensagem foi criada pelo usuário)
* ou X (se a mensagem foi criada pelo Regime Especial).
          MOVE: rtext-tdline(1) TO wk_ftx-regime,
                rtext-tdline+1(2) TO wk_ftx-seqnum ,
                v_linnum          TO wk_ftx-linnum ,
                rtext-tdline+3    TO wk_ftx-message,
                wk_ftx-seqnum     TO v_seqnum      .
          APPEND wk_ftx.
        ENDIF.
      ELSE.
* v_seqnum diferente de rtext-tdline(2) ou Zero------------------------*
* Tratamento para as Notas Fiscais Antigas, não possuem o campo
* wk_ftx-regime concatenado.
        READ TABLE itab_manual WITH KEY seqnum = rtext-tdline(2).
        IF sy-subrc = 0.
          wk_ftx-manual = itab_manual-manual.
        ELSE.
          CLEAR wk_ftx-manual.
        ENDIF.

        IF v_seqnum NE rtext-tdline(2) OR v_seqnum IS INITIAL.
          v_linnum = 1.
          MOVE: rtext-tdline+0(2) TO wk_ftx-seqnum ,
                v_linnum          TO wk_ftx-linnum ,
                rtext-tdline+2    TO wk_ftx-message,
                wk_ftx            TO wk_ftx1       ,
                wk_ftx-seqnum     TO v_seqnum      .
          APPEND: wk_ftx,
                  wk_ftx1.
        ELSE.
* v_seqnum igual a rtext-tdline(2) ou Zero-------------------------*
* Tratamento para as Notas Fiscais Antigas, não possuem o campo
* wk_ftx-regime concatenado.
          MOVE: rtext-tdline+0(2) TO wk_ftx-seqnum ,
                v_linnum          TO wk_ftx-linnum ,
                rtext-tdline+2    TO wk_ftx-message,
                wk_ftx-seqnum     TO v_seqnum      .
          APPEND wk_ftx.
        ENDIF.
      ENDIF.

      v_linnum = v_linnum + 1.
      CLEAR: rtext, wk_ftx, wk_ftx1.
    ENDLOOP.

    MOVE wk_ftx[] TO wk_ftx_aux[].

* Link de mensagens
    SELECT * FROM zynft011 INTO TABLE wk_ref
            WHERE nrseq = zynfe005-nrseq.

    MOVE wk_ref[] TO wk_ref_aux[].

* Descrição
    PERFORM busca_descricao.

* Atualiza o refdocnum.
    IF NOT zynfe005-refdocnum IS INITIAL.
      MOVE zynfe005-refdocnum TO v_refdocnum.
    ENDIF.

* Atualiza variáveis auxiliares para regime especial.
    SELECT SINGLE * FROM zynft005
        WHERE nrseq_comand = zynfe005-nrseq.

    IF sy-subrc NE 0.

      IF zynfe005-direct EQ '1'.
        v_regio = wk_parnad-regio.
      ELSEIF zynfe005-direct = '2'.
        v_bland_aux = v_bland.
      ENDIF.
    ENDIF.

* >>> Modificação ID 34 - 26/09/2011 - Início
    clear wa_zynft013.
    SELECT SINGLE * FROM zynft013 INTO wa_zynft013
              WHERE nrseq = zynfe005-nrseq.

    if sy-subrc is initial.

      v_hora_sai_ent = wa_zynft013-DT_SAI_ENT+12(06).

    endif.
* <<< Modificação ID 34 - 26/09/2011 - Fim

    SET SCREEN 0100.
    LEAVE SCREEN.

  ELSE.
    MESSAGE s052.
  ENDIF.

ENDFORM.                    " selecionar_dados
*&---------------------------------------------------------------------
*&      Form  unlock_record
*&---------------------------------------------------------------------
*       Desbloqueia o registro
*----------------------------------------------------------------------
FORM unlock_record.

  CALL FUNCTION 'ZYNF_DEQUEUE_ZYNFT005'
    EXPORTING
      mandt = sy-mandt
      nrseq = zynfe005-nrseq.

ENDFORM.                    " unlock_record
*&---------------------------------------------------------------------*
*&      Form  consistir_dados
*&---------------------------------------------------------------------*
*       Verifica se os dados podem ser salvos
*----------------------------------------------------------------------*
FORM consistir_dados.

* empresa
  IF zynfe005-bukrs IS INITIAL.
    MESSAGE s000 WITH text-062.
    pressed_tab = 'FC_CAB'.
    v_save = 'N'.
    EXIT.
  ENDIF.

* filial
  IF zynfe005-bupla IS INITIAL.
    MESSAGE s000 WITH text-063.
    pressed_tab = 'FC_CAB'.
    v_save = 'N'.
    EXIT.
  ENDIF.

* cno
  IF zynfe005-cno IS INITIAL.
    MESSAGE s000 WITH text-064.
    pressed_tab = 'FC_CAB'.
    v_save = 'N'.
    EXIT.
  ENDIF.

* Categoria
  IF zynfe005-nftype IS INITIAL.
    MESSAGE s000 WITH text-065.
    pressed_tab = 'FC_CAB'.
    v_save = 'N'.
    EXIT.
  ENDIF.

** Data de entrada/saída
*  if zynfe005-pstdat is initial.
*    message s000 with text-025.
*    pressed_tab = 'FC_CAB'.
*    v_save = 'N'.
*    exit.
*  endif.

* Parceiro
  IF zynfe005-parvw IS INITIAL.
    MESSAGE s000 WITH text-024.
    pressed_tab = 'FC_CAB'.
    v_save = 'N'.
    EXIT.
  ENDIF.

* ID Parceiro
  IF zynfe005-parid IS INITIAL.
    MESSAGE s000 WITH text-059.
    pressed_tab = 'FC_CAB'.
    v_save = 'N'.
    EXIT.
  ENDIF.

** Código do transportador
*  if zynfe005-traty is initial.
*    message s000 with text-026.
*    pressed_tab = 'FC_ADIC'.
*    v_save = 'N'.
*    exit.
*  endif.
*
** Placa
*  if zynfe005-traid is initial.
*    message s000 with text-027.
*    pressed_tab = 'FC_ADIC'.
*    v_save = 'N'.
*    exit.
*  endif.
*
** Incoterm
*  if zynfe005-inco1 is initial.
*    message s000 with text-028.
*    pressed_tab = 'FC_ADIC'.
*    v_save = 'N'.
*    exit.
*  endif.

* Verifica se há itens cadastrados nas tc de contabiçização
  IF NOT itab_zynft007_aux2[] IS INITIAL.
    LOOP AT itab_zynft007_aux2 WHERE d_newko =  space
                                 AND netwr   NE space.
    ENDLOOP.
    IF sy-subrc = 0.
      MESSAGE s000 WITH text-074.
      pressed_tab = 'FC_CONT'.
      v_save = 'N'.
      EXIT.
    ENDIF.

    LOOP AT itab_zynft007_aux2 WHERE c_newko =  space
                                 AND netwr   NE space.
    ENDLOOP.
    IF sy-subrc = 0.
      MESSAGE s000 WITH text-075.
      pressed_tab = 'FC_CONT'.
      v_save = 'N'.
      EXIT.
    ENDIF.

    LOOP AT itab_zynft007_aux2 WHERE d_gsber =  space
                                 AND netwr   NE space.
    ENDLOOP.
    IF sy-subrc = 0.
      MESSAGE s000 WITH text-076.
      pressed_tab = 'FC_CONT'.
      v_save = 'N'.
      EXIT.
    ENDIF.
  ENDIF.



ENDFORM.                    " consistir_dados
*&---------------------------------------------------------------------*
*&      Form  trata_exib_modif
*&---------------------------------------------------------------------*
*       Faz as consistências do botão Exibir/Modificar
*----------------------------------------------------------------------*
FORM trata_exib_modif.

  IF v_tcode = 'ZYNF005_E'.
    AUTHORITY-CHECK OBJECT 'S_TCODE'
      ID 'TCD'  FIELD 'ZYNF005_A'.
    IF sy-subrc = 0.
      v_tcode = 'ZYNF005_A'.
*      if itab_zynft004[] is initial.
*        select * from zynft004 into table itab_zynft004
*                             where cno = zynfe005-cno
*                               and dtvgini  <= zynfe005-pstdat
*                               and dtvgfin  >= zynfe005-pstdat.
*      endif.
      PERFORM lock_record.
    ELSE.
      MESSAGE e261(sf) WITH 'ZYNF005_A'.
    ENDIF.
  ELSE.
    IF zynfe005 NE wa_zynft005                OR
       itab_zynft006[] NE itab_zynft006_aux[] OR
       itab_zynft007[] NE itab_zynft007_aux[] OR
       wk_ftx[]        NE wk_ftx_aux[]          .
      PERFORM popup_message USING text-005 text-006.
      IF v_answer = 'J'.
        PERFORM salvar_dados.
        PERFORM exib_prog.
      ELSEIF v_answer = 'N'.
        PERFORM exib_prog.
      ENDIF.
    ELSE.
      PERFORM exib_prog.
    ENDIF.
  ENDIF.

ENDFORM.                    " trata_exib_modif
*&---------------------------------------------------------------------*
*&      Form  exib_prog
*&---------------------------------------------------------------------*
*       Vai para o modo de exibição
*----------------------------------------------------------------------*
FORM exib_prog.

  PERFORM unlock_record.
  v_tcode = 'ZYNF005_E'.

ENDFORM.                    " exib_prog
*&---------------------------------------------------------------------*
*&      Form  itens_contabeis
*&---------------------------------------------------------------------*
*       Preenche a tc de contabilização conforme os itens
*----------------------------------------------------------------------*
FORM itens_contabeis.

  READ TABLE itab_zynft004 WITH KEY itmnum = zynfe006-itmnum.
  IF sy-subrc NE 0 AND NOT wa_zynft002 IS INITIAL.
    PERFORM select_contabeis.
  ENDIF.

  IF v_ini = 'S'.
    EXIT.
  ENDIF.

  LOOP AT itab_zynft004 WHERE itmnum = zynfe006-itmnum.

* Verifica os parâmetros de contabilização para ver se será agrupado

    v_index = sy-tabix.
    itab_zynft007-mandt   = sy-mandt.
    itab_zynft007-nrseq   = zynfe005-nrseq.
    itab_zynft007-itmnum  = zynfe006-itmnum.
    itab_zynft007-tpvalor = itab_zynft004-tpvalor.

* Calcula o valor
    PERFORM calcula_valor_contabil.

* Se o tipo de contabilização for automático
*      if itab_zynft004-tpcontabil eq 'A'. "automático

    READ TABLE itab_zynft007_aux2 INTO wa_zynft007 WITH KEY
                                  nrseq    = zynfe005-nrseq
                                  tpvalor  = itab_zynft004-tpvalor
                                  nrfiscal = itab_zynft004-nrseq.
    IF sy-subrc NE 0.

      itab_zynft007-d_newko  = itab_zynft004-d_newko.
* Verificar se irá deduzir o local de negócio Débito
      IF NOT itab_zynft004-d_bupla IS INITIAL.
        itab_zynft007-d_bupla  = itab_zynft004-d_bupla.
      ELSE.
        IF zynfe005-direct = 1. "Entrada
          itab_zynft007-d_bupla = zynfe005-bupla.
        ELSE. "Saída
          IF zynfe005-parvw = 'BR'. " filial
            itab_zynft007-d_bupla = zynfe005-mainbranch.
          ENDIF.
        ENDIF.
      ENDIF.

      itab_zynft007-d_kostl  = itab_zynft004-d_kostl.
      itab_zynft007-d_prctr  = itab_zynft004-d_prctr.
      itab_zynft007-d_gsber  = itab_zynft004-d_gsber.
      itab_zynft007-d_aufnr  = itab_zynft004-d_aufnr.
      itab_zynft007-c_newko  = itab_zynft004-c_newko.

* Verificar se irá deduzir o local de negócio Crédito
      IF NOT itab_zynft004-c_bupla IS INITIAL.
        itab_zynft007-c_bupla  = itab_zynft004-c_bupla.
      ELSE.
        IF zynfe005-direct = 2. "Saída
          itab_zynft007-c_bupla = zynfe005-bupla.
        ELSE. "Saída
          IF zynfe005-parvw = 'BR'. " filial
            itab_zynft007-c_bupla = zynfe005-mainbranch.
          ENDIF.
        ENDIF.
      ENDIF.

      itab_zynft007-c_kostl  = itab_zynft004-c_kostl.
      itab_zynft007-c_prctr  = itab_zynft004-c_prctr.
      itab_zynft007-c_gsber  = itab_zynft004-c_gsber.
      itab_zynft007-c_aufnr  = itab_zynft004-c_aufnr.
      itab_zynft007-nrfiscal = itab_zynft004-nrseq  .

* Histórico, atribuição e referência
      PERFORM cria_sgtxt.
      PERFORM cria_zuonr.
      PERFORM cria_xblnr.

      MODIFY itab_zynft007 INDEX v_index.
      IF sy-subrc NE 0.
        APPEND itab_zynft007.
      ENDIF.
      CLEAR  itab_zynft007.
    ELSE. "Manual
      READ TABLE itab_zynft007_aux2 INTO wa_zynft007 WITH KEY
                                    nrseq   = zynfe005-nrseq
                                    tpvalor = itab_zynft004-tpvalor
                                   nrfiscal = itab_zynft004-nrseq.

      itab_zynft007-d_newko  = wa_zynft007-d_newko.
      itab_zynft007-d_bupla  = wa_zynft007-d_bupla.
      itab_zynft007-d_kostl  = wa_zynft007-d_kostl.
      itab_zynft007-d_prctr  = wa_zynft007-d_prctr.
      itab_zynft007-d_gsber  = wa_zynft007-d_gsber.
      itab_zynft007-d_aufnr  = wa_zynft007-d_aufnr.
      itab_zynft007-c_newko  = wa_zynft007-c_newko.
      itab_zynft007-c_bupla  = wa_zynft007-c_bupla.
      itab_zynft007-c_kostl  = wa_zynft007-c_kostl.
      itab_zynft007-c_prctr  = wa_zynft007-c_prctr.
      itab_zynft007-c_gsber  = wa_zynft007-c_gsber.
      itab_zynft007-c_aufnr  = wa_zynft007-c_aufnr.
      itab_zynft007-nrfiscal = wa_zynft007-nrseq  .
      MODIFY itab_zynft007 INDEX v_index.

      IF sy-subrc NE 0.
        APPEND itab_zynft007.
        CLEAR  itab_zynft007.
      ENDIF.
    ENDIF.
  ENDLOOP.

  CLEAR   itab_zynft007_aux2.
  REFRESH itab_zynft007_aux2.
  LOOP AT itab_zynft007.
    CLEAR itab_zynft007-itmnum.
    MOVE-CORRESPONDING itab_zynft007 TO itab_zynft007_aux2.
    CLEAR itab_zynft007_aux2-nrfiscal.
    COLLECT itab_zynft007_aux2.
  ENDLOOP.
  CLEAR itab_zynft007.

ENDFORM.                    " itens_contabeis
*&---------------------------------------------------------------------*
*&      Form  MODO_BATCH_INPUT
*&---------------------------------------------------------------------*
*       Define modo de execução do Call transaction
*----------------------------------------------------------------------*
FORM modo_batch_input.

  SELECT * FROM zynft039
    INTO CORRESPONDING FIELDS OF TABLE itab_modo.

  SORT itab_modo DESCENDING.

  CALL FUNCTION 'POPUP_TO_DECIDE_LIST'
    EXPORTING
      textline1          = text-019
      textline2          = text-020
      titel              = text-021
    IMPORTING
      answer             = v_modo_bi
    TABLES
      t_spopli           = itab_modo
    EXCEPTIONS
      not_enough_answers = 1
      too_much_answers   = 2
      too_much_marks     = 3
      OTHERS             = 4.

  IF v_modo_bi EQ '1' OR v_modo_bi EQ 'A'.
    v_modo_bi = 'N'.
  ELSEIF v_modo_bi EQ '3'.
    v_modo_bi = 'A'.
  ELSEIF v_modo_bi EQ '2'.
    v_modo_bi = 'E'.
  ENDIF.

ENDFORM.                               " MODO_BATCH_INPUT
*&---------------------------------------------------------------------*
*&      Form  gera_j1b1
*&---------------------------------------------------------------------*
*       Gera a nota fiscal através da transação J1B1
*----------------------------------------------------------------------*
FORM gera_j1b1.
  DATA: BEGIN OF listtab OCCURS 1,
          field(80),
        END OF listtab.

  PERFORM limpa_bi.

  CLEAR v_exit.

* Dados para o BI
  itab_zynfe033-tcode  = 'J1B1'         .
  itab_zynfe033-tabela = 'ZYNFT005'     .
  itab_zynfe033-cpochv = zynfe005-nftype.

* Dados iniciais
* Tipo da nota
  itab_zynfe033-nftype = zynfe005-nftype.
* Empresa
  itab_zynfe033-bukrs = zynfe005-bukrs.
* Filial
  itab_zynfe033-branch = zynfe005-bupla.
* Tipo parceiro
  itab_zynfe033-parvw = zynfe005-parvw.
* ID Parceiro
  itab_zynfe033-parid = zynfe005-parid.
* Outros campos empresa e filial
  IF zynfe005-parvw = 'BR'. "Filial.
    itab_zynfe033-mainbukrs  = zynfe005-mainbukrs .
    itab_zynfe033-mainbranch = zynfe005-mainbranch.
  ENDIF.
* Verifica se há locais de retirada e entrega
  IF NOT zynfe005-localret IS INITIAL AND
     NOT zynfe005-locretid IS INITIAL.
    itab_zynfe033-localret  = zynfe005-localret.
    itab_zynfe033-locretid  = zynfe005-locretid.
  ENDIF.
  IF NOT zynfe005-localent IS INITIAL AND
     NOT zynfe005-locentid IS INITIAL.
    itab_zynfe033-localent  = zynfe005-localent.
    itab_zynfe033-locentid  = zynfe005-locentid.
  ENDIF.

* Nº NF e Serie se manual.
  IF NOT zynfe005-nfnum IS INITIAL.
    itab_zynfe033-nfnum = zynfe005-nfnum.
  ENDIF.
  IF NOT zynfe005-series IS INITIAL.
    itab_zynfe033-series = zynfe005-series.
  ENDIF.

* Cabeçalho
* Data entrada/saída
  PERFORM verify_null_field USING zynfe005-pstdat
                                  'PSTDAT'
                                  text-069.
  itab_zynfe033-pstdat = zynfe005-pstdat.

* Data de lançamento
  itab_zynfe033-budat = zynfe005-pstdat.

  IF zynfe005-data_entry = 'X'.
* Data de emissão
    PERFORM verify_null_field USING zynfe005-docdat
                                    'DOCDAT'
                                    text-068.
    itab_zynfe033-docdat = zynfe005-docdat.
  ELSE.
* Data de emissão
    itab_zynfe033-docdat = sy-datum.
  ENDIF.

* Efetuando consistencias, para que só quando o campo
*  zynfe005-tranid estiver preenchido, tornar os outros campos
* obrigatórios referente ao tranporte.

  IF NOT zynfe005-tranid IS INITIAL.

* Código do tranportador
    itab_zynfe033-tranid = zynfe005-tranid.
  ENDIF.

* ID Transporte
  itab_zynfe033-traid = zynfe005-traid.
* Incoterm
  itab_zynfe033-inco1 = zynfe005-inco1.
  itab_zynfe033-inco2 = v_bezei.
* Peso Bruto
  itab_zynfe033-brgew = zynfe005-brgew.
* Peso Líquido
  itab_zynfe033-ntgew = zynfe005-ntgew.
* Unidade de Peso Líquido/Bruto
  itab_zynfe033-gewei = zynfe005-gewei.
* Tipo de transporte
  itab_zynfe033-traty = zynfe005-traty.
* Volume
  itab_zynfe033-anzpk = zynfe005-anzpk.
* Tipo de Volume
  itab_zynfe033-shpunt = zynfe005-shpunt.

  IF zynfe005-data_entry IS INITIAL.
* Local de Expedição
    CALL CUSTOMER-FUNCTION '002'
      EXPORTING
        v_bukrs = zynfe005-bukrs
        v_bupla = zynfe005-bupla
      IMPORTING
        v_vstel = itab_zynfe033-vstel.
  ENDIF.

  APPEND itab_zynfe033.


* Itens
  IF itab_zynft006[] IS INITIAL.
    MESSAGE i017 WITH text-016 text-048.
    CLEAR zynfe005-docnum.
    v_ok_bi = 'N'.
    EXIT.
  ENDIF.

  LOOP AT itab_zynft006.

* Lendo parâmetros fiscais
    READ TABLE itab_zynft002 WITH KEY itmnum = itab_zynft006-itmnum.

    IF sy-subrc = 0.

* Dados para o BI
      itab_zynfe035-tcode  = 'J1B1'        .
      itab_zynfe035-tabela = 'ZYNFT005'   .
      itab_zynfe035-cpochv = zynfe005-cno.

* ctg.reg. - Verificar esta linha
      PERFORM busca_ctgreg.

* Passar o nº do item para o mapeamento dos impostos
      itab_zynfe035-itmnum  = itab_zynft006-itmnum  .

      itab_zynfe035-matnr   = itab_zynft006-matnr    .
      itab_zynfe035-maktx   = itab_zynft006-maktx    .
      itab_zynfe035-matkl   = itab_zynft006-matkl    .
      itab_zynfe035-werks   = itab_zynft006-werks    .
      itab_zynfe035-netpr   = itab_zynft006-netpr    .
      itab_zynfe035-netdis  = itab_zynft006-netdis   .
      itab_zynfe035-menge   = itab_zynft006-menge    .
      itab_zynfe035-meins   = itab_zynft006-meins    .
      itab_zynfe035-cfop    = itab_zynft006-cfop     .
      itab_zynfe035-nbm     = itab_zynft006-nbm      .
      itab_zynfe035-matorg  = itab_zynft006-matorg   .
      itab_zynfe035-netfre  = itab_zynft006-netfre   .
      itab_zynfe035-netins  = itab_zynft006-netins   .
      itab_zynfe035-netoth  = itab_zynft006-netoth   .

* Esta alteração deverá ser eliminada na segunda fase
*      if v_isento = 'X' and wk_parnad-regio  ne v_bland.
*        itab_zynfe035-taxlw1  = 'Z00'.
*        itab_zynfe035-taxlw2  = 'ZZE'.
*      else.
      itab_zynfe035-taxlw1  = itab_zynft002-taxlawicm.
      itab_zynfe035-taxlw2  = itab_zynft002-taxlawipi.
*      endif.

      IF NOT itab_zynft006-docref IS INITIAL.
        itab_zynfe035-docref  = itab_zynft006-docref   .
      ELSE.
        itab_zynfe035-docref  = zynfe005-refdocnum.
      ENDIF.
      IF NOT itab_zynft006-itmref IS INITIAL.
        itab_zynfe035-itmref  = itab_zynft006-itmref   .
      ELSE.
        READ TABLE itab_j_1bnflin INDEX 1.
        IF sy-subrc = 0.
          itab_zynfe035-itmref  = itab_j_1bnflin-itmnum.
        ENDIF.
      ENDIF.

* Verifica produção interna e utilização do material.
      IF itab_zynft006-matnr IS INITIAL.
        IF itab_zynft006-matuse IS INITIAL.
          v_exit = 'X'.
          MESSAGE i000 WITH text-073.
        ENDIF.
        CASE itab_zynft006-matuse.
          WHEN 0.
            itab_zynfe035-matuse0 = itab_zynft006-matuse.
          WHEN 1.
            itab_zynfe035-matuse1 = itab_zynft006-matuse.
          WHEN 2.
            itab_zynfe035-matuse2 = itab_zynft006-matuse.
          WHEN 3.
            itab_zynfe035-matuse3 = itab_zynft006-matuse.
        ENDCASE.
        CASE itab_zynft006-ownpro.
          WHEN 'X'.
            itab_zynfe035-ownpro1  = 'X'.
          WHEN ' '.
            itab_zynfe035-ownpro2  = 'X'.
        ENDCASE.
      ENDIF.

* Verifica os campos obrigatórios
      PERFORM verify_null_field USING itab_zynft006-cfop
                                      'CFOP'
                                      text-051.

      PERFORM verify_null_field USING itab_zynft006-nbm
                                      'NBM'
                                      text-070.

      PERFORM verify_null_field USING itab_zynft006-matorg
                                      'MATORG'
                                      text-071.

      APPEND itab_zynfe035.

    ELSE.

      IF listtab[] IS INITIAL.
        MOVE text-061 TO listtab-field.
        APPEND listtab.
        CLEAR listtab.
        MOVE itab_zynft006-itmnum TO listtab-field.
        APPEND listtab.
        CLEAR listtab.
      ELSE.
        MOVE itab_zynft006-itmnum TO listtab-field.
        APPEND listtab.
        CLEAR listtab.
      ENDIF.
    ENDIF.
  ENDLOOP.

* Verifica se há itens sem parâmetros
  IF NOT listtab[] IS INITIAL.

    CALL FUNCTION 'POPUP_WITH_TABLE_DISPLAY'
      EXPORTING
        endpos_col   = 70
        endpos_row   = 20
        startpos_col = 20
        startpos_row = 10
        titletext    = text-008
      TABLES
        valuetab     = listtab
      EXCEPTIONS
        break_off    = 1.

    CLEAR listtab.
    REFRESH listtab.
    EXIT.
  ENDIF.

  IF v_exit = 'X'.
    EXIT.
  ENDIF.

* Verifica se há parâmetros tributários
  IF itab_zynft009[] IS INITIAL.
    v_ok_bi = 'N'.
    MESSAGE i044.
    EXIT.
  ENDIF.

* Campos obrigatórios dados adicionais
*  perform verify_null_field using zynfe005-tranid
*                                  'TRANID'
*                                  text-053.

  PERFORM verify_null_field USING zynfe005-traty
                                  'TRATY'
                                  text-054.

  PERFORM verify_null_field USING zynfe005-inco1
                                  'INCO1'
                                  text-056.

  PERFORM verify_null_field USING zynfe005-anzpk
                                  'ANZPK'
                                  text-057.

  PERFORM verify_null_field USING zynfe005-shpunt
                                  'SHPUNT'
                                  text-058.


* Consistências de NF Referência
  IF NOT zynfe005-refdocnum IS INITIAL.
    IF j_1bindoc-nftot < zynfe005-netwr.
      MESSAGE i082. "Valor da nota superior ao valor da NF Ref
      EXIT.
    ENDIF.
    IF j_1bnfdoc-parvw NE zynfe005-parvw OR
       j_1bnfdoc-parid NE zynfe005-parid.
      MESSAGE i083. "Parceiro da NF Ref diferente da NF
      EXIT.
    ENDIF.
  ENDIF.

* Se um dos itens contábeis não tiver valor, não gerar nota
*  read table itab_zynft007_aux2 with key netwr = 0.
*  if sy-subrc = 0.
*    message i063.
*    exit.
*  endif.

  IF itab_zynft034[] IS INITIAL.
    CALL FUNCTION 'ZYNF_TRANSACAO_J1B1'
      EXPORTING
        v_modo          = v_modo_bi
      TABLES
        t_dados         = itab_zynfe033
        t_itens         = itab_zynfe035
        t_campos        = itab_zynft034
        t_zynft032      = itab_zynft032
        t_message       = wk_ftx
        t_link          = wk_ref
        t_impostos      = itab_zynft009
      EXCEPTIONS
        campo_em_branco = 1
        periodo_fechado = 2
        OTHERS          = 3.
    IF sy-subrc = 0.
      READ TABLE itab_zynft032 WITH KEY tcode  = 'J1B1'
                                        tabela = 'ZYNFT005'
                                        cpochv = zynfe005-nftype
                                        tpmsg  = 'E'.
      IF sy-subrc NE 0. "Sucesso no BI
* Move os dados do usuário
        MOVE: sy-uname TO zynfe005-chanam,
              sy-uzeit TO zynfe005-chatim,
              sy-datum TO zynfe005-chadat.

        SELECT SINGLE * FROM j_1bnfdoc
                         WHERE docnum = itab_zynft032-belnr.
        IF zynfe005-data_entry NE 'X'.
          MOVE: sy-datum TO zynfe005-docdat.
        ENDIF.
        MOVE: j_1bnfdoc-docnum TO zynfe005-docnum,
              j_1bnfdoc-nfnum  TO zynfe005-nfnum ,
              j_1bnfdoc-series TO zynfe005-series.
        MESSAGE i016 WITH itab_zynft032-belnr.
        PERFORM atualiza_txt_contabeis.
        PERFORM atualiza_mensagens.
        PERFORM gera_f02.
        IF zynfe005-data_entry EQ 'X'.
          PERFORM entrada_comandada.
        ENDIF.
      ELSE.
        v_ok_bi = 'N'.

        CALL FUNCTION 'MESSAGES_INITIALIZE'.
        LOOP AT itab_zynft032.
          CALL FUNCTION 'MESSAGE_STORE'
            EXPORTING
              arbgb = 'ZYNFM'
              msgty = itab_zynft032-tpmsg
              msgv1 = itab_zynft032-msg+0(50)
              msgv2 = itab_zynft032-msg+50(50)
              txtnr = '092'
              zeile = itab_zynft032-nrmsg.
        ENDLOOP.
        CALL FUNCTION 'MESSAGES_SHOW'
          EXPORTING
            object          = 'SAPMZYNF005'
            i_amodal_window = ' '.
        CALL FUNCTION 'MESSAGES_INITIALIZE'.

      ENDIF.
    ENDIF.
  ELSE.
    LOOP AT itab_zynft034.
      MESSAGE i035 WITH itab_zynft034-descricao.
    ENDLOOP.
  ENDIF.

ENDFORM.                                                    " gera_j1b1
*&---------------------------------------------------------------------*
*&      Form  gera_f02
*&---------------------------------------------------------------------*
*       Gera os doctos. contábeis dos itens
*----------------------------------------------------------------------*
FORM gera_f02.
  DATA wa_zynft007_aux LIKE zynft007.
  CLEAR v_tabix.

  CHECK NOT itab_zynft007_aux2[] IS INITIAL.

  LOOP AT itab_zynft007_aux2 WHERE belnr IS INITIAL AND netwr NE 0.
    v_tabix = sy-tabix.

    PERFORM limpa_bi.

* Dados para o BI
    itab_zynfe033-tcode  = 'F-02'                   .
    itab_zynfe033-tabela = 'ZYNFT007'               .
    itab_zynfe033-cpochv = zynfe005-docnum          .

* Cabeçalho
* Empresa
    itab_zynfe033-bukrs = zynfe005-bukrs.
* Data de lançto.
    itab_zynfe033-budat = zynfe005-pstdat.
* Data do docto.
    itab_zynfe033-bldat = zynfe005-pstdat.
* período contábil
    itab_zynfe033-monat = sy-datum+4(2).
* Tipo de docto
    itab_zynfe033-blart = 'SA'.
* moeda
    itab_zynfe033-waers = 'BRL'.
* Referência
    itab_zynfe033-xblnr = itab_zynft007_aux2-xblnr.

    APPEND itab_zynfe033.

* Este loop fará com que todos os itens sejam lançados na tabela interna
* Objetivo: Contabilização somente em um documento contábil.
    LOOP AT itab_zynft007_aux2 INTO wa_zynft007_aux.

* dados Débito
      itab_zynfe035-newbs = '40'.
      itab_zynfe035-wrbtr = wa_zynft007_aux-netwr.
      itab_zynfe035-newko = wa_zynft007_aux-d_newko.
      itab_zynfe035-bupla = wa_zynft007_aux-d_bupla.
      itab_zynfe035-prctr = wa_zynft007_aux-d_prctr.
      itab_zynfe035-kostl = wa_zynft007_aux-d_kostl.
      itab_zynfe035-gsber = wa_zynft007_aux-d_gsber.
      itab_zynfe035-aufnr = wa_zynft007_aux-d_aufnr.
      itab_zynfe035-zuonr = wa_zynft007_aux-zuonr.
      itab_zynfe035-sgtxt = wa_zynft007_aux-sgtxt.
      APPEND itab_zynfe035.

* dados Crédito
      itab_zynfe035-newbs = '50'.
      itab_zynfe035-wrbtr = wa_zynft007_aux-netwr.
      itab_zynfe035-newko = wa_zynft007_aux-c_newko.
      itab_zynfe035-bupla = wa_zynft007_aux-c_bupla.
      itab_zynfe035-prctr = wa_zynft007_aux-c_prctr.
      itab_zynfe035-kostl = wa_zynft007_aux-c_kostl.
      itab_zynfe035-gsber = wa_zynft007_aux-c_gsber.
      itab_zynfe035-aufnr = wa_zynft007_aux-c_aufnr.
      itab_zynfe035-zuonr = wa_zynft007_aux-zuonr.
      itab_zynfe035-sgtxt = wa_zynft007_aux-sgtxt.

      APPEND itab_zynfe035.
    ENDLOOP.

  ENDLOOP.

  IF itab_zynft034[] IS INITIAL.
    CALL FUNCTION 'ZYNF_TRANSACAO_F02'
      EXPORTING
        v_modo          = v_modo_bi
      TABLES
        t_dados         = itab_zynfe033
        t_campo         = itab_zynft034
        t_itens         = itab_zynfe035
        t_zynft032      = itab_zynft032
      EXCEPTIONS
        campo_em_branco = 1
        periodo_fechado = 2
        OTHERS          = 3.

    IF sy-subrc = 0.
      READ TABLE itab_zynft032 WITH KEY tcode  = 'F-02'
                                        tabela = 'ZYNFT007'
                                        cpochv =
                                           zynfe005-docnum
                                        tpmsg  = 'E'.

      IF sy-subrc NE 0. "Sucesso no BI
* Adicionado o LOOP na tabela interna abaixo fazendo com que o numero
* do documento contábil seja o mesmo para as duas contabilizações.
        LOOP AT itab_zynft007_aux2.
          MOVE itab_zynft032-belnr TO itab_zynft007_aux2-belnr.
          MODIFY itab_zynft007_aux2 TRANSPORTING belnr
                        WHERE tpvalor =  itab_zynft007_aux2-tpvalor.
          PERFORM docto_contabil.
        ENDLOOP.
*Fim do Loop.
        MESSAGE i020 WITH itab_zynft007_aux2-belnr.
        v_ok_bi = 'S'.
      ELSE.
        v_ok_bi = 'N'.
        CALL FUNCTION 'MESSAGES_INITIALIZE'.
        LOOP AT itab_zynft032.
          CALL FUNCTION 'MESSAGE_STORE'
            EXPORTING
              arbgb = 'ZYNFM'
              msgty = itab_zynft032-tpmsg
              msgv1 = itab_zynft032-msg+0(50)
              msgv2 = itab_zynft032-msg+50(50)
              txtnr = '092'
              zeile = itab_zynft032-nrmsg.
        ENDLOOP.
        CALL FUNCTION 'MESSAGES_SHOW'
          EXPORTING
            object          = 'SAPMZYNF005'
            i_amodal_window = ' '.
        CALL FUNCTION 'MESSAGES_INITIALIZE'.
      ENDIF.
    ENDIF.
  ELSE.
    LOOP AT itab_zynft034.
      MESSAGE i018 WITH itab_zynft034-descricao.
    ENDLOOP.
  ENDIF.
ENDFORM.                                                    " gera_f02
*&---------------------------------------------------------------------*
*&      Form  limpa_bi
*&---------------------------------------------------------------------*
*       Limpa as tabelas do BI
*----------------------------------------------------------------------*
FORM limpa_bi.

  CLEAR: itab_zynfe033,
         itab_zynfe035,
         itab_zynft034,
         itab_zynft032.

  REFRESH: itab_zynfe033,
           itab_zynfe035,
           itab_zynft034,
           itab_zynft032.

ENDFORM.                    " limpa_bi
*&---------------------------------------------------------------------*
*&      Form  chama_nf
*&---------------------------------------------------------------------*
*       Drilldown da NF
*----------------------------------------------------------------------*
FORM chama_nf.

  GET CURSOR FIELD v_campo VALUE v_valor.
  CHECK v_campo = 'ZYNFE005-DOCNUM'.
  CHECK NOT zynfe005-docnum IS INITIAL.
  SET PARAMETER ID 'JEF' FIELD zynfe005-docnum.
  AUTHORITY-CHECK OBJECT 'S_TCODE'
    ID 'TCD'  FIELD 'J1B3N'.
  IF sy-subrc = 0.
    CALL TRANSACTION 'J1B3N' AND SKIP FIRST SCREEN.
  ELSE.
    MESSAGE e261(sf) WITH 'J1B3N'.
  ENDIF.

ENDFORM.                    " chama_nf
*&---------------------------------------------------------------------*
*&      Form  atual_doc_tabelas
*&---------------------------------------------------------------------*
*       Move o DOCNUM gerado para as tabelas.
*----------------------------------------------------------------------*
FORM atual_doc_tabelas.

  LOOP AT wk_ftx.
    MOVE itab_zynft032-belnr TO wk_ftx-docnum.
    MODIFY wk_ftx INDEX sy-tabix.
  ENDLOOP.
  LOOP AT wk_ref.
    MOVE itab_zynft032-belnr TO wk_ref-docnum.
    MODIFY wk_ref INDEX sy-tabix.
  ENDLOOP.

ENDFORM.                    " atual_doc_tabelas
*&---------------------------------------------------------------------*
*&      Form  chama_f_02
*&---------------------------------------------------------------------*
*       Drilldown da F-02
*----------------------------------------------------------------------*
FORM chama_f_02.

  GET CURSOR FIELD v_campo VALUE v_valor.
  CHECK v_campo = 'ZYNFE007-BELNR'.
  CHECK NOT v_valor IS INITIAL.

  SET PARAMETER ID 'GJR' FIELD zynfe005-docdat(4).
  SET PARAMETER ID 'BUK' FIELD zynfe005-bukrs.
  SET PARAMETER ID 'BLN' FIELD v_valor.

  AUTHORITY-CHECK OBJECT 'S_TCODE'
    ID 'TCD'  FIELD 'FB03'.
  IF sy-subrc = 0.
    CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.
  ELSE.
    MESSAGE e261(sf) WITH 'FB03'.
  ENDIF.

ENDFORM.                    " chama_f_02
*&---------------------------------------------------------------------*
*&      Form  cria_SGTXT
*&---------------------------------------------------------------------*
*       Cria os textos dos lançtos automáticos
*----------------------------------------------------------------------*
FORM cria_sgtxt.

*  data: v_cfop(6).

  CLEAR: itab_zynft007-sgtxt, v_cfop.

* Antes de verificar os flags, ver o campo proposto na tabela ZYNFT004
  IF NOT itab_zynft004-sgtxt IS INITIAL.
    MOVE itab_zynft004-sgtxt TO itab_zynft007-sgtxt.
  ENDIF.

  IF NOT itab_zynft004-fntoper IS INITIAL AND
     NOT zynfe005-cno IS INITIAL.
    CONCATENATE itab_zynft007-sgtxt zynfe005-cno
       INTO itab_zynft007-sgtxt SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-fcfop IS INITIAL AND
     NOT zynfe006-cfop IS INITIAL.

    CALL FUNCTION 'CONVERSION_EXIT_CFOBR_OUTPUT'
      EXPORTING
        input  = zynfe006-cfop
      IMPORTING
        output = v_cfop.

    CONCATENATE itab_zynft007-sgtxt v_cfop
       INTO itab_zynft007-sgtxt SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-flocneg IS INITIAL AND
     NOT zynfe005-bupla IS INITIAL.
    CONCATENATE itab_zynft007-sgtxt zynfe005-bupla
       INTO itab_zynft007-sgtxt SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-fcodpar IS INITIAL AND
     NOT zynfe005-parid IS INITIAL.
    CONCATENATE itab_zynft007-sgtxt zynfe005-parid
       INTO itab_zynft007-sgtxt SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-ftppar IS INITIAL AND
     NOT zynfe005-parvw IS INITIAL.
    CONCATENATE itab_zynft007-sgtxt zynfe005-parvw
       INTO itab_zynft007-sgtxt SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-fnumnf IS INITIAL AND
     NOT zynfe005-docnum IS INITIAL.
    CONCATENATE itab_zynft007-sgtxt zynfe005-docnum
       INTO itab_zynft007-sgtxt SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-forigem IS INITIAL AND
     NOT wa_zynft002-blandori IS INITIAL.
    CONCATENATE itab_zynft007-sgtxt wa_zynft002-blandori
       INTO itab_zynft007-sgtxt SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-fdestino IS INITIAL AND
     NOT wa_zynft002-blanddes IS INITIAL.
    CONCATENATE itab_zynft007-sgtxt wa_zynft002-blanddes
       INTO itab_zynft007-sgtxt SEPARATED BY space.
  ENDIF.

* Apagando o espaço em branco se houver.
  IF itab_zynft007-sgtxt+0(1) IS INITIAL.
    MOVE itab_zynft007-sgtxt+1 TO itab_zynft007-sgtxt.
  ENDIF.

ENDFORM.                    " cria_SGTXT
*&---------------------------------------------------------------------*
*&      Form  chama_item
*&---------------------------------------------------------------------*
*       chama o item selecionado
*----------------------------------------------------------------------*
FORM chama_item.

  IF ok_code = 'CLI'.
    GET CURSOR FIELD v_campo LINE v_index.
    v_index = v_index + tc_itens-top_line - 1.
  ENDIF.

  IF v_campo(8) = 'ZYNFE006'.
    READ TABLE itab_zynft006 INDEX v_index.
    IF sy-subrc = 0.
      MOVE-CORRESPONDING itab_zynft006 TO zynfe006.
* Calcula o valor total do item
      netwrt = zynfe006-netwr + zynfe006-netdis +
               zynfe006-netfre + zynfe006-netins +
               zynfe006-netoth.

* >>> Modificação ID 34 - 26/09/2011 - Início
      READ TABLE itab_zynft014 INDEX v_index.

      if sy-subrc is initial.

        MOVE-CORRESPONDING itab_zynft014 TO wa_zynft014.

        perform format_date_2 using wa_zynft014-dt_di
                     changing v_dt_di.
        v_hr_di = wa_zynft014-dt_di+12(06).

        perform format_date_2 using wa_zynft014-dt_DESEMBARACO
                     changing v_dt_DESEMBARACO.
        v_hr_DESEMBARACO = wa_zynft014-dt_DESEMBARACO+12(06).

      endif.
* <<< Modificação ID 34 - 26/09/2011 - Fim

* busca a descrição do tipo de operação
* Buscando o tipo de operação
      CLEAR descricao.
      SELECT SINGLE * FROM zynft002
                          WHERE nrseq = zynfe006-nrfiscal
                            AND dtvgini  <= zynfe005-pstdat
                            AND dtvgfin  >= zynfe005-pstdat.

      SELECT SINGLE descricao FROM zynft010 INTO descricao
                          WHERE tpoper = zynft002-tpoper.

      READ TABLE itab_zynft002 INTO wa_zynft002 WITH KEY
                               itmnum = zynfe006-itmnum.
      IF ok_code = 'CLI'.
        pressed_tab = 'FC_ITMDET'.
        CALL SCREEN '0121'.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.                    " chama_item
*&---------------------------------------------------------------------*
*&      Form  cria_ref
*&---------------------------------------------------------------------*
*       Cria uma nota com referência em outra
*----------------------------------------------------------------------*
FORM cria_ref.

  CLEAR: zynfe005-nrseq, flag_change_item.
  CALL SCREEN '0101' STARTING AT 20 05 ENDING AT 50 07.

ENDFORM.                    " cria_ref
*&---------------------------------------------------------------------*
*&      Form  move_ref
*&---------------------------------------------------------------------*
*       Move os dados da NF referência
*----------------------------------------------------------------------*
FORM move_ref.
  DATA v_nrseq LIKE zynft005-nrseq.

  MOVE zynfe005-nrseq TO v_nrseq.

  PERFORM limpa_dados.

  SELECT SINGLE * FROM zynft005 INTO zynfe005
           WHERE nrseq = v_nrseq.

  CLEAR zynfe005-nrseq_comand.

* Itens
  SELECT * FROM zynft006 INTO TABLE itab_zynft006
          WHERE nrseq = v_nrseq.

  SORT itab_zynft006 BY itmnum.

  MOVE itab_zynft006[] TO itab_zynft006_aux[].

** Contabilização
*  select * from zynft007 into table itab_zynft007
*          where nrseq = v_nrseq.
*
*  sort itab_zynft007 by itmnum.
*
*  move itab_zynft007[] to itab_zynft007_aux[].
*
*  loop at itab_zynft007.
*    clear: itab_zynft007-itmnum,
*           itab_zynft007-belnr .
*    move-corresponding itab_zynft007 to itab_zynft007_aux2.
*    collect itab_zynft007_aux2.
*  endloop.
*
** Impostos
*  select * from zynft009 into table itab_zynft009
*          where nrseq = v_nrseq.
*
*  sort itab_zynft009 by itmnum.
*
*  move itab_zynft009[] to itab_zynft009_aux[].
*
*  loop at itab_zynft009.
*    clear itab_zynft009-itmnum.
*    move-corresponding itab_zynft009 to itab_zynft009a.
*    collect itab_zynft009a.
*  endloop.

* move os dados dos parceiros
  IF zynfe005-parvw = 'BR'. "Filial
    PERFORM check_branch.
  ELSE.
    PERFORM: check_parceiro.
  ENDIF.
  v_parvw = zynfe005-parvw.

  IF NOT zynfe005-localret IS INITIAL.
    PERFORM check_loc_ret.
  ENDIF.
  IF NOT zynfe005-localent IS INITIAL.
    PERFORM check_loc_ent .
  ENDIF.

* Carrega mensagens
  CLEAR v_tdname.
  CONCATENATE 'ZYNF005' v_nrseq INTO v_tdname.

  CLEAR: xthead, rtext.
  REFRESH: xthead, rtext.

  xthead-tdobject   = 'ZYNF005'.        "Objeto Fixo
  xthead-tdname     = v_tdname.         "ID do texto
  xthead-tdid       = 'ZYNF'.           "Constante
  xthead-tdspras    = sy-langu.         "Idioma
  xthead-tdlinesize = 072.              "Larg. linha do editor
  APPEND xthead.

  CALL FUNCTION 'READ_TEXT'
    EXPORTING
      client                  = sy-mandt
      id                      = xthead-tdid
      language                = sy-langu
      name                    = xthead-tdname
      object                  = xthead-tdobject
    TABLES
      lines                   = rtext
    EXCEPTIONS
      id                      = 1
      language                = 2
      name                    = 3
      not_found               = 4
      object                  = 5
      reference_check         = 6
      wrong_access_to_archive = 7
      OTHERS                  = 8.

  SELECT * FROM j_1bnfftx INTO TABLE itab_manual
           WHERE docnum = zynfe005-docnum.

  LOOP AT rtext.

* Não mover as mensagens do regime especial
    IF rtext-tdline(1) EQ 'X'.
      CONTINUE.
    ENDIF.

    READ TABLE itab_manual WITH KEY seqnum = rtext-tdline(2).
    IF sy-subrc = 0.
      wk_ftx-manual = itab_manual-manual.
    ELSE.
      CLEAR wk_ftx-manual.
    ENDIF.

    IF v_seqnum NE rtext-tdline(2) OR v_seqnum IS INITIAL.
      v_linnum = 1.
      MOVE: rtext-tdline+0(2) TO wk_ftx-seqnum ,
            v_linnum          TO wk_ftx-linnum ,
            rtext-tdline+2    TO wk_ftx-message,
            wk_ftx            TO wk_ftx1       ,
            wk_ftx-seqnum     TO v_seqnum      .
      APPEND: wk_ftx,
              wk_ftx1.
    ELSE.
      MOVE: rtext-tdline+0(2) TO wk_ftx-seqnum ,
            v_linnum          TO wk_ftx-linnum ,
            rtext-tdline+2    TO wk_ftx-message,
            wk_ftx-seqnum     TO v_seqnum      .
      APPEND wk_ftx.
    ENDIF.
    v_linnum = v_linnum + 1.
  ENDLOOP.

  IF zynfe005-status NE 'I'.
    DELETE wk_ftx WHERE manual = space.
  ENDIF.
  MOVE wk_ftx[] TO wk_ftx_aux[].

* Link de mensagens
  IF NOT wk_ftx[] IS INITIAL.
    SELECT * FROM zynft011 INTO TABLE wk_ref
            FOR ALL ENTRIES IN wk_ftx
            WHERE docnum = zynfe005-docnum
              AND seqnum = wk_ftx-seqnum.
  ENDIF.

  CLEAR zynfe005-status.

* Move os dados da filial
  IF NOT zynfe005-bupla IS INITIAL.
    SELECT SINGLE adrnr FROM j_1bbranch INTO v_adrnr
                   WHERE bukrs  = zynfe005-bukrs
                     AND branch = zynfe005-bupla.
    SELECT SINGLE country region city1 FROM adrc INTO
                (v_land1,v_bland,v_city1)
                WHERE addrnumber = v_adrnr.
  ENDIF.

** Consiste a natureza de operação
*  if not zynfe005-cno is initial.
*
** Antes o Programa verificava os Parâmetros pela data do dia (sy-datum)
** agora o programa busca a partir da data de entrada e saída.
*
*    select single * from zynft001 into wa_zynft001
*                        where cno      = zynfe005-cno
*                          and dtvgini  <= zynfe005-pstdat
*                          and dtvgfin  >= zynfe005-pstdat.
*
*    if sy-subrc ne 0.
*      message i069.
*      clear: zynfe005-cno.
*    endif.
*  else.
*    clear wa_zynft001.
*  endif.

  IF zynfe005-refdocnum IS INITIAL.

* Parâmetros fiscais
    LOOP AT itab_zynft006.
      CLEAR: zynfe006, itab_zynft006-nrseq, itab_zynft006-nrfiscal,
             descricao.
      MOVE-CORRESPONDING itab_zynft006 TO zynfe006.
      MODIFY itab_zynft006 INDEX sy-tabix.
*      perform propor_valores.
      netwrt = zynfe006-netwr + zynfe006-netdis +
               zynfe006-netfre + zynfe006-netins +
               zynfe006-netoth.
*      perform atualiza_item.
    ENDLOOP.


* Preenchendo o V_MAX
    DESCRIBE TABLE itab_zynft006 LINES v_line.
    v_max = v_line * 10.

*  else.
*    v_refdocnum = zynfe005-refdocnum.
*    select single * from zynft001 into wa_zynft001
*                      where cno = zynfe005-cno
*                        and dtvgini  <= zynfe005-pstdat
*                        and dtvgfin  >= zynfe005-pstdat.
*
** Buscando os itens da NF referência
*    select * from j_1bnflin
*              into corresponding fields of table itab_zynfe010
*              where docnum = zynfe005-refdocnum.
** Formar parâmetros Fiscais
*    loop at itab_zynfe010.
*      v_max = sy-tabix * 10.
*      move: v_max                to itab_zynft002-itmnum   ,
*            itab_zynfe010-taxlw1 to itab_zynft002-taxlawicm,
*            itab_zynfe010-taxlw2 to itab_zynft002-taxlawipi.
*      append itab_zynft002.
*    endloop.
  ENDIF.

* Descrição
  PERFORM busca_descricao.

  CLEAR: zynfe005-nrseq , zynfe005-docnum, zynfe005-series,
         zynfe005-nfnum , zynfe005-docdat, zynfe005-pstdat,
         zynfe005-status, v_status       , zynfe005-crenam,
         zynfe005-credat, zynfe005-cretim, zynfe005-chanam,
         zynfe005-chadat, zynfe005-chatim, zynfe005-nfnet ,
         zynfe005-netwr , zynfe005-data_entry.



  PERFORM gera_sequencial CHANGING zynfe005-nrseq.
  PERFORM atualiza_nrseq.

* Atualiza tabelas de liks de mensagens
  LOOP AT wk_ref.
    MOVE  zynfe005-nrseq TO wk_ref-nrseq.
    CLEAR wk_ref-docnum.
    MODIFY wk_ref INDEX sy-tabix.
  ENDLOOP.

  MOVE wk_ref[] TO wk_ref_aux[].

ENDFORM.                    " move_ref
*&---------------------------------------------------------------------*
*&      Form  check_parceiro
*&---------------------------------------------------------------------*
FORM check_parceiro.

  CLEAR: j_1bad, wk_parnad.

  SELECT SINGLE * FROM  j_1bad
         WHERE  parvw       = zynfe005-parvw.

  IF sy-dynnr <> '0001'.
    IF ok_code EQ 'REF'.
* Ler campo zynfe005-parid da tela
      CLEAR tdynpread.
      REFRESH tdynpread.

      tdynpread-fieldname  = 'ZYNFE005-PARID'.
      APPEND tdynpread.

      CALL FUNCTION 'DYNP_VALUES_READ'
        EXPORTING
          dyname               = 'SAPMZYNF005'
          dynumb               = '0111'
        TABLES
          dynpfields           = tdynpread
        EXCEPTIONS
          invalid_abapworkarea = 1
          invalid_dynprofield  = 2
          invalid_dynproname   = 3
          invalid_dynpronummer = 4
          invalid_request      = 5
          no_fielddescription  = 6
          invalid_parameter    = 7
          undefind_error       = 8
          double_conversion    = 9
          stepl_not_found      = 10
          OTHERS               = 11.

      READ TABLE tdynpread WITH KEY fieldname = 'ZYNFE005-PARID'.
      MOVE tdynpread-fieldvalue TO zynfe005-parid.

      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
        EXPORTING
          input  = zynfe005-parid
        IMPORTING
          output = zynfe005-parid.

    ENDIF.
  ENDIF.
* make the checks ------------------------------------------------------
  IF j_1bad-partyp <> 'B'.

    CALL FUNCTION 'J_1B_NF_PARTNER_READ'
      EXPORTING
        partner_type           = j_1bad-partyp
        partner_id             = zynfe005-parid
        partner_function       = zynfe005-parvw
      IMPORTING
        parnad                 = wk_parnad
      EXCEPTIONS
        partner_not_found      = 1
        partner_type_not_found = 2
        OTHERS                 = 3.
    IF sy-subrc <> 0.
      SET CURSOR FIELD 'ZYNFE005-PARID'.
      CLEAR partxt.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ELSE.
* Joga a descrição do parceiro
      WRITE wk_parnad-cgc USING
               EDIT MASK '__.___.___/____-__' TO v_paridtxt3.
      IF v_paridtxt3 = '00.000.000/0000-00'.
        CLEAR v_paridtxt3.
      ENDIF.

* A formatação do campo Inscrição Estadual só é feita se numérico
      IF wk_parnad-stains(1) = '0' OR
         wk_parnad-stains(1) = '1' OR
         wk_parnad-stains(1) = '2' OR
         wk_parnad-stains(1) = '3' OR
         wk_parnad-stains(1) = '4' OR
         wk_parnad-stains(1) = '5' OR
         wk_parnad-stains(1) = '6' OR
         wk_parnad-stains(1) = '7' OR
         wk_parnad-stains(1) = '8' OR
         wk_parnad-stains(1) = '9'.
        WRITE wk_parnad-stains USING
                 EDIT MASK '___.___.___' TO v_paridtxt4.
        CLEAR v_isento.
      ELSE.
        v_isento = 'X'.
        MOVE wk_parnad-stains TO v_paridtxt4.
      ENDIF.

      MOVE: wk_parnad-name1  TO v_paridtxt ,
            wk_parnad-stras  TO v_paridtxt2.
    ENDIF.
  ENDIF.                               "j_1bad-partyp <> 'B'.

ENDFORM.                    " check_parceiro
*&---------------------------------------------------------------------*
*&      Form  check_loc_ret
*&---------------------------------------------------------------------*
FORM check_loc_ret.

  DATA: BEGIN OF wk_locret.
          INCLUDE STRUCTURE j_1binnad.
  DATA: END OF wk_locret.

  CLEAR: j_1bad, wk_locret.
  IF NOT zynfe005-localret IS INITIAL.
    SELECT SINGLE * FROM  j_1bad
           WHERE  parvw       = zynfe005-localret.

* make the checks ------------------------------------------------------
    IF j_1bad-partyp <> 'B'.

      CALL FUNCTION 'J_1B_NF_PARTNER_READ'
        EXPORTING
          partner_type           = j_1bad-partyp
          partner_id             = zynfe005-locretid
          partner_function       = zynfe005-localret
        IMPORTING
          parnad                 = wk_locret
        EXCEPTIONS
          partner_not_found      = 1
          partner_type_not_found = 2
          OTHERS                 = 3.
      IF sy-subrc <> 0.
        SET CURSOR FIELD 'ZYNFE005-LOCRETID'.
        CLEAR partxt.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ELSE.
* Joga a descrição do parceiro
        MOVE: wk_locret-name1  TO localretxt ,
              wk_locret-stras  TO localretxt2.
      ENDIF.
    ENDIF.                               "j_1bad-partyp <> 'B'.
  ELSE.
    CLEAR: localretxt, localretxt2.
  ENDIF.

ENDFORM.                    " check_loc_ret
*&---------------------------------------------------------------------*
*&      Form  check_loc_ent
*&---------------------------------------------------------------------*
FORM check_loc_ent.

  DATA: BEGIN OF wk_locent.
          INCLUDE STRUCTURE j_1binnad.
  DATA: END OF wk_locent.

  CLEAR: j_1bad, wk_locent.

  IF NOT zynfe005-localent IS INITIAL.
    SELECT SINGLE * FROM  j_1bad
           WHERE  parvw       = zynfe005-localent.

* make the checks ------------------------------------------------------
    IF j_1bad-partyp <> 'B'.

      CALL FUNCTION 'J_1B_NF_PARTNER_READ'
        EXPORTING
          partner_type           = j_1bad-partyp
          partner_id             = zynfe005-locentid
          partner_function       = zynfe005-localent
        IMPORTING
          parnad                 = wk_locent
        EXCEPTIONS
          partner_not_found      = 1
          partner_type_not_found = 2
          OTHERS                 = 3.
      IF sy-subrc <> 0.
        SET CURSOR FIELD 'ZYNFE005-LOCENTID'.
        CLEAR partxt.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ELSE.
* Joga a descrição do parceiro
        MOVE: wk_locent-name1  TO localentxt ,
              wk_locent-stras  TO localentxt2.
      ENDIF.
    ENDIF.                               "j_1bad-partyp <> 'B'.
  ELSE.
    CLEAR: localentxt, localentxt2.
  ENDIF.
ENDFORM.                    " check_loc_ent
*&---------------------------------------------------------------------*
*&      Form  read_screen_control_tables
*&---------------------------------------------------------------------*
FORM read_screen_control_tables.

* read into internal tables
  SELECT * FROM j_1bak INTO TABLE scrgroup.
  SELECT * FROM j_1bal INTO TABLE scrrefer.
  SELECT * FROM j_1bam INTO TABLE scrcontr.

* sort internal tables
  SORT: scrgroup,
        scrrefer,
        scrcontr.

ENDFORM.                    " read_screen_control_tables
*&---------------------------------------------------------------------*
*&      Form  define_screen_control
*&---------------------------------------------------------------------*
FORM define_screen_control USING p-nftype p-entry.
* read screen control reference
  CLEAR: keyrefer,
         scrrefer.

  keyrefer-mandt = sy-mandt.
  keyrefer-nftype = p-nftype.
  keyrefer-manual = 'X'.
  keyrefer-modef  = 'CRE'.

  READ TABLE scrrefer WITH KEY keyrefer BINARY SEARCH.

* read screen control fields
  CLEAR: keycontr,
         scrcontr.

  keycontr-mandt = sy-mandt.
  keycontr-sconrf = scrrefer-sconrf.

  READ TABLE scrcontr WITH KEY keycontr BINARY SEARCH.

* loop in the screen
  LOOP AT SCREEN.
    CHECK screen-name = 'ZYNFE005-NFNUM'
       OR screen-name = 'ZYNFE005-SERIES'.

*   read field groups
    CLEAR: keygroup,
           scrgroup.

    keygroup-mandt = sy-mandt.
    SPLIT screen-name AT dash INTO keygroup-tabnm keygroup-feldn.
    MOVE 'J_1BDYDOC' TO keygroup-tabnm.
    READ TABLE scrgroup WITH KEY keygroup BINARY SEARCH.

*   get rule
    CLEAR: scr_group,
           scr_rule.
    IF NOT scrgroup-fgrup IS INITIAL.
      scr_group = scrgroup-fgrup.
      SUBTRACT 1 FROM scr_group.           " to find the off-set
      MOVE scrcontr-scrcon+scr_group(1) TO scr_rule.
    ENDIF.

**   No field control
*    if screen-group1 = 'NFC'.                " No field control
*      move '*' to scr_rule.                 " Set rule with display
*    endif.

*   translate rule
    CASE scr_rule.
      WHEN '+'.                         " obligatory
        IF v_entry EQ 'X'.
          zynfe005-data_entry = 'X'.
          screen-input    = 1.
          screen-output   = 1.
          screen-required = 1.
        ELSE.
          wa_zynft005aux-data_entry = 'X'.
        ENDIF.
      WHEN '.'.                          " optional
        IF v_entry EQ 'X'.
          zynfe005-data_entry = 'X'.
          screen-input    = 1.
          screen-output   = 1.
          screen-required = 0.
        ELSE.
          wa_zynft005aux-data_entry = 'X'.
        ENDIF.
      WHEN '*'.                        " display
        IF v_entry EQ 'X'.
          CLEAR: zynfe005-nfnum,
                 zynfe005-series.
        ELSE.
          CLEAR: wa_zynft005aux-nfnum,
                 wa_zynft005aux-series,
                 wa_zynft005aux-data_entry.
        ENDIF.
        screen-input    = 0.
        screen-output   = 1.
        screen-required = 0.
        CLEAR zynfe005-data_entry.
      WHEN '-'.                        " hide
        IF v_entry EQ 'X'.
          CLEAR: zynfe005-nfnum,
                 zynfe005-series.
        ELSE.
          CLEAR: wa_zynft005aux-nfnum,
                 wa_zynft005aux-series,
                 wa_zynft005aux-data_entry.
        ENDIF.
        screen-input    = 0.
        screen-output   = 0.
        screen-required = 0.
        screen-active   = 0.
        CLEAR zynfe005-data_entry.
      WHEN OTHERS.
        IF v_entry EQ 'X'.
          CLEAR: zynfe005-nfnum,
                 zynfe005-series.
        ELSE.
          CLEAR: wa_zynft005aux-nfnum,
                 wa_zynft005aux-series,
                 wa_zynft005aux-data_entry.
        ENDIF.
        screen-input    = 0.
        screen-output   = 1.
        screen-required = 0.
        CLEAR zynfe005-data_entry.
    ENDCASE.

    MODIFY SCREEN.

  ENDLOOP.

ENDFORM.                    " define_screen_control
*&---------------------------------------------------------------------*
*&      Form  limpa_editor
*&---------------------------------------------------------------------*
FORM limpa_editor.

* Editor
  IF NOT edit IS INITIAL.
    CALL METHOD edit->free.
  ENDIF.
  IF NOT container IS INITIAL.
    CALL METHOD container->free.
  ENDIF.

  FREE: edit, container.

ENDFORM.                    " limpa_editor
*&---------------------------------------------------------------------*
*&      Form  gera_j1b3n
*&---------------------------------------------------------------------*
*       Faz a saída da nota fiscal
*----------------------------------------------------------------------*
FORM gera_j1b3n.

* Limpando as tabelas do BI
  PERFORM limpa_bi.

* Dados para o BI
  itab_zynfe033-tcode  = 'J1B3N'        .
  itab_zynfe033-tabela = 'ZYNFT005'     .
  itab_zynfe033-cpochv = zynfe005-docnum.
  itab_zynfe033-belnr  = zynfe005-docnum.

  APPEND itab_zynfe033.

  CALL FUNCTION 'ZYNF_TRANSACAO_J1B3N'
    EXPORTING
      v_modo          = v_modo_bi
    TABLES
      t_dados         = itab_zynfe033
      t_campo         = itab_zynft034
      t_zynft032      = itab_zynft032
    EXCEPTIONS
      campo_em_branco = 1
      OTHERS          = 2.

  IF sy-subrc = 0.
    READ TABLE itab_zynft032 WITH KEY tcode  = 'J1B3N'
                                      tabela = 'ZYNFT005'
                                      cpochv = zynfe005-docnum
                                      tpmsg  = 'E'.

    IF sy-subrc NE 0. "Sucesso no BI
      IF zynfe005-nfnum IS INITIAL.
        SELECT SINGLE nfnum series FROM j_1bnfdoc
              INTO (zynfe005-nfnum,zynfe005-series)
                      WHERE docnum = zynfe005-docnum.
      ENDIF.
      zynfe005-status = 'E'.
      IF zynfe005-docdat IS INITIAL.
        zynfe005-docdat = sy-datum.
      ENDIF.
      IF v_saida = 'X'. "Saída
        MESSAGE i036 WITH zynfe005-nfnum.
        PERFORM entrada_comandada.
      ELSE. "Reimpressão
        MESSAGE i067 WITH zynfe005-nfnum.
      ENDIF.
    ELSE.
      CALL FUNCTION 'MESSAGES_INITIALIZE'.
      LOOP AT itab_zynft032.
        CALL FUNCTION 'MESSAGE_STORE'
          EXPORTING
            arbgb = 'ZYNFM'
            msgty = itab_zynft032-tpmsg
            msgv1 = itab_zynft032-msg+0(50)
            msgv2 = itab_zynft032-msg+50(50)
            txtnr = '092'
            zeile = itab_zynft032-nrmsg.
      ENDLOOP.
      CALL FUNCTION 'MESSAGES_SHOW'
        EXPORTING
          object          = 'SAPMZYNF005'
          i_amodal_window = ' '.
      CALL FUNCTION 'MESSAGES_INITIALIZE'.
    ENDIF.
  ELSE.
    LOOP AT itab_zynft034.
      MESSAGE i034 WITH itab_zynft034-descricao.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " gera_j1b3n
*&---------------------------------------------------------------------*
*&      Form  estorna_f02
*&---------------------------------------------------------------------*
*       Estorna documento contábil criado a partir da F-02
*----------------------------------------------------------------------*
FORM estorna_f02.
  DATA: v_monat LIKE t001b-frpe1,
        v_data  LIKE sy-datum.

  CLEAR v_tabix.
  LOOP AT itab_zynft007_aux2.
    v_tabix = sy-tabix.
* Verifica se o registro já foi estornado para não estorná-lo
* novamente
    CLEAR bkpf.
    SELECT SINGLE * FROM bkpf WHERE bukrs = zynfe005-bukrs
                                AND belnr = itab_zynft007_aux2-belnr
                                AND gjahr = zynfe005-pstdat(4)
                                AND stgrd = space.
    IF sy-subrc NE 0.
      CONTINUE.
    ENDIF.

* Limpa as tabelas de contabilização
    PERFORM limpa_bi.

* Preenche os dados necessários para o BI
    itab_zynfe033-mandt  = sy-mandt.
    itab_zynfe033-tcode  = 'FB08'.
    itab_zynfe033-tabela = 'ZYNFT007'.
    itab_zynfe033-cpochv = zynfe005-docnum.
* Docto mcontábil
    itab_zynfe033-belnr  = itab_zynft007_aux2-belnr.
* Empresa
    itab_zynfe033-bukrs  = zynfe005-bukrs.
* Data de Lançamento
*    if zynfe005-pstdat => bkpf-budat.
*      v_data = zynfe005-pstdat.
*    else.
*      v_data = bkpf-budat.
*    endif.
    itab_zynfe033-budat  = zynfe005-pstdat.
* Ano Contabil
    itab_zynfe033-gjahs  = zynfe005-pstdat+0(4).

    v_monat = itab_zynfe033-budat+2(2).
    " Verifica se o período a ser estornado está aberto
    CALL FUNCTION 'FI_PERIOD_CHECK'
      EXPORTING
        i_bukrs          = itab_zynfe033-bukrs
        i_gjahr          = itab_zynfe033-budat+0(4)
        i_koart          = 'S'
        i_monat          = v_monat
      EXCEPTIONS
        error_period     = 1
        error_period_acc = 2
        OTHERS           = 3.

    IF sy-subrc = 0.
      itab_zynfe033-stgrd = '01'.
    ELSE.
      itab_zynfe033-stgrd = '02'.
    ENDIF.

    APPEND itab_zynfe033.

    CALL FUNCTION 'ZYNF_TRANSACAO_FB08'
      EXPORTING
        v_modo          = v_modo_bi
      TABLES
        t_dados         = itab_zynfe033
        t_campo         = itab_zynft034
        t_zynft032      = itab_zynft032
      EXCEPTIONS
        campo_em_branco = 1
        OTHERS          = 2.

    IF sy-subrc = 0.
      READ TABLE itab_zynft032 WITH KEY tcode  = 'FB08'
                                        tabela = 'ZYNFT007'
                                        cpochv = zynfe005-docnum
                                        tpmsg  = 'E'.
      IF sy-subrc NE 0. "Sucesso no estorno
        MESSAGE i037 WITH itab_zynft007_aux2-belnr.
      ELSE.
        CALL FUNCTION 'MESSAGES_INITIALIZE'.
        LOOP AT itab_zynft032.
          CALL FUNCTION 'MESSAGE_STORE'
            EXPORTING
              arbgb = 'ZYNFM'
              msgty = itab_zynft032-tpmsg
              msgv1 = itab_zynft032-msg+0(50)
              msgv2 = itab_zynft032-msg+50(50)
              txtnr = '092'
              zeile = itab_zynft032-nrmsg.
        ENDLOOP.
        CALL FUNCTION 'MESSAGES_SHOW'
          EXPORTING
            object          = 'SAPMZYNF005'
            i_amodal_window = ' '.
        CALL FUNCTION 'MESSAGES_INITIALIZE'.
      ENDIF.
    ELSE.
      LOOP AT itab_zynft034.
        MESSAGE i035 WITH itab_zynft034-descricao.
      ENDLOOP.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " estorna_f02
*&---------------------------------------------------------------------*
*&      Form  itens_impostos
*&---------------------------------------------------------------------*
*       Cria os impostos para cada item e totaliza
*----------------------------------------------------------------------*
FORM itens_impostos.

* se for data entry, só fazer uma vez.
  IF zynfe005-data_entry = 'X'.
    READ TABLE itab_zynft009 INTO wa_zynft009 WITH KEY
                                      itmnum = zynfe006-itmnum.
    IF sy-subrc = 0.
      CLEAR:   itab_zynft009a, itab_zynft009_aux.
      REFRESH: itab_zynft009a, itab_zynft009_aux.
      LOOP AT itab_zynft009.
        IF itab_zynft009-itmnum = zynfe006-itmnum.
          MOVE-CORRESPONDING itab_zynft009 TO itab_zynft009_aux.
          APPEND itab_zynft009_aux.
        ENDIF.
        CLEAR itab_zynft009-itmnum.
        MOVE-CORRESPONDING itab_zynft009 TO itab_zynft009a.
        COLLECT itab_zynft009a.
      ENDLOOP.
      CLEAR itab_zynft009.
      EXIT.
    ENDIF.
  ENDIF.

  READ TABLE itab_zynft003 WITH KEY itmnum = zynfe006-itmnum.
  IF sy-subrc NE 0 AND NOT wa_zynft002 IS INITIAL.
    PERFORM select_impostos.
  ENDIF.

  CLEAR itab_zynft009.
  SORT itab_zynft003 BY itmnum indice.
  LOOP AT itab_zynft003 WHERE itmnum = zynfe006-itmnum.
    v_index = sy-tabix.

    itab_zynft009-mandt  = sy-mandt.
    itab_zynft009-nrseq  = zynfe005-nrseq.
    itab_zynft009-itmnum = zynfe006-itmnum.
    itab_zynft009-taxgrp = itab_zynft003-taxgrp.
    itab_zynft009-taxtyp = itab_zynft003-taxtyp.
    itab_zynft009-rate   = itab_zynft003-rate.

    IF itab_zynft003-pauta IS INITIAL.
      CASE itab_zynft003-trib.
        WHEN '1'.
          PERFORM calcula_montante USING itab_zynft009-base.
        WHEN '2'.
          PERFORM calcula_montante USING itab_zynft009-excbas.
        WHEN '3'.
          PERFORM calcula_montante USING itab_zynft009-othbas.
      ENDCASE.
    ELSE.
      itab_zynft009-pauta   = itab_zynft003-pauta.
      PERFORM calcula_pauta.
    ENDIF.
*Inicio cha. 1587768 - 27/10/2009 - VJR
    MODIFY itab_zynft009 INDEX v_index.
    IF sy-subrc NE 0.
      APPEND itab_zynft009.
    ENDIF.
*    READ TABLE itab_zynft009
*                       WITH KEY itmnum = zynfe006-itmnum      "Item
*                                taxgrp = itab_zynft003-taxgrp."Imposto
*    IF sy-subrc NE 0.
*      APPEND itab_zynft009.
*    ELSE.
*      MODIFY itab_zynft009 INDEX sy-tabix.
*    ENDIF.
*Fim cha. 1587768 - 27/10/2009 - VJR

    CLEAR itab_zynft009.

  ENDLOOP.

  CLEAR:   itab_zynft009a, itab_zynft009_aux.
  REFRESH: itab_zynft009a, itab_zynft009_aux.
  LOOP AT itab_zynft009.
    IF itab_zynft009-itmnum = zynfe006-itmnum.
      MOVE-CORRESPONDING itab_zynft009 TO itab_zynft009_aux.
      APPEND itab_zynft009_aux.
    ENDIF.
    CLEAR itab_zynft009-itmnum.
    MOVE-CORRESPONDING itab_zynft009 TO itab_zynft009a.
    COLLECT itab_zynft009a.
  ENDLOOP.
  CLEAR itab_zynft009.

ENDFORM.                    " itens_impostos
*&---------------------------------------------------------------------*
*&      Form  elimina_nf
*&---------------------------------------------------------------------*
*       Elimena a Nota Fiscal usando BI
*----------------------------------------------------------------------*
FORM elimina_nf.

  PERFORM limpa_bi.

* Dados para o BI
  itab_zynfe033-tcode  = 'J1B3N'        .
  itab_zynfe033-tabela = 'ZYNFT005'     .
  itab_zynfe033-cpochv = zynfe005-nftype.
  itab_zynfe033-docnum = zynfe005-docnum.

  APPEND itab_zynfe033.

  CALL FUNCTION 'ZYNF_TRANSACAO_J1B3N_A'
    EXPORTING
      v_modo          = v_modo_bi
    TABLES
      t_dados         = itab_zynfe033
      t_campos        = itab_zynft034
      t_zynft032      = itab_zynft032
    EXCEPTIONS
      campo_em_branco = 1
      periodo_fechado = 2.
  IF sy-subrc = 0.
    READ TABLE itab_zynft032 WITH KEY tcode  = 'J1B3N'
                                      tabela = 'ZYNFT005'
                                      cpochv = zynfe005-nftype
                                      tpmsg  = 'E'.
    IF sy-subrc NE 0. "Sucesso no BI
      MESSAGE i038 WITH zynfe005-docnum.
      v_est_nota = 'S'.
      zynfe005-status = 'C'.
    ELSE.
      CALL FUNCTION 'MESSAGES_INITIALIZE'.
      LOOP AT itab_zynft032.
        CALL FUNCTION 'MESSAGE_STORE'
          EXPORTING
            arbgb = 'ZYNFM'
            msgty = itab_zynft032-tpmsg
            msgv1 = itab_zynft032-msg+0(50)
            msgv2 = itab_zynft032-msg+50(50)
            txtnr = '092'
            zeile = itab_zynft032-nrmsg.
      ENDLOOP.
      CALL FUNCTION 'MESSAGES_SHOW'
        EXPORTING
          object          = 'SAPMZYNF005'
          i_amodal_window = ' '.
      CALL FUNCTION 'MESSAGES_INITIALIZE'.
    ENDIF.
  ELSE.
    LOOP AT itab_zynft034.
      MESSAGE i034 WITH itab_zynft034-descricao.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " elimina_nf
*&---------------------------------------------------------------------*
*&      Form  atualiza_mensagens
*&---------------------------------------------------------------------*
*       Seleciona as mensagens geradas na J1B1 para este programa
*----------------------------------------------------------------------*
FORM atualiza_mensagens.
  DATA: BEGIN OF wk_ref_2 OCCURS 0.
          INCLUDE STRUCTURE j_1bnfref.
  DATA:   nrseq LIKE zynft011-nrseq.
  DATA: END OF wk_ref_2.

  CLEAR: wk_ref_2, wk_ref, wk_ftx_aux1, v_seqnum.
  REFRESH: wk_ref_2, wk_ref, wk_ftx_aux1.

* mensagens
  SELECT * FROM j_1bnfftx INTO TABLE wk_ftx_aux1
         WHERE docnum = zynfe005-docnum.

  DESCRIBE TABLE wk_ftx1 LINES v_seqnum.

  LOOP AT wk_ftx_aux1.

    READ TABLE wk_ftx WITH KEY message = wk_ftx_aux1-message.
    IF sy-subrc EQ 0.
      DELETE wk_ftx_aux1.
* continue.
    ELSE.
      v_seqnum = v_seqnum + 1.

      MOVE: v_seqnum               TO wk_ftx-seqnum ,
            '01'                   TO wk_ftx-linnum ,
            wk_ftx_aux1-message     TO wk_ftx-message,
            'X'                    TO wk_ftx-regime ,

            v_seqnum               TO wk_ftx1-seqnum ,
            '01'                   TO wk_ftx1-linnum ,
            wk_ftx_aux1-message     TO wk_ftx1-message,
            'X'                    TO wk_ftx1-regime.
      APPEND: wk_ftx,
              wk_ftx1.
    ENDIF.
  ENDLOOP.


* Links de mensagens e itens
  SELECT * FROM j_1bnfref INTO TABLE wk_ref_2
         WHERE docnum = zynfe005-docnum.

  LOOP AT wk_ref_2.
    MOVE: zynfe005-nrseq   TO wk_ref-nrseq  ,
          zynfe005-docnum  TO wk_ref-docnum ,
          wk_ref_2-itmnum  TO wk_ref-itmnum ,
          wk_ref_2-seqnum  TO wk_ref-seqnum .
    APPEND wk_ref.
  ENDLOOP.

  SORT wk_ftx  BY seqnum linnum.
  SORT wk_ftx1 BY seqnum linnum.

ENDFORM.                    " atualiza_mensagens
*&---------------------------------------------------------------------*
*&      Form  itens_mensagens
*&---------------------------------------------------------------------*
*      Move para tela de mensagens só itens selecionados
*----------------------------------------------------------------------*
FORM itens_mensagens.

  CLEAR wk_ftx1_aux.
  REFRESH wk_ftx1_aux.

  LOOP AT wk_ref WHERE itmnum = zynfe006-itmnum.
    READ TABLE wk_ftx1 WITH KEY seqnum = wk_ref-seqnum.
    MOVE wk_ftx1 TO wk_ftx1_aux.
    APPEND wk_ftx1_aux.
  ENDLOOP.

ENDFORM.                    " itens_mensagens
*&---------------------------------------------------------------------*
*&      Form  exclui_mensagem
*&---------------------------------------------------------------------*
*       Exclui mensagem selecionada
*----------------------------------------------------------------------*
FORM exclui_mensagem.

  DATA: v_seqnum LIKE j_1bnfftx-seqnum.

  READ TABLE wk_ftx1 WITH KEY selkz  = 'X'.
  IF sy-subrc NE 0.
    MESSAGE w040.
    EXIT.
  ENDIF.

  CALL FUNCTION 'POPUP_TO_CONFIRM_STEP'
    EXPORTING
      defaultoption  = 'Y'
      textline1      = text-050
      titel          = text-008
      start_column   = 25
      start_row      = 6
      cancel_display = ' '
    IMPORTING
      answer         = v_answer.

  IF v_answer = 'J'.

    CLEAR v_tabix.
    SORT wk_ftx1 BY seqnum.
    LOOP AT wk_ftx1.
      v_tabix = v_tabix + 1.
      IF wk_ftx1-selkz = 'X'.
* Se for uma nota fiscal referenciada a outra, não apagar a 1º mensagem
        IF wk_ftx1-seqnum = '01' AND NOT zynfe005-refdocnum IS INITIAL.
          CONTINUE.
        ENDIF.

*        clear: xthead, rtext.
*        refresh: xthead, rtext.
*
*        concatenate wk_ftx1-seqnum wk_ftx1-message wk_ftx1-regime into
*        rtext-tdline.
*        append rtext.
*
*        clear v_tdname.
*        concatenate 'ZYNF005' zynfe005-nrseq into v_tdname.
*
*        xthead-tdobject   = 'ZYNF005'.        "Objeto Fixo
*        xthead-tdname     = v_tdname .        "ID do texto
*        xthead-tdid       = 'ZYNF'   .        "Constante
*        xthead-tdspras    = sy-langu .        "Idioma
*        xthead-tdlinesize = 072      .        "Larg. linha do editor
*        append xthead.
*
*        call function 'SAVE_TEXT'             "Função salvar cpo. texto
*             exporting
*                client          = sy-mandt
*                header          = xthead      "Estrut. parâm. passados
*                insert          = 'X'
*                savemode_direct = 'X'
*                owner_specified = 'X'
*             tables
*                lines           = rtext       "Recebe conteúdo Tab.Int.
*             exceptions
*                id             = 1
*                language       = 2
*                name           = 3
*                object         = 4
*                others         = 5.

        DELETE wk_ref  WHERE seqnum = wk_ftx1-seqnum.
        DELETE wk_ftx  WHERE seqnum = wk_ftx1-seqnum.
        DELETE wk_ftx1 INDEX v_tabix.
        v_tabix = v_tabix - 1.
        v_del = 'S'.
      ENDIF.

      IF v_del NE 'S'.
        IF v_tabix = 1.
          v_seqnum = 01.
        ENDIF.

        wk_ref-seqnum = v_seqnum.
        MODIFY wk_ref TRANSPORTING seqnum WHERE seqnum = wk_ftx1-seqnum.
        wk_ftx-seqnum = v_seqnum.
        MODIFY wk_ftx TRANSPORTING seqnum WHERE seqnum = wk_ftx1-seqnum.
        wk_ftx1-seqnum = v_seqnum.
        MODIFY wk_ftx1 TRANSPORTING seqnum.
        v_seqnum = v_seqnum + 1.
      ELSE.
        v_del = 'N'.
      ENDIF.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " exclui_mensagem
*&---------------------------------------------------------------------*
*&      Form  chama_mensagem
*&---------------------------------------------------------------------*
*       Chama mensagem selecionada
*----------------------------------------------------------------------*
FORM chama_mensagem.

  GET CURSOR FIELD v_campo VALUE v_valor LINE v_index.
  v_index = v_index + pagebegin.

  CHECK v_campo = 'J_1BDYFTX-MESSAGE'.
  IF NOT edit IS INITIAL.
    CALL METHOD edit->free.
    CLEAR edit.
  ENDIF.
  IF NOT container IS INITIAL.
    CALL METHOD container->free.
    CLEAR container.
  ENDIF.
  CALL SCREEN '0600'.

ENDFORM.                    " chama_mensagem
*&---------------------------------------------------------------------*
*&      Form  gera_sequencial
*&---------------------------------------------------------------------*
*       Gera o sequencial para o controle interno
*----------------------------------------------------------------------*
FORM gera_sequencial CHANGING p_nrseq.
  DATA:
     v_nrseq_aux      LIKE zynft005-nrseq,   " Último sequencial usado
     v_count(7)       TYPE n,                " Contador p/ próximo seq.
     v_ano(4).

  CONCATENATE '%' 'N' sy-datum+2(2) INTO v_ano.

  " Busca último seq. usado e cria seq. p/ novo contrato
  SELECT MAX( nrseq ) INTO (v_nrseq_aux) FROM zynft005
         WHERE nrseq LIKE v_ano.

  IF v_nrseq_aux+8(2) EQ sy-datum+2(2).
    v_count = v_nrseq_aux+0(7) + 1.
  ELSE.
    v_count = 1.
  ENDIF.
  CONCATENATE v_count 'N' sy-datum+2(2) INTO p_nrseq.

ENDFORM.                    " gera_sequencial
*&---------------------------------------------------------------------*
*&      Form  insere_dados_itens
*&---------------------------------------------------------------------*
*       Move os dados para a estrutura ZYNFE006
*----------------------------------------------------------------------*
FORM insere_dados_itens.

  MOVE: wa_zynft002     TO itab_zynft002       ,
        zynfe006-itmnum TO itab_zynft002-itmnum.

  APPEND itab_zynft002.

  MOVE: zynfe005-nrseq     TO zynfe006-nrseq        ,
        wa_zynft002-nrseq  TO zynfe006-nrfiscal     ,
        wa_zynft002-nrseq  TO itab_zynft006-nrfiscal.

  MODIFY itab_zynft006 TRANSPORTING nrfiscal
                       WHERE itmnum = zynfe006-itmnum.

* Se já hover valores, não mover parâmetros
  IF zynfe006-netfre IS INITIAL.
    MOVE wa_zynft002-netfre TO zynfe006-netfre.
  ENDIF.
  IF zynfe006-netins IS INITIAL.
    MOVE wa_zynft002-netins TO zynfe006-netins.
  ENDIF.
  IF zynfe006-netoth IS INITIAL.
    MOVE wa_zynft002-netoth TO zynfe006-netoth.
  ENDIF.

  IF NOT wa_zynft002-matnr IS INITIAL.
    MOVE wa_zynft002-matnr TO zynfe006-matnr.
  ENDIF.
  IF NOT wa_zynft002-mtart IS INITIAL.
    MOVE wa_zynft002-mtart TO zynfe006-mtart.
  ENDIF.
  IF NOT wa_zynft002-matkl IS INITIAL.
    MOVE wa_zynft002-matkl TO zynfe006-matkl.
  ENDIF.
  IF NOT wa_zynft002-werks IS INITIAL.
    MOVE wa_zynft002-werks TO zynfe006-werks.
  ENDIF.
  IF NOT wa_zynft002-nbm IS INITIAL.
    MOVE wa_zynft002-nbm TO zynfe006-nbm.
  ENDIF.
  IF NOT wa_zynft002-matorg IS INITIAL.
    MOVE wa_zynft002-matorg TO zynfe006-matorg.
  ENDIF.



* Buscando o tipo de operação
  SELECT SINGLE descricao FROM zynft010 INTO descricao
                      WHERE tpoper = wa_zynft002-tpoper.

* Move o preço do material se ouver.
  IF NOT zynfe006-matnr IS INITIAL.
    CASE wa_zynft002-preco.
      WHEN 'A'.
        SELECT SINGLE verpr FROM mbew INTO zynfe006-netpr
                     WHERE matnr = zynfe006-matnr
                       AND bwkey = zynfe006-werks.
*                     where matnr = wa_zynft002-matnr
*                       and bwkey = wa_zynft002-werks.
      WHEN 'B'.
        SELECT SINGLE stprs FROM mbew INTO zynfe006-netpr
                     WHERE matnr = zynfe006-matnr
                       AND bwkey = zynfe006-werks.
*                     where matnr = wa_zynft002-matnr
*                       and bwkey = wa_zynft002-werks.
    ENDCASE.
  ENDIF.

  PERFORM move_cfop CHANGING zynfe006-cfop.

ENDFORM.                    " insere_dados_itens
*&---------------------------------------------------------------------*
*&      Form  select_impostos
*&---------------------------------------------------------------------*
*   seleciona os dados da tabela ZYNFT003 de acordo com cada item
*----------------------------------------------------------------------*
FORM select_impostos.

  DATA wa_zynft003 LIKE zynft003.

  CLEAR itab_zynft003_aux.
  REFRESH itab_zynft003_aux.
  SELECT * FROM zynft003 INTO TABLE itab_zynft003_aux
                  WHERE nrseq = itab_zynft002-nrseq
                    AND bland = itab_zynft002-blandori
                    AND dtvgini  <= zynfe005-pstdat
                    AND dtvgfin  >= zynfe005-pstdat.

  IF sy-subrc = 0.

    LOOP AT itab_zynft003_aux.
      READ TABLE itab_zynft003 INTO wa_zynft003 WITH KEY
                                taxgrp = itab_zynft003_aux-taxgrp
                                bland  = itab_zynft003_aux-bland
                                itmnum = zynfe006-itmnum.
      IF sy-subrc NE 0.
        MOVE: itab_zynft003_aux TO itab_zynft003       ,
              zynfe006-itmnum   TO itab_zynft003-itmnum.
        APPEND itab_zynft003.
      ENDIF.
    ENDLOOP.
*    sort itab_zynft003 by indice.
  ELSE.
* só exibe mensagem se a nota não for referenciada
    IF zynfe005-refdocnum IS INITIAL.
      MESSAGE s044.
    ENDIF.
  ENDIF.

* Se o código do material não estiver preenchido, apenas o grupo de menc
* e não hover hover tributação de IPI para o item, mover NBM genérico.
  IF zynfe006-matnr IS INITIAL.
    READ TABLE itab_zynft003 INTO wa_zynft003
                        WITH KEY itmnum = zynfe006-itmnum
                                 taxgrp = 'IPI'.
    IF sy-subrc NE 0. "Não tem tributação de IPI
      zynfe006-nbm = text-072.
    ENDIF.
  ENDIF.

ENDFORM.                    " select_impostos
*&---------------------------------------------------------------------*
*&      Form  VERIFY_NULL_FIELD
*&---------------------------------------------------------------------*
*        Verifica se o campo (obrigatório p/ contab.) está nulo
*----------------------------------------------------------------------*
FORM verify_null_field USING value(p_field)
                             value(p_fieldname)
                             value(p_description).

  IF p_field IS INITIAL.
    itab_zynft034-campo     = p_fieldname.
    itab_zynft034-descricao = p_description.
    APPEND itab_zynft034.
  ENDIF.

ENDFORM.                               " VERIFY_NULL_FIELD
*&---------------------------------------------------------------------*
*&      Form  GERA_NOTA_FISCAL
*&---------------------------------------------------------------------*
*       Gera a nota fiscal do registro
*----------------------------------------------------------------------*
FORM gera_nota_fiscal.
  DATA: v_tipo TYPE c.

  CLEAR v_exit.
* Verifica se há itens cadastrados nas tc de itens
  IF itab_zynft006[] IS INITIAL.
    MESSAGE s000 WITH text-016.
    pressed_tab = 'FC_ITENS'.
    EXIT.
  ENDIF.

  CLEAR itab_zynft003_aux.
  REFRESH itab_zynft003_aux.

  MOVE itab_zynft003[] TO itab_zynft003_aux[].
  SORT itab_zynft003_aux BY itmnum.

*Efetuando a consistencia
  LOOP AT itab_zynft003_aux WHERE fcont = 'X'.
    CASE itab_zynft003_aux-taxgrp.
      WHEN 'ICMS'.
        v_tipo = 'C'.
      WHEN 'ICST'.
        v_tipo = 'D'.
      WHEN 'IPI'.
        v_tipo = 'B'.
      WHEN 'ISS'.
        v_tipo = 'N'.
      WHEN 'ICOP'.
        v_tipo = 'F'.
      WHEN 'ICFR'.
        v_tipo = 'N'.
      WHEN 'ICFS'.
        v_tipo = 'E'.
    ENDCASE.
    LOOP AT itab_zynft004 WHERE tpvalor = v_tipo
                            AND itmnum =  itab_zynft003_aux-itmnum.
    ENDLOOP.
    IF sy-subrc NE 0.
      MESSAGE i072 WITH itab_zynft003_aux-itmnum
                       itab_zynft003_aux-taxgrp.
      v_exit = 'X'.
    ENDIF.
  ENDLOOP.

* Se não há itens contábeis para qualquer item, encerrar o processo
  IF v_exit = 'X'.
    EXIT.
  ENDIF.

  IF zynfe005-docnum IS INITIAL.
    PERFORM gera_j1b1.
  ELSE.
    LOOP AT itab_zynft007_aux2 WHERE belnr IS INITIAL AND netwr NE 0.
    ENDLOOP.
    IF sy-subrc EQ 0.
      PERFORM gera_f02.
    ENDIF.
  ENDIF.

  IF NOT zynfe005-docnum IS INITIAL.
* Movendo o Status e usuário que gerou a NF no SAP R/3
    IF zynfe005-status EQ 'I' OR zynfe005-status IS INITIAL.
      zynfe005-status  = 'G'.
    ENDIF.

* Fazendo a saída da nota se necessário
    IF zynfe005-status NE 'E' AND zynfe005-data_entry IS INITIAL.
      PERFORM popup_message_saida USING text-066 text-012.
      IF v_answer EQ 'J'.
        LOOP AT itab_zynft007_aux2 WHERE belnr EQ space AND netwr NE 0.
        ENDLOOP.
        IF sy-subrc = 0.
          MESSAGE i073.
        ELSE.
          v_saida = 'X'.
          PERFORM gera_j1b3n.
        ENDIF.
      ENDIF.
    ENDIF.

* Apagando os dados antigos das tabelas ZYNFT006 e ZYNFT007
    DELETE FROM zynft006 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft007 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft009 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq.

    DELETE FROM zynft011 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND docnum = v_docnum_c.


* Salvando cabeçalho (alteração)
    MODIFY zynft005 FROM zynfe005.
* Salvando os itens
    MODIFY zynft006 FROM TABLE itab_zynft006.
    MODIFY zynft007 FROM TABLE itab_zynft007.
    MODIFY zynft009 FROM TABLE itab_zynft009.
    MODIFY zynft011 FROM TABLE wk_ref       .

    COMMIT WORK AND WAIT.

*-----------------------------------------------------------------------
* Salvando as Mensagens

* Verifica se há registros em branco nas tabelas wk_ftx e wk_ftx1.
    DELETE wk_ftx WHERE message EQ space.
    DELETE wk_ftx1 WHERE message EQ space.

    CLEAR: xthead, rtext.
    REFRESH: xthead, rtext.

* se não houver o registro na TTXOB e TTXID, gravar
    PERFORM gravar_ttxob_ttxid.

    LOOP AT wk_ftx.
      CONCATENATE wk_ftx-regime wk_ftx-seqnum wk_ftx-message INTO
          rtext-tdline.
      APPEND rtext.
    ENDLOOP.

    CLEAR v_tdname.
    CONCATENATE 'ZYNF005' zynfe005-nrseq INTO v_tdname.

    xthead-tdobject   = 'ZYNF005'.        "Objeto Fixo
    xthead-tdname     = v_tdname .        "ID do texto
    xthead-tdid       = 'ZYNF'   .        "Constante
    xthead-tdspras    = sy-langu .        "Idioma
    xthead-tdlinesize = 072      .        "Larg. linha do editor
    APPEND xthead.

    CALL FUNCTION 'SAVE_TEXT'             "Função salvar cpo. texto
         EXPORTING
            client          = sy-mandt
            header          = xthead      "Estrut. parâm. passados
            insert          = 'X'
            savemode_direct = 'X'
            owner_specified = 'X'
         TABLES
            lines           = rtext       "Recebe conteúdo Tab.Int.
         EXCEPTIONS
            id             = 1
            language       = 2
            name           = 3
            object         = 4
            OTHERS         = 5.
*--------------------------------------------------------------------

* Atualizando o a tabela auxiliar
    MOVE: zynfe005        TO wa_zynft005        ,
          itab_zynft006[] TO itab_zynft006_aux[],
          itab_zynft007[] TO itab_zynft007_aux[],
          wk_ref[]        TO wk_ref_aux[],
          wk_ftx[]        TO wk_ftx_aux[]       .

    MESSAGE s012.             "Registro salvo com sucesso

    v_tcode = 'ZYNF005_E'.
    PERFORM busca_descricao.
    PERFORM limpa_editor.
*  else.
*    message s028.
  ENDIF.

ENDFORM.                    " GERA_NOTA_FISCAL
*&---------------------------------------------------------------------*
*&      Form  select_contabeis
*&---------------------------------------------------------------------*
*       Seleciona os dados da tabela ZYNFT004 referente a cada item
*----------------------------------------------------------------------*
FORM select_contabeis.
  DATA: BEGIN OF itab_zynft004_aux OCCURS 10.
          INCLUDE STRUCTURE zynft004.
  DATA: itmnum LIKE zynft006-itmnum.
  DATA: END OF itab_zynft004_aux.

  DATA: wa_zynft004 LIKE zynft004.

  CLEAR itab_zynft004_aux.
  REFRESH itab_zynft004_aux.
  SELECT * FROM zynft004 INTO TABLE itab_zynft004_aux
                  WHERE cno   = zynfe005-cno
                    AND nrseq = wa_zynft002-nrseq
                    AND dtvgini  <= zynfe005-pstdat
                    AND dtvgfin  >= zynfe005-pstdat.

  IF sy-subrc = 0.
    LOOP AT itab_zynft004_aux.
      READ TABLE itab_zynft004 INTO wa_zynft004 WITH KEY
                                cno     = itab_zynft004_aux-cno
                                tpvalor = itab_zynft004_aux-tpvalor
                                nrseq   = itab_zynft004_aux-nrseq
                                itmnum  = zynfe006-itmnum.
      IF sy-subrc NE 0.
        MOVE: itab_zynft004_aux TO itab_zynft004       ,
              zynfe006-itmnum   TO itab_zynft004-itmnum.
        APPEND itab_zynft004.
      ENDIF.
    ENDLOOP.
  ELSE.
** Para acusar o erro nos parâmetros contábeis, os parâmetros de
** tributação devem estar OK
*    read table itab_zynft003 into wa_zynft003
*                             with key itmnum = zynfe006-itmnum.
*    if sy-subrc = 0.
**      if wa_zynft001-fcont is initial.
**        message s066.
**      else.
*      message s045.
**      endif.
*    endif.
  ENDIF.

ENDFORM.                    " select_contabeis
*&---------------------------------------------------------------------*
*&      Form  cria_zuonr
*&---------------------------------------------------------------------*
*       Cria a atribuição dos lançtos automáticos
*----------------------------------------------------------------------*
FORM cria_zuonr.

*  data: v_cfop like zynfe006-cfop.

  CLEAR: itab_zynft007-zuonr, v_cfop.

* Antes de verificar os flags, ver o campo proposto na tabela ZYNFT004
  IF NOT itab_zynft004-zuonr IS INITIAL.
    MOVE itab_zynft004-zuonr TO itab_zynft007-zuonr.
  ENDIF.

  IF NOT itab_zynft004-antoper IS INITIAL AND
     NOT zynfe005-cno IS INITIAL.
    CONCATENATE itab_zynft007-zuonr zynfe005-cno
       INTO itab_zynft007-zuonr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-acfop IS INITIAL AND
     NOT zynfe006-cfop IS INITIAL.

    CALL FUNCTION 'CONVERSION_EXIT_CFOBR_OUTPUT'
      EXPORTING
        input  = zynfe006-cfop
      IMPORTING
        output = v_cfop.

    CONCATENATE itab_zynft007-zuonr v_cfop
       INTO itab_zynft007-zuonr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-alocneg IS INITIAL AND
     NOT zynfe005-bupla IS INITIAL.
    CONCATENATE itab_zynft007-zuonr zynfe005-bupla
       INTO itab_zynft007-zuonr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-acodpar IS INITIAL AND
     NOT zynfe005-parid IS INITIAL.
    CONCATENATE itab_zynft007-zuonr zynfe005-parid
       INTO itab_zynft007-zuonr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-atppar IS INITIAL AND
     NOT zynfe005-parvw IS INITIAL.
    CONCATENATE itab_zynft007-zuonr zynfe005-parvw
       INTO itab_zynft007-zuonr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-anumnf IS INITIAL AND
     NOT zynfe005-docnum IS INITIAL.
    CONCATENATE itab_zynft007-zuonr zynfe005-docnum
       INTO itab_zynft007-zuonr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-aorigem IS INITIAL AND
     NOT wa_zynft002-blandori IS INITIAL.
    CONCATENATE itab_zynft007-zuonr wa_zynft002-blandori
       INTO itab_zynft007-zuonr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-adestino IS INITIAL AND
     NOT wa_zynft002-blanddes IS INITIAL.
    CONCATENATE itab_zynft007-zuonr wa_zynft002-blanddes
       INTO itab_zynft007-zuonr SEPARATED BY space.
  ENDIF.

* Apagando o espaço em branco se houver.
  IF itab_zynft007-zuonr+0(1) IS INITIAL.
    MOVE itab_zynft007-zuonr+1 TO itab_zynft007-zuonr.
  ENDIF.

ENDFORM.                    " cria_zuonr
*&---------------------------------------------------------------------*
*&      Form  cria_xblnr
*&---------------------------------------------------------------------*
*       Cria a referência dos lançtos automáticos
*----------------------------------------------------------------------*
FORM cria_xblnr.

*  data: v_cfop like zynfe006-cfop.

  CLEAR: itab_zynft007-xblnr, v_cfop.

* Antes de verificar os flags, ver o campo proposto na tabela ZYNFT004
  IF NOT itab_zynft004-xblnr IS INITIAL.
    MOVE itab_zynft004-xblnr TO itab_zynft007-xblnr.
  ENDIF.

  IF NOT itab_zynft004-rntoper IS INITIAL AND
     NOT zynfe005-cno IS INITIAL.
    CONCATENATE itab_zynft007-xblnr zynfe005-cno
       INTO itab_zynft007-xblnr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-rcfop IS INITIAL AND
     NOT zynfe006-cfop IS INITIAL.

    CALL FUNCTION 'CONVERSION_EXIT_CFOBR_OUTPUT'
      EXPORTING
        input  = zynfe006-cfop
      IMPORTING
        output = v_cfop.

    CONCATENATE itab_zynft007-xblnr v_cfop
       INTO itab_zynft007-xblnr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-rlocneg IS INITIAL AND
     NOT zynfe005-bupla IS INITIAL.
    CONCATENATE itab_zynft007-xblnr zynfe005-bupla
       INTO itab_zynft007-xblnr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-rcodpar IS INITIAL AND
     NOT zynfe005-parid IS INITIAL.
    CONCATENATE itab_zynft007-xblnr zynfe005-parid
       INTO itab_zynft007-xblnr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-rtppar IS INITIAL AND
     NOT zynfe005-parvw IS INITIAL.
    CONCATENATE itab_zynft007-xblnr zynfe005-parvw
       INTO itab_zynft007-xblnr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-rnumnf IS INITIAL AND
     NOT zynfe005-docnum IS INITIAL.
    CONCATENATE itab_zynft007-xblnr zynfe005-docnum
       INTO itab_zynft007-xblnr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-rorigem IS INITIAL AND
     NOT wa_zynft002-blandori IS INITIAL.
    CONCATENATE itab_zynft007-xblnr wa_zynft002-blandori
       INTO itab_zynft007-xblnr SEPARATED BY space.
  ENDIF.

  IF NOT itab_zynft004-rdestino IS INITIAL AND
     NOT wa_zynft002-blanddes IS INITIAL.
    CONCATENATE itab_zynft007-xblnr wa_zynft002-blanddes
       INTO itab_zynft007-xblnr SEPARATED BY space.
  ENDIF.

* Apagando o espaço em branco se houver.
  IF itab_zynft007-xblnr+0(1) IS INITIAL.
    MOVE itab_zynft007-xblnr+1 TO itab_zynft007-xblnr.
  ENDIF.

ENDFORM.                    " cria_xblnr
*&---------------------------------------------------------------------*
*&      Form  calcula_valor_contabil
*&---------------------------------------------------------------------*
*       Calcula os valores contábeis para a F-02
*----------------------------------------------------------------------*
FORM calcula_valor_contabil.

  CASE itab_zynft004-tpvalor.

    WHEN 'A'. "Valor Total do Item (mercadoria)
      itab_zynft007-netwr = netwrt.
    WHEN 'B'. "IPI
      READ TABLE itab_zynft009 INTO wa_zynft009
                      WITH KEY itmnum = zynfe006-itmnum
                               taxgrp = 'IPI'.
      IF sy-subrc = 0.
        itab_zynft007-netwr = wa_zynft009-taxval.
      ENDIF.
    WHEN 'C'. "ICMS
      READ TABLE itab_zynft009 INTO wa_zynft009
                      WITH KEY itmnum = zynfe006-itmnum
                               taxgrp = 'ICMS'.
      IF sy-subrc = 0.
        itab_zynft007-netwr = wa_zynft009-taxval.
      ENDIF.
    WHEN 'D'. "ICMS Subst. Tributária
      READ TABLE itab_zynft009 INTO wa_zynft009
                      WITH KEY itmnum = zynfe006-itmnum
                               taxgrp = 'ICST'.
      IF sy-subrc = 0.
        itab_zynft007-netwr = wa_zynft009-taxval.
      ENDIF.
    WHEN 'E'. "ICMS Substituição tributária sobre frete
      READ TABLE itab_zynft009 INTO wa_zynft009
                      WITH KEY itmnum = zynfe006-itmnum
                               taxgrp = 'ICFS'.
      IF sy-subrc = 0.
        itab_zynft007-netwr = wa_zynft009-taxval.
      ENDIF.
    WHEN 'F'. "Complemento do ICMS
      READ TABLE itab_zynft009 INTO wa_zynft009
                      WITH KEY itmnum = zynfe006-itmnum
                               taxgrp = 'ICOP'.
      IF sy-subrc = 0.
        itab_zynft007-netwr = wa_zynft009-taxval.
      ENDIF.
    WHEN 'G'. "Frete
      itab_zynft007-netwr = zynfe006-netfre.
    WHEN 'H'. "Seguro
      itab_zynft007-netwr = zynfe006-netins.
    WHEN 'I'. "Outras Despesas Acessórias
      itab_zynft007-netwr = zynfe006-netoth.
    WHEN 'J'. "Crédito Presumido
      itab_zynft007-netwr = zynfe006-netdis.

  ENDCASE.

ENDFORM.                    " calcula_valor_contabil
*&---------------------------------------------------------------------*
*&      Form  docto_contabil
*&---------------------------------------------------------------------*
*       Move os doctos gerados para a tabela ZYNFT007
*----------------------------------------------------------------------*
FORM docto_contabil.
  DATA: wa_zynft007 LIKE zynft007.

  LOOP AT itab_zynft007.
    v_index = sy-tabix.
    READ TABLE itab_zynft007_aux2 INTO wa_zynft007
                  WITH KEY tpvalor = itab_zynft007-tpvalor
                           d_newko = itab_zynft007-d_newko
                           d_bupla = itab_zynft007-d_bupla
                           d_kostl = itab_zynft007-d_kostl
                           d_prctr = itab_zynft007-d_prctr
                           d_gsber = itab_zynft007-d_gsber
                           d_aufnr = itab_zynft007-d_aufnr
                           c_newko = itab_zynft007-c_newko
                           c_bupla = itab_zynft007-c_bupla
                           c_kostl = itab_zynft007-c_kostl
                           c_prctr = itab_zynft007-c_prctr
                           c_gsber = itab_zynft007-c_gsber
                           c_aufnr = itab_zynft007-c_aufnr
                           sgtxt   = itab_zynft007-sgtxt
                           zuonr   = itab_zynft007-zuonr
                           xblnr   = itab_zynft007-xblnr.
    IF sy-subrc = 0.
      MOVE wa_zynft007-belnr TO itab_zynft007-belnr.
      MODIFY itab_zynft007 INDEX v_index.
    ENDIF.

  ENDLOOP.

ENDFORM.                    " docto_contabil
*&---------------------------------------------------------------------*
*&      Form  chama_cont
*&---------------------------------------------------------------------*
*       Chama a linha de contabilização(detalhes) selecionados
*----------------------------------------------------------------------*
FORM chama_cont.

  GET CURSOR FIELD v_campo LINE v_index.
  v_index = v_index + tc_cont-top_line - 1.
  IF v_campo(8) = 'ZYNFE007'.
    READ TABLE itab_zynft007_aux2 INDEX v_index.
    IF sy-subrc = 0.
      MOVE-CORRESPONDING itab_zynft007_aux2 TO zynfe007.
      CALL SCREEN '0141'.
    ENDIF.
  ENDIF.

ENDFORM.                    " chama_cont
*&---------------------------------------------------------------------*
*&      Form  calcula_montante
*&---------------------------------------------------------------------*
*       Calcula os valores fiscais de cada item
*----------------------------------------------------------------------*
*      -->P_MONTANTE  text
*----------------------------------------------------------------------*
FORM calcula_montante USING   p_montante.
  DATA: v_index LIKE zynfe006-itmnum,
        v_rate  LIKE zynft003-rate  .

*  v_index = itab_zynft003-indice * 10.
*  v_index = v_index - 10.

  IF NOT itab_zynft003-fvltot    IS INITIAL.
    p_montante = zynfe006-netwr.
  ENDIF.
  IF NOT itab_zynft003-fipi      IS INITIAL.
    READ TABLE itab_zynft009 INTO wa_zynft009 WITH KEY
                             taxgrp = 'IPI'
                             itmnum = zynfe006-itmnum.
    IF sy-subrc = 0.
      p_montante = p_montante + wa_zynft009-taxval.
    ENDIF.
  ENDIF.
  IF NOT itab_zynft003-ficms     IS INITIAL.
    READ TABLE itab_zynft009 INTO wa_zynft009 WITH KEY
                             taxgrp = 'ICMS'
                             itmnum = zynfe006-itmnum.
    IF sy-subrc = 0.
      p_montante = p_montante + wa_zynft009-taxval.
    ENDIF.
  ENDIF.
  IF NOT itab_zynft003-ficmsf    IS INITIAL.
    READ TABLE itab_zynft009 INTO wa_zynft009 WITH KEY
                             taxgrp = 'ICST'
                             itmnum = zynfe006-itmnum.
    IF sy-subrc = 0.
      p_montante = p_montante + wa_zynft009-taxval.
    ENDIF.
  ENDIF.
  IF NOT itab_zynft003-ficmst    IS INITIAL.
    READ TABLE itab_zynft009 INTO wa_zynft009 WITH KEY
                             taxgrp = 'ICFS'
                             itmnum = zynfe006-itmnum.
    IF sy-subrc = 0.
      p_montante = p_montante + wa_zynft009-taxval.
    ENDIF.
  ENDIF.
  IF NOT itab_zynft003-ficmsa    IS INITIAL.
    READ TABLE itab_zynft009 INTO wa_zynft009 WITH KEY
                             taxgrp = 'ICOP'
                             itmnum = zynfe006-itmnum.
    IF sy-subrc = 0.
      p_montante = p_montante + wa_zynft009-taxval.
    ENDIF.
  ENDIF.
  IF NOT itab_zynft003-ffrete    IS INITIAL.
    p_montante = p_montante + zynfe006-netfre.
  ENDIF.
  IF NOT itab_zynft003-fseguro   IS INITIAL.
    p_montante = p_montante + zynfe006-netins.
  ENDIF.
  IF NOT itab_zynft003-fdespadic IS INITIAL.
    p_montante = p_montante + zynfe006-netoth.
  ENDIF.

**cálculo do imposto de ICMS com parceiro não contribuinte
**Se o parceiro não ter inscrição estadual, jogar a base para o montante
**base
*  if v_isento eq 'X'                and
*     wk_parnad-regio  ne v_bland    and
*     wk_parnad-land1  eq 'BR'       and
*     itab_zynft009-taxgrp(2) = 'IC' and "ICMS
*     ( itab_zynft003-trib = '2' or itab_zynft003-trib = '3' ).
*    itab_zynft009-base = p_montante.
*    clear: p_montante, itab_zynft003-faliq.
*  endif.

* Redução de base
  IF itab_zynft003-rate < 100 AND
     itab_zynft003-trib = '1'. "Montante Base
    v_rate = 100 - itab_zynft003-rate.
    itab_zynft009-excbas = p_montante.
    itab_zynft009-excbas = itab_zynft009-excbas * ( v_rate / 100 ).
  ENDIF.

* Aplicando o percentual sobre a soma da base
  p_montante = p_montante * ( itab_zynft003-rate / 100 ).

* Verifica se a aliquota virá da tabela ZYNFT003.
  IF NOT itab_zynft003-faliq IS INITIAL.
    IF NOT itab_zynft003-aliquota IS INITIAL.
      itab_zynft009-aliquota = itab_zynft003-aliquota.
      itab_zynft009-taxval = p_montante *
                             ( itab_zynft003-aliquota / 100 ).

    ELSE.
      IF itab_zynft009-taxgrp(2) = 'IP' AND "IPI
         itab_zynft003-trib = '1'. "Montante Base
        itab_zynft009-excbas = p_montante.
        CLEAR p_montante.
      ENDIF.
    ENDIF.

  ELSE.
    CLEAR: v_ipi, v_icms.
    IF zynfe005-direct = '1'. "Entrada
      IF v_isento = 'X'              AND
         wk_parnad-regio  NE v_bland AND
         wk_parnad-land1  EQ 'BR'.
        CALL FUNCTION 'ZYNF_VERIFICA_TAXA'
          EXPORTING
            v_data    = sy-datum
            v_matnr   = zynfe006-matnr
            v_steuc   = zynfe006-nbm
            v_origem  = wk_parnad-regio
            v_destino = wk_parnad-regio
          IMPORTING
            v_ipi     = v_ipi
            v_icms    = v_icms.
      ELSE.
        CALL FUNCTION 'ZYNF_VERIFICA_TAXA'
          EXPORTING
            v_data    = sy-datum
            v_matnr   = zynfe006-matnr
            v_steuc   = zynfe006-nbm
            v_origem  = wk_parnad-regio
            v_destino = v_bland
          IMPORTING
            v_ipi     = v_ipi
            v_icms    = v_icms.
      ENDIF.
    ELSE. "Saída
      IF v_isento = 'X'              AND
         wk_parnad-regio  NE v_bland AND
         wk_parnad-land1  EQ 'BR'.
        CALL FUNCTION 'ZYNF_VERIFICA_TAXA'
          EXPORTING
            v_data    = sy-datum
            v_matnr   = zynfe006-matnr
            v_steuc   = zynfe006-nbm
            v_origem  = v_bland
            v_destino = v_bland
          IMPORTING
            v_ipi     = v_ipi
            v_icms    = v_icms.
      ELSE.
        CALL FUNCTION 'ZYNF_VERIFICA_TAXA'
          EXPORTING
            v_data    = sy-datum
            v_matnr   = zynfe006-matnr
            v_steuc   = zynfe006-nbm
            v_origem  = v_bland
            v_destino = wk_parnad-regio
          IMPORTING
            v_ipi     = v_ipi
            v_icms    = v_icms.
      ENDIF.
    ENDIF.

    IF itab_zynft009-taxgrp(2) = 'IC'. "ICMS
      IF v_isento = 'X'              AND
         wk_parnad-regio  NE v_bland AND
         wk_parnad-land1  EQ 'BR'.
        itab_zynft009-aliquota = v_icms.
        itab_zynft009-taxval = itab_zynft009-base *
                               ( v_icms / 100 ).
      ELSE.
        itab_zynft009-aliquota = v_icms.
        itab_zynft009-taxval = p_montante *
                               ( v_icms / 100 ).
      ENDIF.
    ELSEIF itab_zynft009-taxgrp(2) = 'IP'. "IPI
      IF NOT v_ipi IS INITIAL.
        itab_zynft009-aliquota = v_ipi.
        itab_zynft009-taxval = p_montante *
                               ( v_ipi / 100 ).
      ELSE.
        IF itab_zynft003-trib = '1'. "Montante Base
          itab_zynft009-excbas = p_montante.
          CLEAR p_montante.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.                    " calcula_montante
*&---------------------------------------------------------------------*
*&      Form  pega_descricao_dominio
*&---------------------------------------------------------------------*
*       Baseado no campo, retorna o valor do texto fixo do domínio
*----------------------------------------------------------------------*
*      -->P_campo    'ZYCBT001-FFRCALC'   (pode ser estrutura)
*      -->P_valor    'L'
*      <--P_retorno  'Linear ao Ano sobre saldo devedor'
*----------------------------------------------------------------------*
FORM pega_descricao_dominio USING    value(p_campo)
                                     value(p_valor)
                            CHANGING p_retorno.

  DATA: wa_dd03l LIKE dd03l.

  DATA: BEGIN OF itab_dd07t OCCURS 5.
          INCLUDE STRUCTURE dd07t.
  DATA: END OF itab_dd07t.

  DATA: tablename LIKE dd03l-tabname,
        fieldname LIKE dd03l-fieldname.

* Divide o parâmetro com o nome da tabela e campo em seus componentes
  SPLIT p_campo AT '-' INTO tablename fieldname.

  IF sy-subrc NE 0.
    EXIT.
  ENDIF.

* Seleciona da tabela de Tabelas, para retornar o domínio
*   domínio = dd03l-domname
  SELECT SINGLE *
         FROM dd03l
         INTO wa_dd03l
         WHERE tabname   = tablename AND
               fieldname = fieldname.

  IF sy-subrc EQ 0.


    SELECT * FROM dd07t
             INTO TABLE itab_dd07t
             WHERE domname    = wa_dd03l-domname AND
                   ddlanguage = sy-langu(1).

    IF sy-subrc = 0.

* Tenta achar valor exato

      READ TABLE itab_dd07t WITH KEY domvalue_l = p_valor.

      IF sy-subrc EQ 0.

* Achou valor fixo, retorna texto

        p_retorno = itab_dd07t-ddtext.

      ELSE.

* Não achou valor fixo, faz pesquisa nas faixas de valores.

        LOOP AT itab_dd07t WHERE domvalue_l IS INITIAL.

          IF p_valor GE itab_dd07t-domval_ld AND
             p_valor LE itab_dd07t-domval_hd.

            p_retorno = itab_dd07t-ddtext.
            EXIT.

          ENDIF.

        ENDLOOP.

      ENDIF.

    ENDIF.

  ENDIF.

ENDFORM.                    " pega_descricao_dominio
*&---------------------------------------------------------------------*
*&      Form  cancela_nota_fiscal
*&---------------------------------------------------------------------*
*       Faz o cancelamento da NF e o estorno dos documentos contábeis
*----------------------------------------------------------------------*
FORM cancela_nota_fiscal.

  CLEAR: v_comandada, v_nrseqaux, zynft001, zynft005.

* Nota fiscal de transferência
* Tratamento para deletar a Entrada comandada, caso o usuário queira
* cancelar a NF de transferência, mas para isso a data de entrada/saída
* da Entrada Comandada deve estar em branco
  SELECT SINGLE * FROM zynft001
     WHERE cno = zynfe005-cno.

  IF zynft001-transfnf EQ 'X'. "Verifica se a NF de saída é uma Entr.Com
    IF NOT zynfe005-nrseq_comand IS INITIAL.
      SELECT SINGLE * FROM zynft005
        WHERE nrseq = zynfe005-nrseq_comand.
      IF  sy-subrc = 0 AND
          NOT zynft005-pstdat IS INITIAL AND
              zynft005-status NE 'C'.
        MESSAGE i087 WITH zynfe005-nrseq_comand.
        EXIT.
      ELSE.
        IF zynft005-status = 'I'.
          v_comandada = 'D'. "A NF comandada será excluída
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.
** Nota Fiscal Comandada
** Tratamento para excluir a Entrada comandada, neste caso o programa
** apaga o nrseq_comand.
*  select single * from zynft005
*     where nrseq_comand = zynfe005-nrseq.
*
*  if sy-subrc eq 0.
*    v_comandada = 'X'.
*    v_nrseqaux = zynft005-nrseq.
*  endif.

  CALL FUNCTION 'POPUP_TO_CONFIRM_STEP'
    EXPORTING
      defaultoption  = 'Y'
      textline1      = text-060
      titel          = text-008
      start_column   = 25
      start_row      = 6
      cancel_display = ' '
    IMPORTING
      answer         = v_answer.
  IF v_answer = 'J'.
* Primeiramente cancelar a nota fiscal
    SELECT SINGLE * FROM j_1bnfdoc WHERE docnum = zynfe005-docnum.
    IF j_1bnfdoc-candat IS INITIAL.
      PERFORM elimina_nf.
    ELSE. "Nota já cancelada
      v_est_nota = 'S'.
    ENDIF.
    IF v_est_nota = 'N'.
      MESSAGE s054.
      EXIT.
    ENDIF.
    PERFORM estorna_f02.
** Elimina a Entrada comandada e apaga o nrseq_comand da Nf de
** Transferência
*    if v_comandada eq 'X'.
*      update zynft005 set nrseq_comand  = space
*                 where nrseq        = v_nrseqaux
*                   and nrseq_comand = zynfe005-nrseq.
* Tratamento para deletar a Entrada comandada, caso o usuário queira
* cancelar a NF de transferência, mas para isso a data de entrada/saída
* deve estar em branco
    IF v_comandada EQ 'D'.
      MESSAGE i091 WITH zynfe005-nrseq_comand.
      DELETE FROM zynft005 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq_comand.
      DELETE FROM zynft006 CLIENT SPECIFIED
                       WHERE mandt  = sy-mandt
                         AND nrseq  = zynfe005-nrseq_comand.
      COMMIT WORK AND WAIT.
    ENDIF.
    PERFORM salvar_dados.
  ENDIF.

ENDFORM.                    " cancela_nota_fiscal
*&---------------------------------------------------------------------*
*&      Form  atualiza_nrseq
*&---------------------------------------------------------------------*
*       Atualiza as tabelas internas com o novo sequencial
*----------------------------------------------------------------------*
FORM atualiza_nrseq.

  LOOP AT itab_zynft006.
    MOVE zynfe005-nrseq TO itab_zynft006-nrseq.
    MODIFY itab_zynft006 INDEX sy-tabix.
  ENDLOOP.

  LOOP AT itab_zynft006_aux.
    MOVE zynfe005-nrseq TO itab_zynft006_aux-nrseq.
    MODIFY itab_zynft006_aux INDEX sy-tabix.
  ENDLOOP.

  LOOP AT itab_zynft007.
    MOVE zynfe005-nrseq TO itab_zynft007-nrseq.
    CLEAR itab_zynft007-belnr.
    MODIFY itab_zynft007 INDEX sy-tabix.
  ENDLOOP.

  LOOP AT itab_zynft007_aux.
    MOVE zynfe005-nrseq TO itab_zynft007_aux-nrseq.
    CLEAR itab_zynft007_aux-belnr.
    MODIFY itab_zynft007_aux INDEX sy-tabix.
  ENDLOOP.

  LOOP AT itab_zynft007_aux2.
    MOVE zynfe005-nrseq TO itab_zynft007_aux2-nrseq.
    CLEAR itab_zynft007_aux2-belnr.
    MODIFY itab_zynft007_aux2 INDEX sy-tabix.
  ENDLOOP.

  LOOP AT itab_zynft009.
    MOVE zynfe005-nrseq TO itab_zynft009-nrseq.
    MODIFY itab_zynft009 INDEX sy-tabix.
  ENDLOOP.

  LOOP AT itab_zynft009a.
    MOVE zynfe005-nrseq TO itab_zynft009a-nrseq.
    MODIFY itab_zynft009a INDEX sy-tabix.
  ENDLOOP.

  LOOP AT itab_zynft009_aux.
    MOVE zynfe005-nrseq TO itab_zynft009_aux-nrseq.
    MODIFY itab_zynft009_aux INDEX sy-tabix.
  ENDLOOP.

  LOOP AT wk_ref.
    MOVE zynfe005-nrseq TO wk_ref-nrseq.
    MODIFY wk_ref INDEX sy-tabix.
  ENDLOOP.

  LOOP AT wk_ref_aux.
    MOVE zynfe005-nrseq TO wk_ref_aux-nrseq.
    MODIFY wk_ref_aux INDEX sy-tabix.
  ENDLOOP.

ENDFORM.                    " atualiza_nrseq
*&---------------------------------------------------------------------*
*&      Form  verifica_incompletos
*&---------------------------------------------------------------------*
*  verifica se há documentos não contabilizados ou se há documentos não
*  estornados
*----------------------------------------------------------------------*
FORM verifica_incompletos.

  IF NOT zynfe005-docnum IS INITIAL.
* verifica se o registro está parcialmente contabilizado
*    read table itab_zynft007_aux2 with key belnr = space.
    LOOP AT itab_zynft007_aux2 WHERE belnr = space AND
                                     netwr NE 0.
    ENDLOOP.

    IF sy-subrc = 0.
      MESSAGE i055.
    ENDIF.

    CLEAR itab_bkpf.
    REFRESH itab_bkpf.
* verifica se o registro está parcialmente estornado
    SELECT SINGLE * FROM j_1bnfdoc WHERE docnum = zynfe005-docnum.
    IF NOT j_1bnfdoc-candat IS INITIAL. "nota cancelada
      IF NOT itab_zynft007_aux2[] IS INITIAL.
        LOOP AT itab_zynft007_aux2.
          IF NOT itab_zynft007_aux2-belnr IS INITIAL AND
             NOT itab_zynft007_aux2-netwr IS INITIAL .
            SELECT SINGLE * FROM bkpf
                 WHERE bukrs = zynfe005-bukrs
                   AND belnr = itab_zynft007_aux2-belnr
                   AND gjahr = zynfe005-pstdat(4).
            IF sy-subrc = 0.
              MOVE bkpf TO itab_bkpf.
              APPEND itab_bkpf.
              CLEAR bkpf.
            ENDIF.
          ENDIF.
        ENDLOOP.
      ENDIF.
      READ TABLE itab_bkpf WITH KEY stgrd = space.
      IF sy-subrc = 0.
        MESSAGE i056.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.                    " verifica_incompletos
*&---------------------------------------------------------------------*
*&      Form  POPUP_MESSAGE_SAIDA
*&---------------------------------------------------------------------*
*       Mensagem de confirmação da saída da nota
*----------------------------------------------------------------------*
FORM popup_message_saida USING value(p_textline1)
                         value(p_title).

  CALL FUNCTION 'POPUP_TO_CONFIRM_STEP'
    EXPORTING
      defaultoption  = 'N'
      textline1      = p_textline1
      titel          = p_title
      cancel_display = ' '
    IMPORTING
      answer         = v_answer
    EXCEPTIONS
      OTHERS         = 1.
ENDFORM.                    " POPUP_MESSAGE_SAIDA
*&---------------------------------------------------------------------*
*&      Form  apagar_invalidos
*&---------------------------------------------------------------------*
FORM apagar_invalidos.

  DELETE itab_zynft002_aux WHERE bupla NE zynfe005-bupla
                             AND bupla NE space.

  DELETE itab_zynft002_aux WHERE parvw NE zynfe005-parvw
                             AND parvw NE space.

  DELETE itab_zynft002_aux WHERE parid NE zynfe005-parid
                             AND parid NE space.

  DELETE itab_zynft002_aux WHERE matnr NE zynfe006-matnr
                             AND matnr NE space.

  DELETE itab_zynft002_aux WHERE mtart NE zynfe006-mtart
                             AND mtart NE space.

  DELETE itab_zynft002_aux WHERE matkl NE zynfe006-matkl
                             AND matkl NE space.

  DELETE itab_zynft002_aux WHERE nbm NE zynfe006-nbm
                             AND nbm NE space.

  DELETE itab_zynft002_aux WHERE matorg NE zynfe006-matorg
                             AND matorg NE space.

  DELETE itab_zynft002_aux WHERE ort01 NE v_city1
                             AND ort01 NE space.

  DELETE itab_zynft002_aux WHERE ort02 NE wk_parnad-ort01
                             AND ort02 NE space.

  DELETE itab_zynft002_aux WHERE blandori NE v_blandori
                             AND blandori NE space.

  DELETE itab_zynft002_aux WHERE blanddes NE v_blanddes
                             AND blanddes NE space.

  DELETE itab_zynft002_aux WHERE contrib NE v_isento.

ENDFORM.                    " apagar_invalidos
*&---------------------------------------------------------------------*
*&      Form  check_branch
*&---------------------------------------------------------------------*
FORM check_branch.
  DATA: v_parid LIKE zynfe005-parid.

  IF NOT zynfe005-mainbukrs  IS INITIAL AND
     NOT zynfe005-mainbranch IS INITIAL.

    IF zynfe005-mainbranch = zynfe005-bupla.
      MESSAGE e064.
    ENDIF.

    CLEAR: j_1bad, wk_parnad.

    SELECT SINGLE * FROM  j_1bad
           WHERE  parvw       = zynfe005-parvw.

    MOVE: zynfe005-mainbukrs  TO v_parid  ,
          zynfe005-mainbranch TO v_parid+4.
    MOVE: v_parid TO zynfe005-parid.

* determine partner data using the partnerid and type -----------------*
    IF j_1bad-partyp = 'B'.

      CALL FUNCTION 'J_1B_NF_PARTNER_READ'
        EXPORTING
          partner_type           = j_1bad-partyp
          partner_id             = v_parid
        IMPORTING
          parnad                 = wk_parnad
        EXCEPTIONS
          partner_not_found      = 1
          partner_type_not_found = 2
          OTHERS                 = 3.
      IF sy-subrc <> 0.
        SET CURSOR FIELD 'ZYNFE005-MAINBUKRS'.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ELSE.
* Joga a descrição do parceiro
        WRITE wk_parnad-cgc USING
                 EDIT MASK '__.___.___/____-__' TO v_paridtxt3.
        IF v_paridtxt3 = '00.000.000/0000-00'.
          CLEAR v_paridtxt3.
        ENDIF.

* A formatação do campo Inscrição Estadual só é feita se numérico
        IF wk_parnad-stains(1) = '0' OR
           wk_parnad-stains(1) = '1' OR
           wk_parnad-stains(1) = '2' OR
           wk_parnad-stains(1) = '3' OR
           wk_parnad-stains(1) = '4' OR
           wk_parnad-stains(1) = '5' OR
           wk_parnad-stains(1) = '6' OR
           wk_parnad-stains(1) = '7' OR
           wk_parnad-stains(1) = '8' OR
           wk_parnad-stains(1) = '9'.
          WRITE wk_parnad-stains USING
                   EDIT MASK '___.___.___' TO v_paridtxt4.
        ELSE.
          MOVE wk_parnad-stains TO v_paridtxt4.
        ENDIF.

        MOVE: wk_parnad-name1  TO v_bupla    ,
              wk_parnad-stras  TO v_paridtxt2.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.                    " check_branch
*&---------------------------------------------------------------------*
*&      Form  define_partner_subcreen
*&---------------------------------------------------------------------*
FORM define_partner_subcreen.

  IF ( v_parvw NE zynfe005-parvw ) OR
     ( v_parvw IS INITIAL AND zynfe005-parvw IS INITIAL ).
    IF NOT v_parvw IS INITIAL.

      IF zynfe005-refdocnum IS INITIAL.
        CLEAR: zynfe005-parid.
      ENDIF.

      CLEAR: v_paridtxt2   ,
             v_paridtxt3   ,
             v_paridtxt4   .
    ENDIF.
    IF zynfe005-parvw = 'BR'. "filial
      CLEAR v_paridtxt.
      part_sub_scr = '0112'.
    ELSE.
      CLEAR: v_bupla            ,
             zynfe005-mainbukrs ,
             zynfe005-mainbranch.
      part_sub_scr = '0111'.
    ENDIF.
  ENDIF.

ENDFORM.                    " define_partner_subcreen
*&---------------------------------------------------------------------*
*&      Form  atualiza_item
*&---------------------------------------------------------------------*
FORM atualiza_item.

  flag_change_item = 'X'.

  READ TABLE itab_zynft002 INTO wa_zynft002 WITH KEY
                               itmnum = zynfe006-itmnum.

  MOVE-CORRESPONDING zynfe006 TO itab_zynft006.

  v_index = zynfe006-itmnum+3(2).

  MODIFY itab_zynft006 INDEX v_index.
  IF sy-subrc NE 0.
    APPEND itab_zynft006.
  ENDIF.

* >>> Modificação ID 34 - 26/09/2011 - Início
  wa_zynft014-mandt  = sy-mandt.
  wa_zynft014-nrseq  = zynfe005-nrseq.
  wa_zynft014-itmnum = zynfe006-itmnum.
  wa_zynft014-docnum = zynfe005-docnum.

* Data e Hora DI
  perform format_date   using v_dt_di
                     changing wa_zynft014-dt_di.
  concatenate wa_zynft014-dt_di
              v_hr_di
         into wa_zynft014-dt_di
         separated by space.

* Data e Hora Desembaraço
  perform format_date   using v_dt_DESEMBARACO
                     changing wa_zynft014-dt_DESEMBARACO.
  concatenate wa_zynft014-dt_DESEMBARACO
              v_hr_DESEMBARACO
         into wa_zynft014-dt_DESEMBARACO
         separated by space.

  MOVE-CORRESPONDING wa_zynft014 TO itab_zynft014.

  MODIFY itab_zynft014 INDEX v_index.
  IF sy-subrc NE 0.
    APPEND itab_zynft014.
  ENDIF.
* <<< Modificação ID 34 - 26/09/2011 - Fim

  IF zynfe005-status NE 'E' AND zynfe005-status NE 'G' AND
     zynfe005-status NE 'C'.
    PERFORM itens_impostos.
* Não atualizar os itens contábeis se já estiver contabilizado
    READ TABLE itab_zynft007 INTO wa_zynft007 WITH KEY
                      itmnum = zynfe006-itmnum.
    IF sy-subrc NE 0 OR
       ( sy-subrc = 0 AND itab_zynft007-belnr IS INITIAL ).
      PERFORM itens_contabeis.
    ENDIF.
  ELSE.
    CLEAR itab_zynft009_aux.
    REFRESH itab_zynft009_aux.
    LOOP AT itab_zynft009.
      IF itab_zynft009-itmnum = zynfe006-itmnum.
        MOVE-CORRESPONDING itab_zynft009 TO itab_zynft009_aux.
        APPEND itab_zynft009_aux.
      ENDIF.
    ENDLOOP.
  ENDIF.
  PERFORM itens_mensagens.

ENDFORM.                    " atualiza_item
*&---------------------------------------------------------------------*
*&      Form  imprimir_novamente
*&---------------------------------------------------------------------*
*       Faz a reimpressão da nota fiscal
*----------------------------------------------------------------------*
FORM imprimir_novamente.

* Limpando as tabelas do BI
  PERFORM limpa_bi.

* Dados para o BI
  itab_zynfe033-tcode  = 'J1B3N'        .
  itab_zynfe033-tabela = 'ZYNFT005'     .
  itab_zynfe033-cpochv = zynfe005-docnum.
  itab_zynfe033-belnr  = zynfe005-docnum.

  APPEND itab_zynfe033.

  CALL FUNCTION 'ZYNF_TRANSACAO_J1B3NA'
    EXPORTING
      v_modo          = v_modo_bi
    TABLES
      t_dados         = itab_zynfe033
      t_campo         = itab_zynft034
      t_zynft032      = itab_zynft032
    EXCEPTIONS
      campo_em_branco = 1
      OTHERS          = 2.

  IF sy-subrc = 0.
    READ TABLE itab_zynft032 WITH KEY tcode  = 'J1B3N'
                                      tabela = 'ZYNFT005'
                                      cpochv = zynfe005-docnum
                                      tpmsg  = 'E'.

    IF sy-subrc NE 0. "Sucesso no BI
      PERFORM gera_j1b3n.
    ELSE.
      CALL FUNCTION 'MESSAGES_INITIALIZE'.
      LOOP AT itab_zynft032.
        CALL FUNCTION 'MESSAGE_STORE'
          EXPORTING
            arbgb = 'ZYNFM'
            msgty = itab_zynft032-tpmsg
            msgv1 = itab_zynft032-msg+0(50)
            msgv2 = itab_zynft032-msg+50(50)
            txtnr = '092'
            zeile = itab_zynft032-nrmsg.
      ENDLOOP.
      CALL FUNCTION 'MESSAGES_SHOW'
        EXPORTING
          object          = 'SAPMZYNF005'
          i_amodal_window = ' '.
      CALL FUNCTION 'MESSAGES_INITIALIZE'.

    ENDIF.
  ELSE.
    LOOP AT itab_zynft034.
      MESSAGE i034 WITH itab_zynft034-descricao.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " imprimir_novamente
*&---------------------------------------------------------------------*
*&      Form  busca_refdocnum
*&---------------------------------------------------------------------*
*       Seleciona os dados da NF ref
*----------------------------------------------------------------------*
FORM busca_refdocnum.

  IF zynfe005-refdocnum NE v_refdocnum.
    CLEAR: itab_zynft002 ,
           itab_zynft006 ,
           itab_zynft009 ,
           itab_zynft009a,
           wk_ftx        ,
           wk_ftx1       ,
           itab_j_1bnflin,
           itab_j_1bnfstx,
           v_max         .

    REFRESH: itab_zynft002 ,
             itab_zynft006 ,
             itab_zynft009 ,
             itab_zynft009a,
*             wk_ftx        ,
*             wk_ftx1       ,
             itab_j_1bnflin,
             itab_j_1bnfstx.
  ENDIF.

* Busca Nº da nota e série
  SELECT SINGLE * FROM j_1bnfdoc
                  WHERE docnum = zynfe005-refdocnum.

  MOVE: j_1bnfdoc-nfnum    TO zynfe005-refnfnum  ,
        j_1bnfdoc-series   TO zynfe005-refseries ,
        j_1bnfdoc-parvw    TO zynfe005-parvw     ,
        j_1bnfdoc-parid    TO zynfe005-parid     ,
        j_1bnfdoc-docdat   TO v_docdat           ,
        j_1bnfdoc-brgew    TO v_brgew            ,
        j_1bnfdoc-ntgew    TO v_ntgew            .

  IF j_1bnfdoc-parvw = 'BR'. "Filial
    MOVE: j_1bnfdoc-parid(4) TO zynfe005-mainbukrs ,
          j_1bnfdoc-parid+4  TO zynfe005-mainbranch.
  ENDIF.

* move os dados dos parceiros
  IF zynfe005-parvw = 'BR'. "Filial
    PERFORM check_branch.
  ELSE.
    PERFORM: check_parceiro.
  ENDIF.

* Buscando os itens da NF referência
  SELECT * FROM j_1bnflin
            INTO CORRESPONDING FIELDS OF TABLE itab_zynfe010
            WHERE docnum = zynfe005-refdocnum.

* Guardando a quantidade total
  LOOP AT itab_zynfe010.
    MOVE itab_zynfe010-menge TO itab_zynfe010-mengetot.
    MODIFY itab_zynfe010 INDEX sy-tabix.
  ENDLOOP.

* Buscando itens da NF
  SELECT * FROM j_1bnflin
            INTO TABLE itab_j_1bnflin
            WHERE docnum = zynfe005-refdocnum.

* Buscando itens fiscais da NF
  SELECT * FROM j_1bnfstx
            INTO TABLE itab_j_1bnfstx
            WHERE docnum = zynfe005-refdocnum.

  PERFORM busca_valor_nf.

ENDFORM.                    " busca_refdocnum
*&---------------------------------------------------------------------*
*&      Form  cria_itens
*&---------------------------------------------------------------------*
*       Cria os itens e impostos da NF referenciada
*----------------------------------------------------------------------*
FORM cria_itens.
  DATA: v_msg LIKE zynft001-msg,
        v_linha TYPE i         ,
        v_docdatfor(10)        .

  CLEAR: itab_zynft002     ,
         itab_zynft006     ,
         itab_zynft007_aux2,
         itab_zynft009     ,
         itab_zynft009a    ,
         wk_ftx            ,
         wk_ftx1           ,
         v_exit            ,
* >>> Modificação ID 34 - 26/09/2011 - Início
         itab_zynft014,
         wa_zynft014,
         v_dt_di,
         v_hr_di,
         v_dt_desembaraco,
         v_hr_desembaraco.
* <<< Modificação ID 34 - 26/09/2011 - Fim
  REFRESH: itab_zynft002     ,
           itab_zynft006     ,
           itab_zynft007_aux2,
           itab_zynft009     ,
           itab_zynft009a    ,
*           wk_ftx            ,
*           wk_ftx1           .
* >>> Modificação ID 34 - 26/09/2011 - Início
           itab_zynft014.
* <<< Modificação ID 34 - 26/09/2011 - Fim

  CLEAR v_linha.
  DESCRIBE TABLE itab_zynfe010 LINES v_linha.

  CLEAR v_max.
  LOOP AT itab_zynfe010 WHERE mark EQ 'X'.
    IF itab_zynfe010-menge > itab_zynfe010-mengetot.
      MESSAGE i074 WITH itab_zynfe010-itmnum.
      v_exit = 'X'.
      CONTINUE.
    ENDIF.
    v_max = v_max + 10.
    MOVE:  zynfe005-nrseq       TO itab_zynft006-nrseq ,
           v_max                TO itab_zynft006-itmnum,
           itab_zynfe010-maktx  TO itab_zynft006-maktx ,
           itab_zynfe010-matkl  TO itab_zynft006-matkl ,
           itab_zynfe010-menge  TO itab_zynft006-menge ,
           itab_zynfe010-meins  TO itab_zynft006-meins ,
           itab_zynfe010-matorg TO itab_zynft006-matorg,
           itab_zynfe010-nbm    TO itab_zynft006-nbm   ,
           itab_zynfe010-netfre TO itab_zynft006-netfre,
           itab_zynfe010-netins TO itab_zynft006-netins,
           itab_zynfe010-netoth TO itab_zynft006-netoth,
           itab_zynfe010-netdis TO itab_zynft006-netdis,
           itab_zynfe010-netpr  TO itab_zynft006-netpr ,
           zynfe005-refdocnum   TO itab_zynft006-docref,
           itab_zynfe010-itmnum TO itab_zynft006-itmref.

* Chamado 189021 - Vivian - 22.03.05...................................
    READ TABLE itab_j_1bnflin
         WITH KEY docnum = itab_zynft006-docref
                  itmnum = itab_zynft006-itmref.
    IF sy-subrc EQ 0.
      IF itab_j_1bnflin-incltx IS INITIAL.
        LOOP AT itab_j_1bnfstx WHERE taxtyp CS 'ICM' AND
                                     docnum = itab_zynft006-docref AND
                                     itmnum = itab_zynft006-itmref.
          itab_zynfe010-netpr =
            itab_zynfe010-netpr + ( itab_j_1bnfstx-taxval /
                                    itab_zynft006-menge ).
        ENDLOOP.
        MOVE itab_zynfe010-netpr TO itab_zynft006-netpr.
      ENDIF.
    ENDIF.
*......................................................................


* Passar o código do material apenas se existir centro.
    IF NOT itab_zynfe010-werks IS INITIAL.
      MOVE   itab_zynfe010-matnr  TO itab_zynft006-matnr.
    ENDIF.

* Passar o centro apenas se existir o material.
    IF NOT itab_zynfe010-matnr IS INITIAL.
      MOVE itab_zynfe010-werks  TO itab_zynft006-werks.
    ENDIF.

    itab_zynft006-netwr = itab_zynfe010-netpr *
                          itab_zynfe010-menge.

* Peso bruto e peso liquido.
    itab_zynft006-brgew = ( itab_zynfe010-menge *
              ( v_brgew / v_linha ) ) / itab_zynfe010-mengetot.

    itab_zynft006-ntgew = ( itab_zynfe010-menge *
               ( v_ntgew / v_linha ) ) / itab_zynfe010-mengetot.

    MOVE-CORRESPONDING itab_zynft006 TO zynfe006.
    PERFORM propor_valores.
    netwrt = zynfe006-netwr + zynfe006-netdis +
             zynfe006-netfre + zynfe006-netins +
             zynfe006-netoth.
    PERFORM atualiza_item.
    MOVE-CORRESPONDING zynfe006 TO itab_zynft006.
*    append itab_zynft006.
    CLEAR  itab_zynft006.
  ENDLOOP.

  IF v_exit = 'X'.
    EXIT.
  ENDIF.

* Formatando a data
  CONCATENATE v_docdat+6(2) '/' v_docdat+4(2) '/' v_docdat+0(4)
                        INTO v_docdatfor.

  CONCATENATE wa_zynft001-msg zynfe005-refnfnum zynfe005-refseries
              v_docdatfor INTO v_msg SEPARATED BY space.

* Buscando a mensagem na tabela ZYNFT001
  CLEAR v_seqnum.

  DESCRIBE TABLE wk_ftx1 LINES v_seqnum.

  v_seqnum = v_seqnum + 1.

  MOVE: 'v_seqnum'            TO wk_ftx-seqnum ,
        '01'                  TO wk_ftx-linnum ,
         v_msg                TO wk_ftx-message,
         wk_ftx               TO wk_ftx1       .
  APPEND: wk_ftx,
          wk_ftx1.

  CLEAR ok_code.
  SET SCREEN 0.
  LEAVE SCREEN.

ENDFORM.                    " cria_itens
*&---------------------------------------------------------------------*
*&      Form  move_cfop
*&---------------------------------------------------------------------*
*       Move o CFOP da tabela ZYNFT001 de acordo com os estados
*----------------------------------------------------------------------*
*      -->P_CFOP  Código de retorno
*----------------------------------------------------------------------*
FORM move_cfop USING p_cfop.


  IF v_bland EQ wk_parnad-regio.
    p_cfop = wa_zynft001-cfopest.
  ELSE.
    IF v_land1 EQ 'BR' AND wk_parnad-land1 EQ 'BR'.
      p_cfop = wa_zynft001-cfopesd.
    ELSE.
      p_cfop = wa_zynft001-cfoppad.
    ENDIF.
  ENDIF.


ENDFORM.                    " move_cfop
*&---------------------------------------------------------------------*
*&      Form  BUSCA_CTGREG
*&---------------------------------------------------------------------*
*       Busca a categoria do registro
*----------------------------------------------------------------------*
FORM busca_ctgreg.
  DATA: v_dstcat LIKE j_1bao-dstcat.

* Verifica os estados e paises do emissor e remetente
  IF v_bland EQ wk_parnad-regio.
    v_dstcat = 0.
  ELSE.
    IF v_land1 EQ 'BR' AND wk_parnad-land1 EQ 'BR'.
      v_dstcat = 1.
    ELSE.
      v_dstcat = 2.
    ENDIF.
  ENDIF.

  SELECT SINGLE itmtyp FROM zynft001 INTO itab_zynfe035-itmtyp
                  WHERE cno = zynfe005-cno
                    AND dtvgini  <= zynfe005-pstdat
                    AND dtvgfin  >= zynfe005-pstdat.

  IF sy-subrc NE 0.
    MESSAGE i058 WITH itab_zynft006-cfop.
    v_exit = 'X'.
  ENDIF.

ENDFORM.                    " BUSCA_CTGREG
*&---------------------------------------------------------------------*
*&      Form  verifica_nfnum
*&---------------------------------------------------------------------*
*       Verifica se já existe uma NF com o mesmo número
*----------------------------------------------------------------------*
FORM verifica_nfnum.

  CASE zynfe005-direct.
    WHEN '1'. "Entrada
      SELECT SINGLE * FROM zynft005 WHERE nfnum  = zynfe005-nfnum
                                      AND series = zynfe005-series
                                      AND parid  = zynfe005-parid
                                      AND cno    = zynfe005-cno.

      IF sy-subrc = 0                                AND
         zynft005-docdat+4(2) = zynfe005-docdat+4(2) AND "Mesmo Mês
         zynft005-docdat+0(4) = zynfe005-docdat+0(4) AND " e ano
         zynfe005-nrseq       NE zynft005-nrseq      AND
         zynft005-status      NE 'I'                 AND
         zynft005-status      NE 'C'.
        MESSAGE s075 WITH zynft005-nrseq.
        CLEAR ok_code.
      ENDIF.

    WHEN '2'. "Saída
      SELECT SINGLE * FROM zynft005 WHERE nfnum  = zynfe005-nfnum
                                      AND series = zynfe005-series
                                      AND bupla  = zynfe005-bupla
                                      AND cno    = zynfe005-cno.

      IF sy-subrc = 0                                AND
         zynft005-docdat+4(2) = zynfe005-docdat+4(2) AND "Mesmo Mês
         zynft005-docdat+0(4) = zynfe005-docdat+0(4) AND " e ano
         zynfe005-nrseq       NE zynft005-nrseq      AND
         zynft005-status      NE 'I'                 AND
         zynft005-status      NE 'C'.
        MESSAGE s075 WITH zynft005-nrseq.
        CLEAR ok_code.
      ENDIF.
  ENDCASE.

ENDFORM.                    " verifica_nfnum
*&---------------------------------------------------------------------*
*&      Form  calcula_pauta
*&---------------------------------------------------------------------*
*       Calcula o valor do IPI pauta
*----------------------------------------------------------------------*
FORM calcula_pauta.
*  DATA: v_matkl LIKE zynft002-matkl.
*
*  v_matkl = zynfe006-matkl.
*
*  CALL CUSTOMER-FUNCTION '001'
*    EXPORTING
*      v_cno   = zynfe005-cno
*      v_nbm   = zynfe006-nbm
*    IMPORTING
*      v_matkl = v_matkl.

*Alteração - Inicio - Evandro Gouveia - 19/06/2008
*  SELECT SINGLE * FROM j_1btxip3
*                 WHERE value = v_matkl.

  SELECT SINGLE * FROM j_1btxip3
                 WHERE value = zynfe006-matnr.
  IF sy-subrc <> 0.
    SELECT SINGLE * FROM j_1btxip3
                   WHERE value = zynfe006-matkl.
  ENDIF.
*Alteração - Fim - Evandro Gouveia - 19/06/2008

  IF sy-subrc = 0.
* Calculando o valor do imposto
    itab_zynft009-taxval = zynfe006-menge * ( j_1btxip3-amount /
                                              j_1btxip3-factor ).
*Alteração - Inicio - Evandro Gouveia - 19/06/2008
    itab_zynft009-aliquota = j_1btxip3-amount.
*Alteração - Fim - Evandro Gouveia - 19/06/2008
  ELSE.
    MESSAGE s093.
*    MESSAGE s076 WITH v_matkl.
  ENDIF.

ENDFORM.                    " calcula_pauta
*&---------------------------------------------------------------------*
*&      Form  atualiza_txt_contabeis
*&---------------------------------------------------------------------*
*   Preenche histórico, atribuição e referência quando a nf for gerada
*----------------------------------------------------------------------*
FORM atualiza_txt_contabeis.

  LOOP AT itab_zynft007.
    v_tabix = sy-tabix.
    LOOP AT itab_zynft004 WHERE tpvalor = itab_zynft007-tpvalor
                            AND itmnum  = itab_zynft007-itmnum.

      IF NOT itab_zynft004-fnumnf IS INITIAL AND
         NOT zynfe005-docnum IS INITIAL.
        CONCATENATE itab_zynft007-sgtxt zynfe005-docnum
           INTO itab_zynft007-sgtxt SEPARATED BY space.
      ENDIF.

      IF NOT itab_zynft004-rnumnf IS INITIAL AND
         NOT zynfe005-docnum IS INITIAL.
        CONCATENATE itab_zynft007-xblnr zynfe005-docnum
           INTO itab_zynft007-xblnr SEPARATED BY space.
      ENDIF.

      IF NOT itab_zynft004-anumnf IS INITIAL AND
         NOT zynfe005-docnum IS INITIAL.
        CONCATENATE itab_zynft007-zuonr zynfe005-docnum
           INTO itab_zynft007-zuonr SEPARATED BY space.
      ENDIF.

    ENDLOOP.
    MODIFY itab_zynft007 INDEX v_tabix.
  ENDLOOP.

* Totalização
  CLEAR   itab_zynft007_aux2.
  REFRESH itab_zynft007_aux2.
  LOOP AT itab_zynft007.
    CLEAR itab_zynft007-itmnum.
    MOVE-CORRESPONDING itab_zynft007 TO itab_zynft007_aux2.
    CLEAR itab_zynft007_aux2-nrfiscal.
    COLLECT itab_zynft007_aux2.
  ENDLOOP.
  CLEAR itab_zynft007.

ENDFORM.                    " atualiza_txt_contabeis
*&---------------------------------------------------------------------*
*&      Form  busca_valor_nf
*&---------------------------------------------------------------------*
*       Busca o valor da nota fiscal de referência
*----------------------------------------------------------------------*
FORM busca_valor_nf.

  CLEAR j_1bindoc.

  CALL FUNCTION 'J_1B_NF_VALUE_DETERMINATION'
    EXPORTING
      nf_header   = j_1bnfdoc
    IMPORTING
      ext_header  = j_1bindoc
    TABLES
      nf_item     = itab_j_1bnflin
      nf_item_tax = itab_j_1bnfstx.

ENDFORM.                    " busca_valor_nf
*&---------------------------------------------------------------------*
*&      Form  popup_message_alter
*&---------------------------------------------------------------------*
FORM popup_message_alter USING value(p_textline1)
                               value(p_textline2)
                               value(p_title).

  CALL FUNCTION 'POPUP_TO_CONFIRM_STEP'
    EXPORTING
      defaultoption = 'Y'
      textline1     = p_textline1
      textline2     = p_textline2
      titel         = p_title
    IMPORTING
      answer        = v_answer
    EXCEPTIONS
      OTHERS        = 1.

ENDFORM.                    " popup_message_alter
*&---------------------------------------------------------------------*
*&      Form  excluir_parametros
*&---------------------------------------------------------------------*
FORM excluir_parametros USING item.

  IF item = 'X'.
*    delete itab_zynft002 where itmnum = zynft006-itmnum.
*    delete itab_zynft003 where itmnum = zynft006-itmnum.
*    delete itab_zynft004 where itmnum = zynft006-itmnum.
*    clear: zynfe006-nrfiscal, itab_zynft006-nrfiscal, descricao.
*    modify itab_zynft006 transporting nrfiscal
*                   where itmnum = zynfe006-itmnum.
*    message i084.
    PERFORM propor_valores.
  ELSE.
    CLEAR:   itab_zynft002,
             itab_zynft003,
             itab_zynft004,
             itab_zynft009,
             itab_zynft009a,
             itab_zynft009_aux,
             itab_zynft007,
             itab_zynft007_aux,
             itab_zynft007_aux2,
             wa_zynft002.

    REFRESH: itab_zynft002,
             itab_zynft003,
             itab_zynft009,
             itab_zynft009a,
             itab_zynft009_aux,
             itab_zynft007,
             itab_zynft007_aux,
             itab_zynft007_aux2.

    LOOP AT itab_zynft006.
      CLEAR itab_zynft006-nrfiscal.
      MODIFY itab_zynft006 INDEX sy-tabix.
    ENDLOOP.

    MESSAGE s084.
  ENDIF.
ENDFORM.                    " excluir_parametros
*&---------------------------------------------------------------------*
*&      Form  propor_valores
*&---------------------------------------------------------------------*
*       Propõe os valores de acordo com a tabela ZYNFT002
*----------------------------------------------------------------------*
FORM propor_valores.

*  if zynfe005-direct = '1'. "Entrada
*    select * from zynft002 into table itab_zynft002_aux
*               where bukrs    =  zynfe005-bukrs
*                 and cnoor    =  zynfe005-cno
*                 and nftype   =  zynfe005-nftype
*                 and land1    =  v_land1
*                 and blandori =  wk_parnad-regio
*                 and blanddes =  v_bland
*                 and dtvgini  <= sy-datum
*                 and dtvgfin  >= sy-datum.
*  else. "Saída
*    select * from zynft002 into table itab_zynft002_aux
*               where bukrs    =  zynfe005-bukrs
*                 and cnoor    =  zynfe005-cno
*                 and nftype   =  zynfe005-nftype
*                 and land1    =  v_land1
*                 and blandori =  v_bland
*                 and blanddes =  wk_parnad-regio
*                 and dtvgini  <= sy-datum
*                 and dtvgfin  >= sy-datum.
*  endif.

  SELECT * FROM zynft002 INTO TABLE itab_zynft002_aux
             WHERE bukrs    =  zynfe005-bukrs
               AND cnoor    =  zynfe005-cno
               AND nftype   =  zynfe005-nftype
               AND land1    =  v_land1
               AND dtvgini  <= zynfe005-pstdat
               AND dtvgfin  >= zynfe005-pstdat.


* Seta Estado Origem e Estado Destino
  IF zynfe005-direct = '1'. "Entrada
    v_blandori =  wk_parnad-regio.
    v_blanddes =  v_bland.
  ELSE. "Saída
    v_blandori =  v_bland.
    v_blanddes =  wk_parnad-regio.
  ENDIF.


  CLEAR: wa_zynft002      ,
         zynfe006-nrfiscal,
         descricao        .
  READ TABLE itab_zynft006 WITH KEY itmnum = zynfe006-itmnum.
  IF sy-subrc = 0.
    CLEAR itab_zynft006-nrfiscal.
    MODIFY itab_zynft006 INDEX sy-tabix.
  ENDIF.
  DELETE itab_zynft002 WHERE itmnum = zynfe006-itmnum.
  DELETE itab_zynft003 WHERE itmnum = zynfe006-itmnum.
  DELETE itab_zynft004 WHERE itmnum = zynfe006-itmnum.
* Não deve deletar se for a primeira vez
  IF NOT v_ini = 'S'.
    DELETE itab_zynft007 WHERE itmnum = zynfe006-itmnum.
  ENDIF.
* Não deve deletar os itens de impostos se for a primeira ves no
* processo de data entry
  IF zynfe005-data_entry NE 'X' OR v_ini NE 'S'.
    DELETE itab_zynft009 WHERE itmnum = zynfe006-itmnum.
  ENDIF.

  IF itab_zynft002_aux[] IS INITIAL.
    MESSAGE s043.
    EXIT.
  ENDIF.

* Monta tabs. a serem utilizadas no select dinâmico
  PERFORM monta_t_select.
  PERFORM monta_t_space.
* Apagar os registros inválidos
  PERFORM apagar_invalidos.
* Monta range com sequenciais válidos
  PERFORM monta_sequenciais_validos.
* Busca registro a ser proposto
  PERFORM seleciona_dados.

*  read table itab_zynft002_aux into wa_zynft002
*                with key bupla = zynfe005-bupla.
*
*  if sy-subrc = 0.
** tem bupla
*    read table itab_zynft002_aux into wa_zynft002
*                  with key bupla = zynfe005-bupla
*                           parvw = zynfe005-parvw
*                           parid = zynfe005-parid.
*
*    perform propor_valores_com_bupla.
*
*  else.
** não tem bupla
*    read table itab_zynft002_aux into wa_zynft002
*                  with key bupla = space
*                           parvw = zynfe005-parvw
*                           parid = zynfe005-parid.
*
*     perform propor_valores_sem_bupla.
*
*  endif.

  IF wa_zynft002 IS INITIAL.
    READ TABLE itab_zynft002_aux INTO wa_zynft002 INDEX 1.
  ENDIF.

  PERFORM insere_dados_itens.

ENDFORM.                    " propor_valores
*&---------------------------------------------------------------------*
*&      Form  monta_t_select
*&---------------------------------------------------------------------*
FORM monta_t_select.

  REFRESH : t_select_aux, t_select.

  CLEAR t_select.
  CONCATENATE 'BUKRS = ''' zynfe005-bukrs '''' INTO t_select.
  APPEND t_select.

  CLEAR t_select.
  CONCATENATE 'CNOOR = ''' zynfe005-cno '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select SEPARATED BY space.
  APPEND t_select.

  CLEAR t_select.
  CONCATENATE 'NFTYPE = ''' zynfe005-nftype '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select SEPARATED BY space.
  APPEND t_select.

  CLEAR t_select.
  CONCATENATE 'LAND1 = ''' v_land1 '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select SEPARATED BY space.
  APPEND t_select.

  CLEAR t_select.
  CONCATENATE 'DTVGINI <= ''' zynfe005-pstdat '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select SEPARATED BY space.
  APPEND t_select.

  CLEAR t_select.
  CONCATENATE 'DTVGFIN >= ''' zynfe005-pstdat '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select SEPARATED BY space.
  APPEND t_select.

  CLEAR t_select_aux.
  CONCATENATE 'BUPLA = ''' zynfe005-bupla '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'PARVW = ''' zynfe005-parvw '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'PARID = ''' zynfe005-parid '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'MATNR = ''' zynfe006-matnr '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'MTART = ''' zynfe006-mtart '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.


  CLEAR t_select_aux.
  CONCATENATE 'MATKL = ''' zynfe006-matkl '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'NBM = ''' zynfe006-nbm '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'MATORG = ''' zynfe006-matorg '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'ORT01 = ''' v_city1 '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'ORT02 = ''' wk_parnad-ort01 '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'BLANDORI = ''' v_blandori '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'BLANDDES = ''' v_blanddes '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

  CLEAR t_select_aux.
  CONCATENATE 'CONTRIB = ''' v_isento '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_select_aux SEPARATED BY space.
  APPEND t_select_aux.

ENDFORM.                    " monta_t_select
*&---------------------------------------------------------------------*
*&      Form  monta_t_space
*&---------------------------------------------------------------------*
FORM monta_t_space.

  REFRESH : t_space.

  CLEAR t_space.
  CONCATENATE 'BUPLA = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'PARVW = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'PARID = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'MATNR = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'MTART = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'MATKL = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.


  CLEAR t_space.
  CONCATENATE 'NBM = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'MATORG = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'ORT01 = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'ORT02 = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'BLANDORI = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'BLANDDES = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.

  CLEAR t_space.
  CONCATENATE 'CONTRIB = '''  '''' INTO v_aux.
  CONCATENATE 'AND ' v_aux INTO t_space SEPARATED BY space.
  APPEND t_space.


ENDFORM.                    " monta_t_space
*&---------------------------------------------------------------------*
*&      Form  monta_sequenciais_validos
*&---------------------------------------------------------------------*
FORM monta_sequenciais_validos.

  REFRESH t_sequencial.

  LOOP AT itab_zynft002_aux.

    CLEAR t_sequencial.
    t_sequencial-sign = 'I'.
    t_sequencial-option = 'EQ'.
    WRITE : itab_zynft002_aux-nrseq TO t_sequencial-low.
    APPEND t_sequencial.

  ENDLOOP.


ENDFORM.                    " monta_sequenciais_validos
*&---------------------------------------------------------------------*
*&      Form  seleciona_dados
*&---------------------------------------------------------------------*
FORM seleciona_dados.

  DATA itab_zynft002 TYPE TABLE OF zynft002 WITH HEADER LINE.

*  CLEAR : v_cont, t_select.
*
*  READ TABLE t_select_aux INDEX 1.
*  MOVE : t_select_aux TO t_select.
*  APPEND t_select.
*  v_cont = v_cont + 1.
*
*  DO 13 TIMES.
*
*    v_cont = v_cont + 1.
*
*    CLEAR wa_zynft002.
*    SELECT SINGLE * FROM zynft002
*                    INTO wa_zynft002
*                    WHERE (t_select)
*                      AND nrseq IN t_sequencial.
*
*
*    IF sy-subrc NE 0.
*
*      DESCRIBE TABLE t_select LINES v_linhas.
*      DELETE t_select INDEX v_linhas.
*      v_linhas = v_linhas - 6. " Condições fixas que ñ estão tab.aux.
*      READ TABLE t_space INDEX v_linhas.
*      CLEAR t_select.
*      MOVE t_space TO t_select.
*      APPEND t_select.
*
*      " Último registro
*      IF v_cont EQ 14.
*        CLEAR wa_zynft002.
*        SELECT SINGLE * FROM zynft002
*                        INTO wa_zynft002
*                        WHERE (t_select)
*                          AND nrseq IN t_sequencial.
*      ENDIF.
*
*    ENDIF.
*
*    READ TABLE t_select_aux INDEX v_cont.
*    CLEAR t_select.
*    MOVE t_select_aux TO t_select.
*    APPEND t_select.
*
*  ENDDO.

  SELECT * FROM zynft002
  INTO TABLE itab_zynft002
  WHERE nrseq IN t_sequencial
    AND dtvgini <= zynfe005-pstdat
    AND dtvgfin >= zynfe005-pstdat.

  SORT itab_zynft002 BY bupla parvw parid matnr mtart matkl nbm matorg
                        ort01 ort02 blandori blanddes contrib.

  LOOP AT itab_zynft002 WHERE bukrs = zynfe005-bukrs
                        AND cnoor = zynfe005-cno
                        AND nftype = zynfe005-nftype
                        AND land1 = v_land1
                        AND ( bupla = zynfe005-bupla OR bupla = space )
                        AND ( parvw = zynfe005-parvw OR parvw = space )
                        AND ( parid = zynfe005-parid OR parid = space )
                        AND ( matnr = zynfe006-matnr OR matnr = space )
                        AND ( mtart = zynfe006-mtart OR mtart = space )
                        AND ( matkl = zynfe006-matkl OR matkl = space )
                        AND ( nbm = zynfe006-nbm     OR nbm   = space )
                     AND ( matorg = zynfe006-matorg OR matorg = space )
                        AND ( ort01 = v_city1 OR ort01 = space )
                       AND ( ort02 = wk_parnad-ort01 OR ort02 = space )
                      AND ( blandori = v_blandori OR blandori = space )
                      AND ( blanddes = v_blanddes OR blanddes = space )
                        AND ( contrib =  v_isento OR contrib = space ).

  ENDLOOP.

  IF sy-subrc EQ 0.
    MOVE itab_zynft002 TO wa_zynft002.
  ENDIF.


ENDFORM.                    " seleciona_dados
*&---------------------------------------------------------------------*
*&      Form  regime_especial
*&---------------------------------------------------------------------*
*      -->P_PARFIL  text
*----------------------------------------------------------------------*
FORM regime_especial USING    p_parfil.
  DATA: v_seqnum(2).
  DATA: contador(2).

* Tratamento para deletar as mensagens caso o usuário altere o Parceiro
* ou Filial.
  DELETE wk_ftx1 WHERE regime EQ 'X'.
  DELETE wk_ftx  WHERE regime EQ 'X'.

  CLEAR: contador, wk_ftx1, wk_ftx.
* Ordena as mensagens para inserir as novas.
  LOOP AT wk_ftx1.
    contador = contador + 1.
    LOOP AT wk_ftx WHERE seqnum  = wk_ftx1-seqnum.
      wk_ftx-seqnum  = contador.
      MODIFY: wk_ftx.
    ENDLOOP.
    wk_ftx1-seqnum = contador.
    MODIFY: wk_ftx1.
  ENDLOOP.

  CLEAR: itab_zynft012, itab_j_1batl1t.

* Select para achar a Situação Tributária do Estado (TAXLAW).
  IF zynfe005-direct = 1.                        "Nota Fiscal de Entrada
    SELECT * FROM zynft012 INTO TABLE itab_zynft012
           WHERE bland   = p_parfil
             AND entrada = 'X'.
  ELSEIF zynfe005-direct = 2.                    "Nota Fiscal de Saída
    SELECT * FROM zynft012 INTO TABLE itab_zynft012
           WHERE bland   = p_parfil
             AND saida = 'X'.
  ENDIF.
* Seleciona todas as leis para a Situação Tributária do Estado.
  IF NOT itab_zynft012[] IS INITIAL.

    SELECT taxlaw line1 line2 line3 line4
          FROM j_1batl1t
          INTO TABLE itab_j_1batl1t
          FOR ALL ENTRIES IN itab_zynft012
          WHERE taxlaw =  itab_zynft012-taxlaw
            AND line1  NE space.

    IF NOT itab_j_1batl1t[] IS INITIAL.

      LOOP AT itab_j_1batl1t.

        CLEAR: wk_ftx1, wk_ftx, v_seqnum.

        DESCRIBE TABLE wk_ftx1 LINES v_seqnum.

        v_seqnum = v_seqnum + 1.

        MOVE: v_seqnum               TO wk_ftx-seqnum ,
              '01'                   TO wk_ftx-linnum ,
              itab_j_1batl1t-line1   TO wk_ftx-message,
              'X'                    TO wk_ftx-regime ,

              v_seqnum               TO wk_ftx1-seqnum ,
              '01'                   TO wk_ftx1-linnum ,
              itab_j_1batl1t-line1   TO wk_ftx1-message,
              'X'                    TO wk_ftx1-regime.
        APPEND: wk_ftx,
                wk_ftx1.


        IF NOT itab_j_1batl1t-line2 IS INITIAL.
          MOVE: v_seqnum               TO wk_ftx-seqnum ,
                '02'                   TO wk_ftx-linnum ,
                itab_j_1batl1t-line2   TO wk_ftx-message,
                'X'                    TO wk_ftx-regime.
          APPEND: wk_ftx.
        ENDIF.

        IF NOT itab_j_1batl1t-line3 IS INITIAL.
          MOVE: v_seqnum               TO wk_ftx-seqnum ,
                '03'                   TO wk_ftx-linnum ,
                itab_j_1batl1t-line3   TO wk_ftx-message,
                'X'                    TO wk_ftx-regime.
          APPEND: wk_ftx.
        ENDIF.

        IF NOT itab_j_1batl1t-line4 IS INITIAL.
          MOVE: v_seqnum               TO wk_ftx-seqnum ,
                '04'                   TO wk_ftx-linnum ,
                itab_j_1batl1t-line4   TO wk_ftx-message,
                'X'                    TO wk_ftx-regime.
          APPEND: wk_ftx.
        ENDIF.
      ENDLOOP.
    ENDIF.
  ENDIF.
ENDFORM.                    " regime_especial
*&---------------------------------------------------------------------*
*&      Form  update_parametros
*&---------------------------------------------------------------------*
*  Atualiza as vigências das tabelas de parâmetros ZYNFT00(1, 2, 3 e 4)
*----------------------------------------------------------------------*
FORM update_parametros.

* Tabela ZYNFT001
* Atualiza as vigências encerradas
  UPDATE zynft001 SET status  = 'E'
                      WHERE dtvgfin < sy-datum.

* Atualiza as vigências inativas
  UPDATE zynft001 SET status  = 'I'
                      WHERE dtvgini > sy-datum.

* Atualiza as vigências ativas
  UPDATE zynft001 SET status  = 'A'
                      WHERE dtvgini <= sy-datum
                        AND dtvgfin >= sy-datum.
*-------------------------------------------------*
* Tabela ZYNFT002
* Atualiza as vigências encerradas
  UPDATE zynft002 SET status  = 'E'
                      WHERE dtvgfin < sy-datum.

* Atualiza as vigências inativas
  UPDATE zynft002 SET status  = 'I'
                      WHERE dtvgini > sy-datum.

* Atualiza as vigências ativas
  UPDATE zynft002 SET status  = 'A'
                      WHERE dtvgini <= sy-datum
                        AND dtvgfin >= sy-datum.
*-------------------------------------------------*
* Tabela ZYNFT003
* Atualiza as vigências encerradas
  UPDATE zynft003 SET status  = 'E'
                      WHERE dtvgfin < sy-datum.

* Atualiza as vigências inativas
  UPDATE zynft003 SET status  = 'I'
                      WHERE dtvgini > sy-datum.

* Atualiza as vigências ativas
  UPDATE zynft003 SET status  = 'A'
                      WHERE dtvgini <= sy-datum
                        AND dtvgfin >= sy-datum.
*-------------------------------------------------*
* Tabela ZYNFT004
* Atualiza as vigências encerradas
  UPDATE zynft004 SET status  = 'E'
                      WHERE dtvgfin < sy-datum.

* Atualiza as vigências inativas
  UPDATE zynft004 SET status  = 'I'
                      WHERE dtvgini > sy-datum.

* Atualiza as vigências ativas
  UPDATE zynft004 SET status  = 'A'
                      WHERE dtvgini <= sy-datum
                        AND dtvgfin >= sy-datum.

ENDFORM.                    " update_parametros
*&---------------------------------------------------------------------*
*&      Form  entrada_comandada
*&---------------------------------------------------------------------*
* Cria uma nota fiscal de entrada para a filial indicada na nota. Para
* isso o campo Entrada Comandada da tabela ZYNFT001, para a natureza em
* questão, deve estar flegado.
* Quando formos cadastrar os parâmetros fiscais para essa natureza, os
* campos Ctg.Destino e CNO Destino serão obrigatórios.
*----------------------------------------------------------------------*
FORM entrada_comandada.

  CHECK wa_zynft001-transfnf EQ 'X'.
  CHECK zynfe005-nrseq_comand IS INITIAL.

  SELECT SINGLE * FROM  j_1bad
         WHERE  parvw       = zynfe005-parvw.

  CHECK j_1bad-partyp EQ 'B'.

  CLEAR:   wa_zynft005aux, itab_zynft006aux.
  REFRESH: itab_zynft006aux.

  MOVE: zynfe005      TO wa_zynft005aux  ,
        itab_zynft006[] TO itab_zynft006aux[].

  CLEAR: wa_zynft005aux-pstdat, wa_zynft005aux-docnum.

  IF itab_zynft002[] IS INITIAL.
    SELECT * FROM zynft002 INTO TABLE itab_zynft002
     WHERE bukrs    =  zynfe005-bukrs
       AND cnoor    =  zynfe005-cno
       AND nftype   =  zynfe005-nftype
       AND land1    =  v_land1
       AND dtvgini  <= zynfe005-pstdat
       AND dtvgfin  >= zynfe005-pstdat.
  ENDIF.

  READ TABLE itab_zynft002 WITH KEY cnoor = zynfe005-cno.
  IF sy-subrc EQ 0.
    MOVE: itab_zynft002-cnodest    TO wa_zynft005aux-cno       ,
          itab_zynft002-nftypedest TO wa_zynft005aux-nftype    ,
          zynfe005-mainbukrs       TO wa_zynft005aux-bukrs     ,
          zynfe005-bukrs           TO wa_zynft005aux-mainbukrs ,
          zynfe005-bupla           TO wa_zynft005aux-mainbranch,
          zynfe005-mainbranch      TO wa_zynft005aux-bupla     ,
          'I'                      TO wa_zynft005aux-status    .

* Verifica o data_entry
    v_entry = ' '.
    PERFORM define_screen_control USING wa_zynft005aux-nftype v_entry.

    PERFORM gera_sequencial CHANGING wa_zynft005aux-nrseq.

    LOOP AT itab_zynft006aux.
      CLEAR: itab_zynft006aux-cfop, itab_zynft006aux-nrfiscal,
      itab_zynft006aux-nrseq.
      itab_zynft006aux-nrseq = wa_zynft005aux-nrseq.
      MODIFY itab_zynft006aux.
    ENDLOOP.

* Salvando cabeçalho (criação)
    INSERT INTO zynft005 VALUES wa_zynft005aux.
    MOVE: wa_zynft005aux-nrseq TO zynfe005-nrseq_comand.
*    update zynft005 set nrseq_comand  = wa_zynft005aux-nrseq
*                     where nrseq = zynfe005-nrseq.

* Salvando os itens
    MODIFY zynft006 FROM TABLE itab_zynft006aux.

    COMMIT WORK AND WAIT.

* Salvando as mensagens criadas pelo usuário.
* Verifica se há registros em branco nas tabelas wk_ftx e wk_ftx1.
    DELETE wk_ftx WHERE message EQ space.
    DELETE wk_ftx1 WHERE message EQ space.

    CLEAR: xthead, rtext.
    REFRESH: xthead, rtext.

* se não houver o registro na TTXOB e TTXID, gravar
    PERFORM gravar_ttxob_ttxid.

    LOOP AT wk_ftx WHERE regime EQ space.
      CONCATENATE wk_ftx-regime wk_ftx-seqnum wk_ftx-message INTO
          rtext-tdline.
      APPEND rtext.
    ENDLOOP.

    CLEAR v_tdname.
    CONCATENATE 'ZYNF005' wa_zynft005aux-nrseq INTO v_tdname.

    xthead-tdobject   = 'ZYNF005'.        "Objeto Fixo
    xthead-tdname     = v_tdname .        "ID do texto
    xthead-tdid       = 'ZYNF'   .        "Constante
    xthead-tdspras    = sy-langu .        "Idioma
    xthead-tdlinesize = 072      .        "Larg. linha do editor
    APPEND xthead.

    CALL FUNCTION 'SAVE_TEXT'             "Função salvar cpo. texto
         EXPORTING
            client          = sy-mandt
            header          = xthead      "Estrut. parâm. passados
            insert          = 'X'
            savemode_direct = 'X'
            owner_specified = 'X'
         TABLES
            lines           = rtext       "Recebe conteúdo Tab.Int.
         EXCEPTIONS
            id             = 1
            language       = 2
            name           = 3
            object         = 4
            OTHERS         = 5.

    MESSAGE i090 WITH wa_zynft005aux-nrseq.

  ENDIF.

ENDFORM.                    " entrada_comandada
*&---------------------------------------------------------------------*
*&      Form  pesquisa_comandada
*&---------------------------------------------------------------------*
* Abre a tela 0003 que permite a pesquisa das entrada comandadas.
*----------------------------------------------------------------------*
FORM pesquisa_comandada.

  CLEAR zynfe005-docnum.
  CALL SCREEN '0003' STARTING AT 20 05 ENDING AT 50 07.


ENDFORM.                    " pesquisa_comandada
*&---------------------------------------------------------------------*
*&      Form  move_comandada
*&---------------------------------------------------------------------*
FORM move_comandada.

  SELECT SINGLE * FROM zynft005
                   WHERE docnum = zynfe005-docnum.

  IF sy-subrc EQ 0.
    IF zynft005-nrseq_comand IS INITIAL.
      MESSAGE i088 WITH zynft005-nrseq.
    ELSE.
      MOVE: zynft005-nrseq_comand TO zynfe005-nrseq.
      SET SCREEN 0.
    ENDIF.
  ELSE.
    MESSAGE i089 WITH zynfe005-docnum.
  ENDIF.

ENDFORM.                    " move_comandada

* >>> Modificação ID 34 - 26/09/2011 - Início
*&---------------------------------------------------------------------*
*&      Form  format_date
*&---------------------------------------------------------------------*
* Converte data no formato YYYYMMDD, para data no formato DD/MMM/YYYY
* Converts data from format YYYYMMDD to format DD/MMM/YYYY
*----------------------------------------------------------------------*
form format_date using    input_date
                 changing formated_date.

*----------------------------------------------------------------------*
* Variável Local                                                       *
*----------------------------------------------------------------------*
  data: int_month type i,
        day(2),
        month(2),
        year(4),
        month_name(3),
        meses(36).

  meses = 'JanFebMarAprMayJunJulAugSepOctNovDec'.

  day   = input_date+6(2).
  month = input_date+4(2).
  year  = input_date(4).

  if month = '00' OR month is initial.
    clear formated_date.
  else.
    int_month  = ( month - 1 ) * 3.
    month_name = meses+int_month(3).

    concatenate day '/'
                month_name '/'
                year
           into formated_date.
  endif.

endform.                              "format_date

*&---------------------------------------------------------------------*
*&      Form  format_date
*&---------------------------------------------------------------------*
* Converte data no formato DD/MMM/YYYY, para data no formato YYYYMMDD
*&---------------------------------------------------------------------*
form format_date_2 using    input_date
                   changing formated_date.

  if input_date is initial.

    clear formated_date.

  else.

* Ano
    formated_date(04) = input_date+7(04).

* Mês
    case input_date+3(03).
      when 'Jan'.
        formated_date+4(02) = '01'.
      when 'Feb'.
        formated_date+4(02) = '02'.
      when 'Mar'.
        formated_date+4(02) = '03'.
      when 'Apr'.
        formated_date+4(02) = '04'.
      when 'May'.
        formated_date+4(02) = '05'.
      when 'Jun'.
        formated_date+4(02) = '06'.
      when 'Jul'.
        formated_date+4(02) = '07'.
      when 'Aug'.
        formated_date+4(02) = '08'.
      when 'Sep'.
        formated_date+4(02) = '09'.
      when 'Oct'.
        formated_date+4(02) = '10'.
      when 'Nov'.
        formated_date+4(02) = '11'.
      when 'Dec'.
        formated_date+4(02) = '12'.
    endcase.

* Dia
    formated_date+6(02) = input_date(02).

  endif.

endform.                              "format_date

*&---------------------------------------------------------------------*
*&      Form  SET_SCREEN_0170
*&---------------------------------------------------------------------*
*       Trata destravamento tela 0170 e 0180
*----------------------------------------------------------------------*
FORM SET_SCREEN_0170_0180.

  read table itab_zynft006 index 1.

  if sy-subrc is initial.

    loop at screen.

*            if itab_zynft006-cfop(01) = '3'.
      if 'C' = 'B'.

        if screen-group1 = 'IMP'.
          screen-input = 1.
        elseif screen-group1 = 'EXP'.
          screen-input = 0.
        endif.

*           elseif itab_zynft006-cfop(01) = '7'.
      elseif 'C' = 'C'.

        if screen-group1 = 'IMP'.
          screen-input = 0.
        elseif screen-group1 = 'EXP'.
          screen-input = 1.
        endif.

      else.

        if screen-group1 = 'IMP' or
           screen-group1 = 'EXP'.
          screen-input = 0.
        endif.

      endif.

      modify screen.

    endloop.

  else.

    loop at screen.

      if screen-group1 = 'IMP' or
         screen-group1 = 'EXP'.
        screen-input = 0.
      endif.

      modify screen.

    endloop.

  endif.

ENDFORM.                    " SET_SCREEN_0170

*&---------------------------------------------------------------------*
*&      Form  PREPARA_CAMPOS_0170
*&---------------------------------------------------------------------*
*       Prepara campos. Limpa os campos ou não de acordo com a regra
*       do CFOP da EF ID34
*----------------------------------------------------------------------*
FORM PREPARA_CAMPOS_0170 .

  read table itab_zynft006 index 1.

  if sy-subrc is initial.

    if itab_zynft006-cfop(01) <> '7'.

      clear: WA_ZYNFT013-UF_EMBARQUE,
             WA_ZYNFT013-LOC_EMBARQUE.


    endif.

  else.

    clear: WA_ZYNFT013-UF_EMBARQUE,
           WA_ZYNFT013-LOC_EMBARQUE.

  endif.

ENDFORM.                    " PREPARA_CAMPOS_0170

*&---------------------------------------------------------------------*
*&      Form  PREPARA_CAMPOS_0180
*&---------------------------------------------------------------------*
*       Prepara campos. Limpa os campos ou não de acordo com a regra
*       do CFOP da EF ID34
*----------------------------------------------------------------------*
FORM PREPARA_CAMPOS_0180 .

  read table itab_zynft006 index 1.

  if sy-subrc is initial.

    if itab_zynft006-cfop(01) <> '3'.

      clear: WA_ZYNFT014-NUM_DI,
             WA_ZYNFT014-LOC_DESEMBARACO,
             V_DT_DESEMBARACO,
             V_HR_DESEMBARACO,
             WA_ZYNFT014-NADICAO,
             WA_ZYNFT014-CFABRICANTE,
             WA_ZYNFT014-VLR_BASE_CALCULO,
             WA_ZYNFT014-VLR_IMPOSTO,
             V_DT_DI,
             V_HR_DI,
             WA_ZYNFT014-UF_DESEMBARACO,
             WA_ZYNFT014-CODIGO_EXP,
             WA_ZYNFT014-NSEQADIC,
             WA_ZYNFT014-VDESCDI,
             WA_ZYNFT014-VLR_DESPESA,
             WA_ZYNFT014-VLR_IOF.


    endif.

  else.

    clear: WA_ZYNFT014-NUM_DI,
           WA_ZYNFT014-LOC_DESEMBARACO,
           V_DT_DESEMBARACO,
           V_HR_DESEMBARACO,
           WA_ZYNFT014-NADICAO,
           WA_ZYNFT014-CFABRICANTE,
           WA_ZYNFT014-VLR_BASE_CALCULO,
           WA_ZYNFT014-VLR_IMPOSTO,
           V_DT_DI,
           V_HR_DI,
           WA_ZYNFT014-UF_DESEMBARACO,
           WA_ZYNFT014-CODIGO_EXP,
           WA_ZYNFT014-NSEQADIC,
           WA_ZYNFT014-VDESCDI,
           WA_ZYNFT014-VLR_DESPESA,
           WA_ZYNFT014-VLR_IOF.

  endif.

ENDFORM.                    " PREPARA_CAMPOS_0180

*&---------------------------------------------------------------------*
*&      Form  SEARCH_HELP_0170
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SEARCH_HELP_0170 .

  TYPES: begin of ty_match,
           KUNNR    TYPE kna1-KUNNR,
           NAME1    TYPE kna1-NAME1,
           STRAS    TYPE kna1-STRAS,
           ORT01    TYPE kna1-ORT01,
           REGIO    TYPE kna1-REGIO,
         end of ty_match,

         begin of ty_selecao,
           value(80) type c,
         end of ty_selecao.

  DATA: tl_match    TYPE TABLE OF ty_match   with header line,
        tl_campos   type table of help_value with header line,
        tl_selecao  type table of ty_selecao with header line,
        tl_valores  type table of help_vtab  with header line,
        tl_tela     type table of dynpread   with header line.

* Seleção dos dados do Search Help
  refresh tl_match[].
  SELECT kunnr name1 stras ort01 regio
    from kna1
    into table tl_match
    where ktokd = 'ZE92'.

  if sy-subrc is initial.

* Campos da exibição
    refresh tl_campos[].

    clear tl_campos.
    move: 'KNA1'  to tl_campos-tabname,
          'KUNNR' to tl_campos-fieldname,
          'X'     to tl_campos-selectflag.
    append tl_campos.

    clear tl_campos.
    move: 'KNA1'  to tl_campos-tabname,
          'NAME1' to tl_campos-fieldname,
          'X'     to tl_campos-selectflag.
    append tl_campos.

    clear tl_campos.
    move: 'KNA1'  to tl_campos-tabname,
          'STRAS' to tl_campos-fieldname,
          'X'     to tl_campos-selectflag.
    append tl_campos.

    clear tl_campos.
    move: 'KNA1'  to tl_campos-tabname,
          'ORT01' to tl_campos-fieldname,
          'X'     to tl_campos-selectflag.
    append tl_campos.

    clear tl_campos.
    move: 'KNA1'  to tl_campos-tabname,
          'REGIO' to tl_campos-fieldname,
          'X'     to tl_campos-selectflag.
    append tl_campos.

* Valores a serem exibidos
    refresh tl_selecao[].
    loop at tl_match.

      clear tl_selecao.
      move tl_match-kunnr to tl_selecao-value.
      append tl_selecao.

      clear tl_selecao.
      move tl_match-name1 to tl_selecao-value.
      append tl_selecao.

      clear tl_selecao.
      move tl_match-stras to tl_selecao-value.
      append tl_selecao.

      clear tl_selecao.
      move tl_match-ort01 to tl_selecao-value.
      append tl_selecao.

      clear tl_selecao.
      move tl_match-regio to tl_selecao-value.
      append tl_selecao.

    endloop.

    call function 'HELP_VALUES_GET_WITH_TABLE_EXT'
      TABLES
        fields                    = tl_campos
        select_values             = tl_valores
        valuetab                  = tl_selecao
      EXCEPTIONS
        field_not_in_ddic         = 1
        more_then_one_selectfield = 2
        no_selectfield            = 3
        others                    = 4.

    if sy-subrc is initial.

      clear tl_valores.
      read table tl_valores with key fieldname = 'NAME1'.
      if sy-subrc is initial.

        WA_ZYNFT013-LOC_EMBARQUE = tl_valores-value.

      endif.

      clear tl_valores.
      read table tl_valores with key fieldname = 'REGIO'.
      if sy-subrc is initial.

        refresh tl_tela[].

        clear tl_tela.
        tl_tela-fieldname  = 'WA_ZYNFT013-UF_EMBARQUE'.
        tl_tela-fieldvalue = tl_valores-value.
        append tl_tela.

* Atualizando tela
        call function 'DYNP_VALUES_UPDATE'
          EXPORTING
            dyname               = sy-cprog
            dynumb               = sy-dynnr
          TABLES
            dynpfields           = tl_tela
          EXCEPTIONS
            invalid_abapworkarea = 1
            invalid_dynprofield  = 2
            invalid_dynproname   = 3
            invalid_dynpronummer = 4
            invalid_request      = 5
            no_fielddescription  = 6
            undefind_error       = 7
            others               = 8.

      endif.

    endif.

  endif.

ENDFORM.                    " SEARCH_HELP_0170
* <<< Modificação ID 34 - 26/09/2011 - Fim